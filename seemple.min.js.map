{"version":3,"sources":["webpack://Seemple/webpack/universalModuleDefinition","webpack://Seemple/webpack/bootstrap","webpack://Seemple/./node_modules/@babel/runtime/helpers/typeof.js","webpack://Seemple/./src/_helpers/foreach.js","webpack://Seemple/./src/trigger/_triggerone.js","webpack://Seemple/./src/_core/defs.js","webpack://Seemple/./src/_helpers/seempleerror.js","webpack://Seemple/./src/_helpers/forown.js","webpack://Seemple/./src/_core/init.js","webpack://Seemple/./src/_helpers/assign.js","webpack://Seemple/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://Seemple/./src/_helpers/checkobjecttype.js","webpack://Seemple/./src/_helpers/apply.js","webpack://Seemple/./src/on/_addlistener.js","webpack://Seemple/./src/_dom/default-dollar.js","webpack://Seemple/./src/_dom/index.js","webpack://Seemple/./src/bindnode/_bindsinglenode.js","webpack://Seemple/./src/bindnode/_createnodehandler.js","webpack://Seemple/./src/bindnode/_createobjecthandler.js","webpack://Seemple/./src/bindnode/index.js","webpack://Seemple/./src/bindnode/_createbindingswitcher.js","webpack://Seemple/./src/_core/defineprop.js","webpack://Seemple/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://Seemple/./src/set.js","webpack://Seemple/./src/off/_removelistener.js","webpack://Seemple/./node_modules/common-binders/index.js","webpack://Seemple/./src/unbindnode/_removebinding.js","webpack://Seemple/./src/unbindnode/index.js","webpack://Seemple/./src/class.js","webpack://Seemple/./src/off/_undelegatelistener.js","webpack://Seemple/./src/bindnode/_getnodes.js","webpack://Seemple/./src/binders/input.js","webpack://Seemple/./src/on/_splitbyspaceregexp.js","webpack://Seemple/./src/on/index.js","webpack://Seemple/./src/off/index.js","webpack://Seemple/./src/once.js","webpack://Seemple/./src/ondebounce.js","webpack://Seemple/./src/trigger/_triggeronedomevent.js","webpack://Seemple/./src/trigger/_triggerdomevent.js","webpack://Seemple/./src/trigger/index.js","webpack://Seemple/./src/bindoptionalnode.js","webpack://Seemple/./src/bindsandbox.js","webpack://Seemple/./src/select.js","webpack://Seemple/./src/selectall.js","webpack://Seemple/./src/remove.js","webpack://Seemple/./src/mediate.js","webpack://Seemple/./src/instantiate.js","webpack://Seemple/./src/chain.js","webpack://Seemple/./src/seemple/_staticmembers.js","webpack://Seemple/./src/toseemple.js","webpack://Seemple/./src/usedomlibrary.js","webpack://Seemple/./src/seemple/_prototype.js","webpack://Seemple/./src/seemple/index.js","webpack://Seemple/./src/array/_afterinit.js","webpack://Seemple/./src/array/_cheaprecreate.js","webpack://Seemple/./src/array/orderby/_pureorderby.js","webpack://Seemple/./src/array/_processrendering/renderitemnode.js","webpack://Seemple/./src/array/_processrendering/checkalreadyrendered.js","webpack://Seemple/./src/array/_processrendering/getalreadyrendered.js","webpack://Seemple/./src/array/_processrendering/processremove.js","webpack://Seemple/./src/array/_processrendering/index.js","webpack://Seemple/./src/array/_processrendering/processpush.js","webpack://Seemple/./src/array/_processrendering/processunshift.js","webpack://Seemple/./src/array/_processrendering/processsort.js","webpack://Seemple/./src/array/_processrendering/processrerender.js","webpack://Seemple/./src/array/_processrendering/processrecreate.js","webpack://Seemple/./src/array/_processrendering/processspliceadd.js","webpack://Seemple/./src/array/_reportmodified.js","webpack://Seemple/./src/array/pull.js","webpack://Seemple/./src/array/recreate/_updateobject.js","webpack://Seemple/./src/array/recreate/_updatetracked.js","webpack://Seemple/./src/array/_toseemplearray.js","webpack://Seemple/./src/array/_pseudonativemethods/createsortingmethod.js","webpack://Seemple/./src/array/_pseudonativemethods/createremovingmethod.js","webpack://Seemple/./src/array/_pseudonativemethods/createaddingmethod.js","webpack://Seemple/./src/array/_pseudonativemethods/createsplice.js","webpack://Seemple/./src/array/_pseudonativemethods/createcopywithin.js","webpack://Seemple/./src/array/_pseudonativemethods/createfill.js","webpack://Seemple/./src/array/_pseudonativemethods/createpseudonativemethod.js","webpack://Seemple/./src/array/_pseudonativemethods/index.js","webpack://Seemple/./src/array/_pseudonativemethods/concat.js","webpack://Seemple/./src/array/_pseudonativemethods/keys.js","webpack://Seemple/./src/array/_pseudonativemethods/values.js","webpack://Seemple/./src/array/_pseudonativemethods/entries.js","webpack://Seemple/./src/array/_prototype.js","webpack://Seemple/./src/array/mediateitem.js","webpack://Seemple/./src/array/orderby/index.js","webpack://Seemple/./src/array/recreate/index.js","webpack://Seemple/./src/array/rerender.js","webpack://Seemple/./src/array/restore.js","webpack://Seemple/./src/array/tojson.js","webpack://Seemple/./src/array/iterator.js","webpack://Seemple/./src/array/_staticmembers.js","webpack://Seemple/./src/array/of.js","webpack://Seemple/./src/array/from.js","webpack://Seemple/./src/array/index.js","webpack://Seemple/./src/on/_delegatelistener/arrayaddhandler.js","webpack://Seemple/./src/on/_delegatelistener/objectsethandler.js","webpack://Seemple/./src/on/_delegatelistener/arrayremovehandler.js","webpack://Seemple/./src/on/_delegatelistener/objectremovehandler.js","webpack://Seemple/./src/on/_delegatelistener/changehandler.js","webpack://Seemple/./src/on/_delegatelistener/index.js","webpack://Seemple/./src/_helpers/debounce.js","webpack://Seemple/./src/calc/_addsource.js","webpack://Seemple/./src/_helpers/deepfind.js","webpack://Seemple/./src/calc/index.js","webpack://Seemple/./src/calc/_createcalchandler.js","webpack://Seemple/./src/lookforbinder.js","webpack://Seemple/./src/seemple/_afterinit.js","webpack://Seemple/./src/on/_domeventregexp.js","webpack://Seemple/./src/bindnode/_selectnodes.js","webpack://Seemple/./src/defaultbinders.js","webpack://Seemple/./src/parserbrackets.js","webpack://Seemple/./src/_helpers/is.js","webpack://Seemple/./src/_helpers/toarray.js","webpack://Seemple/./src/_dom/mq/_html2nodelist.js","webpack://Seemple/./src/_dom/mq/_init.js","webpack://Seemple/./src/_dom/mq/_data.js","webpack://Seemple/./src/_dom/mq/on.js","webpack://Seemple/./src/_dom/mq/off.js","webpack://Seemple/./src/_dom/mq/index.js","webpack://Seemple/./src/_dom/mq/parsehtml.js","webpack://Seemple/./src/_dom/mq/add.js","webpack://Seemple/./src/binders/textarea.js","webpack://Seemple/./src/binders/select.js","webpack://Seemple/./src/binders/progress.js","webpack://Seemple/./src/binders/output.js","webpack://Seemple/./src/parsebindings/_parserdata.js","webpack://Seemple/./src/parsebindings/_processtextnode.js","webpack://Seemple/./src/parsebindings/_processattribute/_definehiddencontentproperty.js","webpack://Seemple/./src/parsebindings/_processattribute/_getbindingkey.js","webpack://Seemple/./src/parsebindings/_processattribute/index.js","webpack://Seemple/./src/parsebindings/index.js","webpack://Seemple/./src/on/_addtreelistener.js","webpack://Seemple/./src/off/_removetreelistener.js","webpack://Seemple/./src/object/_afterinit.js","webpack://Seemple/./src/object/setdata.js","webpack://Seemple/./src/object/_prototype.js","webpack://Seemple/./src/object/adddatakeys.js","webpack://Seemple/./src/object/removedatakeys.js","webpack://Seemple/./src/object/isdatakey.js","webpack://Seemple/./src/object/keys.js","webpack://Seemple/./src/object/values.js","webpack://Seemple/./src/object/entries.js","webpack://Seemple/./src/object/keyof.js","webpack://Seemple/./src/object/tojson.js","webpack://Seemple/./src/object/each.js","webpack://Seemple/./src/object/iterator.js","webpack://Seemple/./src/object/index.js","webpack://Seemple/./src/index.js","webpack://Seemple/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://Seemple/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://Seemple/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://Seemple/./src/off/_removedomlistener.js","webpack://Seemple/./node_modules/common-binders/html.js","webpack://Seemple/./node_modules/common-binders/display.js","webpack://Seemple/./node_modules/common-binders/classname.js","webpack://Seemple/./node_modules/common-binders/_classlist.js","webpack://Seemple/./node_modules/common-binders/prop.js","webpack://Seemple/./node_modules/common-binders/attr.js","webpack://Seemple/./node_modules/common-binders/text.js","webpack://Seemple/./node_modules/common-binders/style.js","webpack://Seemple/./node_modules/common-binders/dataset.js","webpack://Seemple/./node_modules/common-binders/existence.js","webpack://Seemple/./src/on/_adddomlistener.js","webpack://Seemple/./src/on/_createdomeventhandler.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_typeof","obj","iterator","constructor","forEach","arr","callback","length","triggerOne","triggerArgs","def","defs","events","Array","event","latestEvent","ctx","apply","info","PseudoMap","assign","seempleData","set","data","writable","configurable","has","WeakMap","arrayErrorPrefix","getTypeError","variable","variableName","expectedType","getType","errors","method","node","selectorInfo","missing","$nodes","target","sourceKey","sourceObject","source","Model","selector","toRemove","names","seempleError","getError","Error","forOwn","keys","objectId","initSeemple","props","id","_afterInit","TypeError","output","index","arguments","nextValue","nextKey","checkObjectType","typeofObject","func","context","args","undefined","propModEventReg","addListener","allEvents","skipChecks","domEventExecResult","domEventReg","exec","eventName","addDomListener","require","existingEvent","argCallback","_callback","eventCallback","push","test","defineProp","replace","neededMethods","globalDollar","$","useGlobalDollar","fn","parseHTML","mq","spaceReg","bindSingleNode","binder","objectHandler","nodeHandler","givenBinder","eventOptions","propDef","silent","getValueOnBind","setValueOnBind","debounceSetValue","debounceGetValue","debounceSetValueOnBind","debounceGetValueOnBind","debounceSetValueDelay","debounceGetValueDelay","useExactBinder","bindings","bindingOptions","self","isUndefined","isSeempleArray","foundBinder","lookForBinder","getValue","setValue","on","initialize","debouncedNodeHandler","syncNodeHandler","domEvent","disabled","previousValue","which","ctrlKey","altKey","originalEvent","preventDefault","stopPropagation","is","fromNode","changedNode","onChangeValue","createNodeHandler","debounce","split","evtName","addEventListener","debouncedObjectHandler","syncObjectHandler","evtBinder","dirtyHackValue","createObjectHandler","extendedEventOptions","bindNode","this","isSeemple","temporaryOptionalFlag","optional","itemKey","itemNode","itemBinder","itemEventOptions","commonEventOptions","mergedEventOptions","keyObjValue","keyObjKey","keyObjValueItem","exactKey","getNodes","deepPath","deepPathLength","bindingSwitcher","previousTarget","changeEvent","lastDeepPathItem","restPath","unbindNode","createBindingSwitcher","addTreeListener","slice","$allNodes","allNodes","nodes","add","oneNode","errorAccessor","noAccessor","setter","mediator","v","fromSetter","arrayWithHoles","iterableToArrayLimit","nonIterableRest","objVal","objKey","newValue","skipMediator","fromMediator","force","forceHTML","silentHTML","skipCalc","isChanged","triggerChange","beforechangeEventName","changeBindingsEventName","changeEventName","changeDepsEventName","changeDelegatedKeyEventName","changeTreeEventName","changeCommonEventName","removeListener","retain","noTrigger","removeDomListener","allEventsItem","allEventsName","removeEventData","html","display","className","prop","attr","text","style","dataset","existence","removeBinding","binding","destroy","removeEventListener","deep","propsItem","propsKey","removeTreeListener","retainBindings","retainNodes","nodesItem","dom","staticNamesProperty","getOwnPropertySymbols","Class","staticProps","Constructor","Parent","proto","parentStaticNames","symbols","symbol","staticNames","_","detatchDelegatedLogic","delegatedEventName","pathStr","undelegateListener","givenPath","path","join","delegatedAddEvtName","delegatedRemoveEvtName","item","isSeempleObject","delegatedSetEvtName","each","delegatedChangeEvtName","htmlReg","customSelectorReg","selectNodes","input","type","checked","givenNames","triggerOnInit","isNamesVarArray","namesObjCallback","namesObjName","splitBySpaceReg","delegatedEventParts","delegatedName","delegateListener","off","propName","eventNamespace","once","givenCallback","onceCallback","onDebounce","givenDelay","delay","triggerOneDOMEvent","document","Event","createEvent","initEvent","bubbles","cancelable","seempleTriggerArgs","dispatchEvent","triggerDOMEvent","descendants","querySelectorAll","descendant","trigger","domEvtExecResult","triggerDomEvent","bindOptionalNode","bindSandbox","evt","customSelectorTestReg","select","sandbox","selected","querySelector","selectAll","result","toArray","remove","givenKey","prefix","mediate","givenKeys","isKeysArray","propMediator","createMediator","defaultUpdateFunction","instance","recreate","setData","replaceData","instantiate","UsedClass","givenUpdateFunction","updateFunction","createInstantiateMediator","methodNames","universalMethods","methodName","argument","ChainClass","defaultBinders","binders","parserBrackers","toSeemple","SeempleObject","SeempleArray","arrayItems","useDOMLibrary","library","chain","instanceMembers","Seemple","staticMembers","modelItemMediator","toJSON","changeModel","mediateItem","changeItemRendererHandler","forceRerender","rerender","cheapRecreate","newItems","newLength","oldLength","lengthDiff","pureOrderBy","orders","commonOrder","sort","a","b","order","htmlTestReg","renderItemNode","selfDef","renderer","bindRenderedAsSandbox","itemRenderer","usedRenderer","rendererContext","selfId","moveSandbox","itemDef","renderedInArrays","sandboxPropDef","__replacedByNode","parentArray","trim","innerHTML","parsed","parseBindings","onRender","onItemRender","checkAlreadyRendered","getAlreadyRendered","processRemove","container","removed","removeChild","processRendering","added","appendChild","processPush","firstChild","insertBefore","processUnshift","processSort","alreadyRenderedNode","contains","processRerender","alreadyRenderedMap","processRecreate","nextNode","nextIndex","lastIndexOf","next","processSpliceAdd","reportModified","dontRender","addedLength","removedLength","modified","renderIfPossible","addone","addedItem","removeone","removedItem","modify","shift","pullByValue","pullByIndex","updateObject","updateTracked","givenNewItems","trackBy","newItem","trackMap","toSeempleArray","arrayLike","createSortingMethod","hasOptions","sortCallback","givenEventOptions","createRemovingMethod","returns","createAddingMethod","itemMediator","argsLength","useMediator","skipItemMediator","isPush","arg","createSplice","functionArguments","start","splice","createCopyWithin","originalCopyWithin","copyWithin","createFill","originalFill","fill","arrayPrototype","createPseudoNativeMethod","thisArg","originalMethod","separator","searchElement","fromIndex","methods","concat","nativeCallResult","values","entries","symbolIterator","hasModel","afterSeempleInit","createItemMediator","orderBy","pull","typeofToRemove","was","toMediate","indexOf","restore","children","recursive","done","pseudoNativeMethods","of","ParentClass","from","mapFn","arrayFrom","arrayAddHandler","delegatedData","objectSetHandler","arrayRemoveHandler","objectRemoveHandler","changeHandler","defKey","timeout","callContext","clearTimeout","setTimeout","addSource","calcHandler","allSources","isDelegated","deepFind","paths","current","calc","sources","givenHandler","itemTarget","itemSource","itemHandler","handler","debouncedCalcHandler","setOnInit","debounceCalcOnInit","debounceCalc","debounceCalcDelay","isTargetPropertyHidden","syncCalcHandler","protector","protectKey","promiseCalc","setEventOptions","targetValue","Promise","resolve","then","promiseResult","e","createCalcHandler","sourceKeyItem","randomAttr","Math","random","toString","givenSelector","selectors","execResult","boundKey","subSelector","boundNodes","setAttribute","removeAttribute","tagName","textarea","multiple","progress","left","right","v1","v2","array","html2nodeList","givenHTML","wrapMap","option","legend","thead","tr","td","col","area","createElement","optgroup","tbody","tfoot","colgroup","caption","th","ex","wrapper","childNodes","win","MQInit","nodeType","newContext","nodeIndex","splitByDotReg","randomID","delegateHandler","scopeSelector","splittedSelector","matching","sel","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","Init","namesStr","delegate","namespace","j","nodeID","b$","exist","k","idMap","options","givenValue","textContent","parserData","leftBracket","parserBrackets","rightBracket","escLeftBracket","escRightBracket","bindingReg","RegExp","strictBindingReg","textNodeBinder","processTextNode","textNode","lastIndex","tokens","fragment","createDocumentFragment","token","newTextNode","createTextNode","hiddenPropertyPrefix","hiddenPropertyIndex","getBindingKey","regs","defineHiddenContentProperty","attributeBinder","givenNodes","fromParser","outerHTML","attributes","attrs","attribute","defaultBinder","processAttribute","childNode","createTreeListener","newHandler","extendedChangeEvent","listenPath","listenedPath","changeDelegatedHandler","deleteDelegatedHandler","deleteHandler","getNotListedKeys","inObject","fromObject","notListedKeys","removeDataKeys","addDataKeys","newKeys","removedKeys","isDataKey","keysArr","keyOf","keysArray","jset","isArray","_arr","_n","_d","_e","_s","_i","err","mappingFn","val","HTMLElement","switcher","none","getComputedStyle","getPropertyValue","_classlist","toggle","elementClassName","classList","re","propertyName","attributeName","getAttribute","replacer","u","toLowerCase","toDashed","comment","commentText","createComment","parentNode","domEventHandler","createDomEventHandler","fullEventName","bindHandler","unbindHandler","createBindingHandlers","addBindListenerResult","addUnbindListenerResult"],"mappings":"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","file":"seemple.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Seemple\"] = factory();\n\telse\n\t\troot[\"Seemple\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 46);\n","function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","export default function forEach(arr, callback) {\n    let i = 0;\n    const l = arr.length;\n\n    for (; i < l; i++) {\n        callback(arr[i], i);\n    }\n}\n","import defs from '../_core/defs';\nimport apply from '../_helpers/apply';\n\n// triggers one event\nexport default function triggerOne(object, name, triggerArgs) {\n    const def = defs.get(object);\n    const events = def && def.events[name];\n\n    if (events) {\n        const l = events.length;\n        let i = 0;\n\n        // allow to pass both array of args and single arg as triggerArgs\n        if (triggerArgs instanceof Array) {\n            while (i < l) {\n                const event = triggerOne.latestEvent = events[i];\n                const { callback, ctx } = event;\n                apply(callback, ctx, triggerArgs);\n                i += 1;\n            }\n        } else {\n            while (i < l) {\n                const event = triggerOne.latestEvent = events[i];\n                const { callback, ctx } = event;\n                callback.call(ctx, triggerArgs);\n                i += 1;\n            }\n        }\n    }\n}\n\n// latestEvent is used as required hack in somemethods\ntriggerOne.latestEvent = {\n    info: {},\n    name: null\n};\n","import assign from '../_helpers/assign';\n\nfunction PseudoMap() {}\n\n// PseudoMap simulates WeakMap behavior with O(1) search complexity\n// it's needed to support @IE9 and @IE10\nassign(PseudoMap.prototype, {\n    get(obj) {\n        return obj.seempleData;\n    },\n    set(obj, data) {\n        Object.defineProperty(obj, 'seempleData', {\n            value: data,\n            enumerable: false,\n            writable: false,\n            configurable: false\n        });\n    },\n    has(obj) {\n        return 'seempleData' in obj;\n    }\n});\n\nexport default typeof WeakMap === 'undefined' ? new PseudoMap() : new WeakMap();\n","/* eslint-disable prefer-template, max-len */\nconst bindingErrorPrefix = 'Binding error:';\nconst calcErrorPrefix = 'Calc error:';\nconst eventsErrorPrefix = 'Events error:';\nconst arrayErrorPrefix = 'Seemple.Array error:';\n\nconst getType = (variable) => {\n    if (variable === null) {\n        return 'null';\n    }\n\n    return typeof variable;\n};\nconst getTypeError = (variable, variableName, expectedType) => `${variableName} must have type \"${expectedType}\" but got \"${getType(variable)}\" instead.`;\n\nconst errors = {\n    'common:object_type': ({ object, method }) => `Error in ${method}: `\n        + getTypeError(object, 'object', 'object'),\n    'common:call_class': () => 'Cannot call a class as a function',\n    'common:use_magic_props': () => '\"sandbox\" key (for all objects) and \"container\" key (for Seemple.Array instances)'\n        + ' are reserved for service use and cannot be used as usual properties',\n\n    'binding:node_missing': ({ key, node }) => {\n        const selectorInfo = typeof node === 'string' ? ` (given selector is \"${node}\")` : '';\n        return `${bindingErrorPrefix} node is missing for key \"${key}\"${selectorInfo}.`;\n    },\n    'binding:falsy_key': () => `${bindingErrorPrefix} \"key\" arg cannot be falsy`,\n    'binding:instance_nodes_missing': ({ $nodes }) => {\n        const missing = !$nodes ? '$nodes' : 'nodes';\n        return `${bindingErrorPrefix} \"${missing}\" property of Seemple instance is missing.`\n            + ' It must be an object and must not be reassigned.';\n    },\n    'binding:magic_props_nodes_length': () => `${bindingErrorPrefix} \"sandbox\" key (for all objects) and \"container\" key`\n        + ' (for Seemple.Array instances) cannot have more than one bound node',\n\n    'calc:target_type': ({ target }) => `${calcErrorPrefix} ${getTypeError(target, 'target key', 'string')}`,\n    'calc:source_key_type': ({ sourceKey }) => `${calcErrorPrefix} ${getTypeError(sourceKey, 'source key', 'string')}`,\n    'calc:source_object_type': ({ sourceObject }) => `${calcErrorPrefix} ${getTypeError(sourceObject, 'source object', 'object')}`,\n    'calc:source_type': ({ source }) => `${calcErrorPrefix} ${getTypeError(source, 'source', 'object')}`,\n\n    'array:model_type': ({ Model }) => `${arrayErrorPrefix} ${getTypeError(Model, 'Model', 'function')}`,\n    'array:add_render_twice': () => `${arrayErrorPrefix} one rendered object was inserted twice.`,\n    'array:rendered_number_nodes': ({ length }) => `${arrayErrorPrefix} renderer returned ${length} nodes instead of one.`\n        + ` ${length > 0 ? 'To fix this wrap these nodes by single node.' : ''}`,\n    'array:renderer_node_missing': ({ selector }) => `${arrayErrorPrefix} renderer node is missing (given selector is \"${selector}\")`,\n    'array:nonexistent_method': ({ method }) => `${arrayErrorPrefix} Array.prototype.${method} doesn't exist.`\n            + ' You need to include a polyfill for it (e. g. babel-node)',\n    'array:method_compat_renderer': ({ method }) => `${arrayErrorPrefix} Not possible to render when ${method} method is called`,\n\n    'pull:to_remove_type': ({ toRemove }) => `Error in pull: ${getTypeError(toRemove, 'toRemove', 'number')}`,\n\n    'restore:no_nodes': () => `${arrayErrorPrefix} cannot find any container to restore an instance using \"restore\" method`,\n\n    'trigger:names_type': ({ names }) => `${eventsErrorPrefix} ${getTypeError(names, 'event name', 'string')}`,\n\n    'on:names_type': ({ names }) => errors['trigger:names_type']({ names }),\n\n    'removedatakeys:key_type': ({ key }) => `Error in removeDataKeys: ${getTypeError(key, 'key', 'string')}`,\n\n    'adddatakeys:key_type': ({ key }) => `Error in addDataKeys: ${getTypeError(key, 'key', 'string')}`,\n\n    'remove:key_type': ({ key }) => `Error in remove: ${getTypeError(key, 'key', 'string')}`,\n\n    'mediate:key_type': ({ key }) => `Error in mediate: ${getTypeError(key, 'key', 'string')}`\n};\n\nexport default function seempleError(key, data) {\n    const getError = errors[key];\n    if (!getError) {\n        throw Error(`Unknown error \"${key}\". Please report about this on Github.`);\n    }\n\n    return new Error(getError(data));\n}\n","export default function forOwn(obj, callback) {\n    const keys = Object.keys(obj);\n    const l = keys.length;\n    let i = 0;\n    let key;\n\n    while (i < l) {\n        key = keys[i++];\n        callback(obj[key], key);\n    }\n}\n","import defs from './defs';\n\nlet objectId = 0;\n\n// this is common function which associates an object with its Seemple definition\nexport default function initSeemple(object) {\n    let def = defs.get(object);\n    if (!def) {\n        def = {\n            // a property name of \"events\" object is an event name\n            // and a value is an array of event handlers\n            events: {\n                /* example: {\n                    callback: function,\n                    ctx: object,\n                    context: object2,\n                    name: \"example\",\n                    info: { ...extra data for an event... }\n                } */\n            },\n            // \"props\" contains special information about properties (getters, setters etc)\n            props: {\n                /* example: {\n                    value: object[key],\n                    mediator: null,\n                    bindings: [{\n                        node,\n                        binder,\n                        nodeHandler,\n                        objectHandler,\n                        ...other required info\n                    }]\n                } */\n            },\n            id: objectId\n        };\n\n        objectId += 1;\n\n        defs.set(object, def);\n\n        if (object._afterInit) {\n            object._afterInit(def);\n        }\n    }\n\n    return def;\n}\n","import forOwn from './forown';\n\n// Object.assign polyfyll\n/* istanbul ignore next */\nconst assign = Object.assign || function assign(target) {\n    /* istanbul ignore next */\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    const output = Object(target);\n\n    for (let index = 1; index < arguments.length; index++) {\n        const source = arguments[index];\n        if (source !== undefined && source !== null) {\n            forOwn(source, (nextValue, nextKey) => {\n                output[nextKey] = nextValue;\n            });\n        }\n    }\n\n    return output;\n};\n\nexport default assign;\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import seempleError from './seempleerror';\n\n// checks type of a variable and throws an error if its type is not an object\nexport default function checkObjectType(object, method) {\n    const typeofObject = object === null ? 'null' : typeof object;\n\n    if (typeofObject !== 'object' && typeofObject !== 'function') {\n        throw seempleError('common:object_type', {\n            object,\n            method\n        });\n    }\n}\n","export default function apply(func, context, args) {\n    if (context) {\n        switch (args.length) {\n            case 0:\n                return func.call(context);\n            case 1:\n                return func.call(context, args[0]);\n            case 2:\n                return func.call(context, args[0], args[1]);\n            case 3:\n                return func.call(context, args[0], args[1], args[2]);\n            case 4:\n                return func.call(context, args[0], args[1], args[2], args[3]);\n            default:\n                return func.apply(context, args); // eslint-disable-line prefer-spread\n        }\n    }\n\n    switch (args.length) {\n        case 0:\n            return func();\n        case 1:\n            return func(args[0]);\n        case 2:\n            return func(args[0], args[1]);\n        case 3:\n            return func(args[0], args[1], args[2]);\n        case 4:\n            return func(args[0], args[1], args[2], args[3]);\n        default:\n            return func.apply(undefined, args); // eslint-disable-line prefer-spread\n    }\n}\n","import initSeemple from '../_core/init';\nimport triggerOne from '../trigger/_triggerone';\nimport defineProp from '../_core/defineprop';\nimport domEventReg from './_domeventregexp';\n\n// property modifier event regexp\nconst propModEventReg = /^_change:deps:|^_change:bindings:|^_change:delegated:|^_change:common:|^_change:tree:|^change:|^beforechange:/;\n\n// adds simple event listener\n// used as core of event engine\nexport default function addListener(object, name, callback, context, info = {}) {\n    const { events: allEvents } = initSeemple(object);\n    const ctx = context || object;\n    const events = allEvents[name];\n    const event = {\n        callback, context, ctx, name, info\n    };\n    // skipChecks is used by internal methods for better performance\n    const { skipChecks = false } = info;\n\n    if (!skipChecks) {\n        const domEventExecResult = domEventReg.exec(name);\n\n        if (domEventExecResult) {\n            const [, eventName, key = 'sandbox', selector] = domEventExecResult;\n            // fixing circular reference issue\n            const addDomListener = require('./_adddomlistener').default;\n\n            addDomListener(object, key, eventName, selector, callback, context, info);\n\n            return true;\n        }\n    }\n\n    // if there are events with the same name\n    if (events) {\n        if (!skipChecks) {\n            // if there are events with the same data, return false\n            for (let i = 0; i < events.length; i++) {\n                const existingEvent = events[i];\n                const argCallback = (callback && callback._callback) || callback;\n                const eventCallback = existingEvent.callback._callback || existingEvent.callback;\n                if (argCallback === eventCallback && existingEvent.context === context) {\n                    return false;\n                }\n            }\n        }\n\n        // if the event isn't found add it to the event list\n        events.push(event);\n    } else {\n        // if there are no events with the same name, create an array with only  one event\n        allEvents[name] = [event];\n    }\n\n    if (propModEventReg.test(name)) {\n        // define needed accessors for KEY\n        defineProp(object, name.replace(propModEventReg, ''));\n    }\n\n    // names prefixed by underscore mean \"private\" events\n    if (!skipChecks && name[0] !== '_') {\n        triggerOne(object, `addevent:${name}`, event);\n        triggerOne(object, 'addevent', event);\n    }\n\n    // if event is added successfully return true\n    return true;\n}\n","/* global $ */\nimport mq from './mq';\n\n// check existence of needed methods in $ global variable\n// to use it for internal needs\n\nconst neededMethods = ['on', 'off', 'add'];\n\nconst globalDollar = typeof $ === 'function' ? $ : null;\nlet useGlobalDollar = true;\n\n/* istanbul ignore if */\nif (globalDollar) {\n    const fn = globalDollar.fn || globalDollar.prototype;\n    for (let i = 0; i < neededMethods.length; i++) {\n        if (!fn[neededMethods[i]]) {\n            useGlobalDollar = false;\n            break;\n        }\n    }\n\n    if (!globalDollar.parseHTML) {\n        // Zepto doesn't include its own parseHTML\n        // TODO: Assignment of parseHTML is side effect\n        globalDollar.parseHTML = mq.parseHTML;\n    }\n} else {\n    useGlobalDollar = false;\n}\n\nexport default useGlobalDollar ? globalDollar : mq;\n","import $ from './default-dollar';\n\nexport default { $ };\n","import lookForBinder from '../lookforbinder';\nimport createNodeHandler from './_createnodehandler';\nimport createObjectHandler from './_createobjecthandler';\nimport triggerOne from '../trigger/_triggerone';\nimport addListener from '../on/_addlistener';\nimport debounce from '../_helpers/debounce';\nimport seempleError from '../_helpers/seempleerror';\nimport forEach from '../_helpers/foreach';\nimport assign from '../_helpers/assign';\n\nconst spaceReg = /\\s+/;\n\n// handles binding for single property & node\n// the function is used at bindNode\nexport default function bindSingleNode(object, {\n    binder: givenBinder,\n    key,\n    $nodes,\n    node,\n    eventOptions,\n    propDef\n}) {\n    const {\n        silent,\n        getValueOnBind,\n        setValueOnBind,\n        // TODO: We probably need some general flag to cancel or force debouncing\n        // ... which overrides the following flags (something like debounceBinding)\n        debounceSetValue = true,\n        debounceGetValue = true,\n        debounceSetValueOnBind = false,\n        debounceGetValueOnBind = false,\n        debounceSetValueDelay = 0,\n        debounceGetValueDelay = 0,\n        useExactBinder = false\n    } = eventOptions;\n    // create bindings array in property definition object\n    const bindings = propDef.bindings = propDef.bindings || [];\n    const { value } = propDef;\n    const bindingOptions = {\n        self: object,\n        key,\n        value,\n        $nodes,\n        node\n    };\n    let isUndefined = typeof value === 'undefined';\n    let binder;\n    let objectHandler;\n    let nodeHandler;\n\n    // do not allow to bind more than 2 nodes to \"sandbox\" (for all nodes)\n    // and \"container\" (for Seemple.Array)\n    if (\n        bindings.length\n        && (key === 'sandbox' || (object.isSeempleArray && key === 'container'))\n    ) {\n        throw seempleError('binding:magic_props_nodes_length');\n    }\n\n    // get actual binder\n    if (givenBinder !== null) {\n        // by default binder passed to bindNode is extended by default binder\n        // useExactBinder turns this behavior off\n        if (useExactBinder) {\n            binder = givenBinder;\n        } else {\n            // getting default binder\n            const foundBinder = lookForBinder(node);\n\n            // if default binder is found\n            if (foundBinder) {\n                // extend found binder by given binder\n                if (givenBinder) {\n                    assign(foundBinder, givenBinder);\n                }\n\n                binder = foundBinder;\n            } else {\n                // default binder is not found\n                binder = givenBinder || {};\n            }\n        }\n    }\n\n    const {\n        getValue, setValue, on, initialize\n    } = binder;\n\n    // call binder.initialize\n    if (initialize) {\n        initialize.call(node, bindingOptions);\n    }\n\n    // add needed event handlers to given node when getValue is given\n    if (getValue) {\n        const syncNodeHandler = createNodeHandler({\n            object,\n            key,\n            node,\n            propDef,\n            binder,\n            bindingOptions\n        });\n\n        let debouncedNodeHandler;\n\n        if (debounceGetValue || debounceGetValueOnBind) {\n            debouncedNodeHandler = debounce(syncNodeHandler, debounceGetValueDelay);\n        }\n\n        if (debounceGetValue) {\n            nodeHandler = debouncedNodeHandler;\n        } else {\n            nodeHandler = syncNodeHandler;\n        }\n\n        // TODO: Throw error when \"on\" and maybe other binder properties has wrong type\n        if (typeof on === 'function') {\n            on.call(node, nodeHandler, bindingOptions);\n        } else if (typeof on === 'string') {\n            // addEventListener is faster than \"on\" method from any DOM library\n            forEach(\n                on.split(spaceReg),\n                evtName => node.addEventListener(evtName, nodeHandler)\n            );\n        }\n\n        if ((isUndefined && getValueOnBind !== false) || getValueOnBind === true) {\n            if (debounceGetValueOnBind) {\n                debouncedNodeHandler();\n            } else {\n                syncNodeHandler();\n            }\n        }\n\n        isUndefined = typeof propDef.value === 'undefined';\n    }\n\n    // add needed event handlers to the object when setValue is given\n    if (setValue) {\n        const syncObjectHandler = createObjectHandler({\n            node,\n            propDef,\n            binder,\n            bindingOptions,\n            eventOptions\n        });\n\n        let debouncedObjectHandler;\n\n        if (debounceSetValue || debounceSetValueOnBind) {\n            debouncedObjectHandler = debounce(syncObjectHandler, debounceSetValueDelay);\n        }\n\n        if (debounceSetValue) {\n            objectHandler = debouncedObjectHandler;\n        } else {\n            objectHandler = syncObjectHandler;\n        }\n\n        // TODO: Is it possible to get previous value of a property?\n        addListener(object, `_change:bindings:${key}`, objectHandler, null, { skipChecks: true });\n\n        if ((!isUndefined && setValueOnBind !== false) || setValueOnBind === true) {\n            if (debounceSetValueOnBind) {\n                debouncedObjectHandler();\n            } else {\n                syncObjectHandler();\n            }\n        }\n    }\n\n    // add binding data to bindings array\n    bindings.push({\n        on,\n        node,\n        binder,\n        objectHandler,\n        nodeHandler,\n        bindingOptions\n    });\n\n    // fire events\n    if (!silent) {\n        const extendedEventOptions = {\n            key,\n            node,\n            ...eventOptions\n        };\n\n        triggerOne(object, `bind:${key}`, extendedEventOptions);\n        triggerOne(object, 'bind', extendedEventOptions);\n    }\n}\n","import is from '../_helpers/is';\nimport set from '../set';\n\n// returns a function which called when bound node state is changed (eg DOM event is fired)\nexport default function createNodeHandler({\n    object,\n    key,\n    node,\n    propDef,\n    binder,\n    bindingOptions\n}) {\n    return function nodeHandler(domEvent = {}) {\n        // nodeHandler.disabled = true is set in unbindNode\n        // we cannot \"turn off\" binder.on when its value is a function\n        // developer needs to clean memory (\"turn off\" callback) manualy in binder.destroy\n        if (nodeHandler.disabled) {\n            return;\n        }\n\n        const previousValue = propDef.value;\n        const {\n            which, target, ctrlKey, altKey\n        } = domEvent;\n        const { getValue } = binder;\n        const value = getValue.call(node, {\n            previousValue,\n            domEvent,\n            originalEvent: domEvent.originalEvent || domEvent, // jQuery thing\n            // will throw \"preventDefault is not a function\" when domEvent is empty object\n            preventDefault: () => domEvent.preventDefault(),\n            // will throw \"stopPropagation is not a function\" when domEvent is empty object\n            stopPropagation: () => domEvent.stopPropagation(),\n            which,\n            target,\n            ctrlKey,\n            altKey,\n            ...bindingOptions\n        });\n\n        if (!is(value, previousValue)) {\n            set(object, key, value, {\n                fromNode: true,\n                // the following properties are needed to avoid circular changes\n                // they are used at objectHandler\n                changedNode: node,\n                onChangeValue: value,\n                binder\n            });\n        }\n    };\n}\n","// returns a function which is called when property value is changed\nexport default function createObjectHandler({\n    node,\n    propDef,\n    binder,\n    bindingOptions\n}) {\n    return function objectHandler(eventOptions = {}) {\n        const { value } = propDef;\n        const { onChangeValue, changedNode, binder: evtBinder } = eventOptions;\n        const { setValue } = binder;\n        // dirty hack for https://github.com/finom/seemple/issues/19\n        const dirtyHackValue = onChangeValue === 'string' && typeof value === 'number'\n            ? `${value}` : value;\n\n        // don't call setValue if a property is changed via getValue of the same binder\n        if (changedNode === node && onChangeValue === dirtyHackValue && evtBinder === binder) {\n            return;\n        }\n\n        setValue.call(node, value, {\n            value,\n            ...bindingOptions\n        });\n    };\n}\n","import initSeemple from '../_core/init';\nimport defineProp from '../_core/defineprop';\nimport getNodes from './_getnodes';\nimport createBindingSwitcher from './_createbindingswitcher';\nimport bindSingleNode from './_bindsinglenode';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport forOwn from '../_helpers/forown';\nimport forEach from '../_helpers/foreach';\nimport seempleError from '../_helpers/seempleerror';\nimport addTreeListener from '../on/_addtreelistener';\nimport assign from '../_helpers/assign';\n\n// initializes binsing between a property of an object to HTML node\nexport default function bindNode(object, key, node, binder, eventOptions) {\n    if (typeof this === 'object' && this.isSeemple) {\n        // when context is Seemple instance, use this as an object and shift other args\n        /* eslint-disable no-param-reassign */\n        eventOptions = binder;\n        binder = node;\n        node = key;\n        key = object;\n        object = this;\n        /* eslint-enable no-param-reassign */\n    } else {\n        // throw error when object type is wrong\n        checkObjectType(object, 'bindNode');\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    binder = binder || {}; // eslint-disable-line no-param-reassign\n\n    initSeemple(object);\n\n    const { temporaryOptionalFlag } = bindNode;\n\n    delete bindNode.temporaryOptionalFlag;\n\n    // throw an error when key is falsy\n    if (!key) {\n        throw seempleError('binding:falsy_key');\n    }\n\n    if (key instanceof Array) {\n        if (typeof key[0] === 'string') {\n            /*\n             * accept array of keys\n             * this.bindNode(['a', 'b', 'c'], node)\n             */\n            if (temporaryOptionalFlag) {\n                // eslint-disable-next-line no-param-reassign\n                eventOptions = { ...eventOptions, optional: true };\n            }\n\n            forEach(key, itemKey => bindNode(object, itemKey, node, binder, eventOptions));\n        } else {\n            /*\n             * accept array of objects\n             * this.bindNode([{key, node, binder, event}], { silent: true });\n             */\n            forEach(key, ({\n                key: itemKey,\n                node: itemNode,\n                binder: itemBinder,\n                event: itemEventOptions\n            }) => {\n                const commonEventOptions = node;\n                const mergedEventOptions = {};\n\n                if (temporaryOptionalFlag) {\n                    mergedEventOptions.optional = true;\n                }\n\n                if (commonEventOptions) {\n                    // extend event object by \"global\" event\n                    assign(mergedEventOptions, commonEventOptions);\n                }\n\n                if (itemEventOptions) {\n                    // extend event object by \"local\" event (\"event\" key of an object)\n                    assign(mergedEventOptions, itemEventOptions);\n                }\n\n                bindNode(object, itemKey, itemNode, itemBinder, mergedEventOptions);\n            });\n        }\n\n        return object;\n    }\n\n\n    if (typeof key === 'object') {\n        forOwn(key, (keyObjValue, keyObjKey) => {\n            // binder means eventOptions\n            if (temporaryOptionalFlag) {\n                // eslint-disable-next-line no-param-reassign\n                eventOptions = binder ? { ...binder, optional: true } : { optional: true };\n            } else {\n                eventOptions = binder; // eslint-disable-line no-param-reassign\n            }\n\n            if (\n                keyObjValue\n                && keyObjValue.constructor === Object\n                && 'node' in keyObjValue\n            ) {\n                // this.bindNode({ key: { node: $(), binder } ) }, { on: 'evt' }, { silent: true });\n                bindNode(\n                    object, keyObjKey, keyObjValue.node,\n                    keyObjValue.binder || node, eventOptions\n                );\n            } else if (\n                keyObjValue\n                && keyObjValue.constructor === Array\n                && keyObjValue.length\n                && keyObjValue[0].constructor === Object\n                && 'node' in keyObjValue[0]\n            ) {\n                // this.bindNode({ key: [{\n                //   node: $(),\n                //   binder\n                // }] ) }, { on: 'evt' }, { silent: true });\n                forEach(keyObjValue, (keyObjValueItem) => {\n                    bindNode(\n                        object, keyObjKey, keyObjValueItem.node,\n                        keyObjValueItem.binder || node, eventOptions\n                    );\n                });\n            } else {\n                // this.bindNode({ key: $() }, { on: 'evt' }, { silent: true });\n                bindNode(object, keyObjKey, keyObjValue, node, eventOptions);\n            }\n        });\n\n        return object;\n    }\n\n    const {\n        optional = temporaryOptionalFlag || false, // check out bindOptionalNode\n        exactKey = false\n    } = eventOptions;\n    const $nodes = getNodes(object, node);\n\n    // check node existence\n    if (!$nodes.length) {\n        if (optional) {\n            return object;\n        }\n\n        throw seempleError('binding:node_missing', { key, node });\n    }\n\n    if (!exactKey) {\n        const deepPath = key.split('.');\n        const deepPathLength = deepPath.length;\n\n        if (deepPathLength > 1) {\n            // handle binding when key arg includes dots (eg \"a.b.c.d\")\n            const bindingSwitcher = createBindingSwitcher({\n                object,\n                deepPath,\n                $nodes,\n                binder,\n                eventOptions,\n                bindNode\n            });\n\n            addTreeListener(object, deepPath.slice(0, deepPathLength - 1), bindingSwitcher);\n\n            bindingSwitcher();\n\n            return object;\n        }\n    }\n\n    const propDef = defineProp(object, key);\n\n    if (object.isSeemple) {\n        // if an object is Seemple instance then extend \"$nodes\" and \"nodes\" objects\n        const { $nodes: $allNodes, nodes: allNodes } = object;\n\n        if (!$allNodes || !allNodes) {\n            throw seempleError('binding:instance_nodes_missing', {\n                $nodes: $allNodes,\n                nodes: allNodes\n            });\n        }\n\n        $allNodes[key] = $allNodes[key] && $allNodes[key].length\n            ? $allNodes[key].add($nodes)\n            : $nodes;\n\n        allNodes[key] = $allNodes[key][0];\n    }\n\n    // handle binding for every node separately\n    forEach($nodes, oneNode => bindSingleNode(object, {\n        $nodes,\n        node: oneNode,\n        key,\n        eventOptions,\n        binder,\n        propDef\n    }));\n\n    return object;\n}\n","import unbindNode from '../unbindnode';\n\n// returns a function which re-adds binding when object branch is changed\n// the function is called by bindNode when something like\n// 'foo.bar.baz' is passed to it as key argument value\n// this is one of the hardest things in the framework to understand\nexport default function createBindingSwitcher({\n    object,\n    deepPath,\n    $nodes,\n    binder,\n    eventOptions,\n    bindNode\n}) {\n    return function bindingSwitcher(changeEvent = {}) {\n        const deepPathLength = deepPath.length;\n        const lastDeepPathItem = deepPath[deepPathLength - 1];\n        const {\n            value, // new value of a branch\n            previousValue, // previous value of a branch\n            restPath // path starting currently changed branch (passed by addTreeListener)\n        } = changeEvent;\n        let target; // an object to call bindNode\n        let previousTarget; // an object to call unbindNode\n\n\n        if (value && typeof value === 'object' && restPath) {\n            // if rest path is given and new value is an object\n            target = value;\n            for (let i = 0; i < restPath.length; i++) {\n                target = target[restPath[i]];\n                if (!target) {\n                    break;\n                }\n            }\n        } else {\n            // if rest path is not given\n            target = object;\n            for (let i = 0; i < deepPathLength - 1; i++) {\n                target = target[deepPath[i]];\n                if (!target) {\n                    break;\n                }\n            }\n        }\n\n        // if rest path is given and previous value is an object\n        if (previousValue && typeof previousValue === 'object' && restPath) {\n            previousTarget = previousValue;\n            for (let i = 0; i < restPath.length; i++) {\n                previousTarget = previousTarget[restPath[i]];\n                if (!previousTarget) {\n                    break;\n                }\n            }\n        }\n\n        // add binding for new target\n        if (target && typeof target === 'object') {\n            bindNode(target, lastDeepPathItem, $nodes, binder, eventOptions);\n        }\n\n        // remove binding for previously used object\n        if (previousTarget && typeof previousTarget === 'object') {\n            unbindNode(previousTarget, lastDeepPathItem, $nodes);\n        }\n    };\n}\n","import defs from './defs';\nimport set from '../set';\nimport seempleError from '../_helpers/seempleerror';\n\nfunction errorAccessor() {\n    throw seempleError('common:use_magic_props');\n}\n\n// the function defines needed descriptor for given property\nexport default function defineProp(object, key, noAccessor) {\n    const def = defs.get(object);\n\n    // if no object definition do nothing\n    if (!def) {\n        return null;\n    }\n\n    if (!def.props[key]) {\n        const propDef = def.props[key] = {\n            value: object[key],\n            mediator: null,\n            bindings: null\n        };\n        let getter;\n        let setter;\n\n        // make possible to throw an error on get and on set if sandbox (for all objects)\n        // or container (for Seemple.Array instances) are used\n        if (key === 'sandbox' || (object.isSeempleArray && key === 'container')) {\n            getter = setter = errorAccessor;\n        }\n\n        if (!noAccessor) {\n            Object.defineProperty(object, key, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                    return getter ? getter() : propDef.value;\n                },\n                set(v) {\n                    return setter ? setter() : set(object, key, v, {\n                        fromSetter: true\n                    });\n                }\n            });\n        }\n    }\n\n    return def.props[key];\n}\n","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","import defs from './_core/defs';\nimport triggerOne from './trigger/_triggerone';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport is from './_helpers/is';\nimport forOwn from './_helpers/forown';\n\n// the function sets new value for a property\n// since its performance is very critical we're checking events existence manually\nexport default function set(object, key, value, eventOptions) {\n    if (typeof this === 'object' && this.isSeemple) {\n        // when context is Seemple instance, use this as an object and shift other args\n        /* eslint-disable no-param-reassign */\n        eventOptions = value;\n        value = key;\n        key = object;\n        object = this;\n        /* eslint-enable no-param-reassign */\n    } else {\n        // throw error when object type is wrong\n        checkObjectType(object, 'set');\n    }\n\n    // if no key or falsy key is given\n    if (!key) {\n        return object;\n    }\n\n    // allow to use key-value object as another method variation\n    if (typeof key === 'object') {\n        forOwn(key, (objVal, objKey) => set(object, objKey, objVal, value));\n        return object;\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const def = defs.get(object);\n\n    // if no object definition then make simple assignment\n    if (!def) {\n        object[key] = value;\n        return object;\n    }\n\n    const { props, events } = def;\n    const propDef = props[key];\n\n    // if no property definition then make simple assignment\n    if (!propDef) {\n        object[key] = value;\n        return object;\n    }\n\n    const { value: previousValue, mediator } = propDef;\n\n    // possible flags, all of them are falsy by default\n    const {\n        skipMediator,\n        fromMediator,\n        force,\n        forceHTML,\n        silent,\n        silentHTML,\n        skipCalc\n    } = eventOptions;\n\n    let newValue;\n\n    if (mediator && !is(value, previousValue) && !skipMediator && !fromMediator) {\n        newValue = mediator(value);\n    } else {\n        newValue = value;\n    }\n\n    const isChanged = !is(newValue, previousValue);\n\n    // add to eventOptions object some useful properties\n    // we override default eventOptions because some of the properties need to have actual values,\n    // not inherited ones (eg when calc is used)\n    const extendedEventOptions = {\n        ...eventOptions,\n        value: newValue,\n        self: object,\n        previousValue,\n        key,\n        isChanged\n    };\n\n    const triggerChange = (isChanged || force) && !silent;\n\n    // trigger beforechange:KEY and beforechange events\n    if (triggerChange) {\n        const beforechangeStr = 'beforechange';\n        const beforechangeEventName = `${beforechangeStr}:${key}`;\n\n        if (events[beforechangeEventName]) {\n            triggerOne(object, beforechangeEventName, extendedEventOptions);\n        }\n\n        if (events[beforechangeStr]) {\n            triggerOne(object, beforechangeStr, extendedEventOptions);\n        }\n    }\n\n    propDef.value = newValue;\n\n    // triger bindings\n    if (!silentHTML && (isChanged || forceHTML)) {\n        const changeBindingsEventName = `_change:bindings:${key}`;\n        if (events[changeBindingsEventName]) {\n            triggerOne(object, changeBindingsEventName, extendedEventOptions);\n        }\n    }\n\n    // trigger change:KEY and change events\n    if (triggerChange) {\n        const changeStr = 'change';\n        const changeEventName = `${changeStr}:${key}`;\n        if (events[changeEventName]) {\n            triggerOne(object, changeEventName, extendedEventOptions);\n        }\n\n        if (events[changeStr]) {\n            triggerOne(object, changeStr, extendedEventOptions);\n        }\n    }\n\n    // trigger dependencies made by calc method\n    if ((isChanged || force) && !skipCalc) {\n        const changeDepsEventName = `_change:deps:${key}`;\n        if (events[changeDepsEventName]) {\n            triggerOne(object, changeDepsEventName, extendedEventOptions);\n        }\n    }\n\n\n    if (isChanged) {\n        // trigger common delegated events logic\n        const changeDelegatedKeyEventName = `_change:delegated:${key}`;\n        if (events[changeDelegatedKeyEventName]) {\n            triggerOne(object, changeDelegatedKeyEventName, extendedEventOptions);\n        }\n\n        // trigger tree change events logic\n        const changeTreeEventName = `_change:tree:${key}`;\n        if (events[changeTreeEventName]) {\n            triggerOne(object, changeTreeEventName, extendedEventOptions);\n        }\n\n        // trigger other internal change events\n        const changeCommonEventName = `_change:common:${key}`;\n        if (events[changeCommonEventName]) {\n            triggerOne(object, changeCommonEventName, extendedEventOptions);\n        }\n\n        // trigger delegated logic for asterisk events (*.*.*@foo)\n        // TODO: Confusing events names (\"_change:delegated\", \"_change:common:KEY\" etc)\n        const changeDelegatedEventName = '_change:delegated';\n        if (events[changeDelegatedEventName]) {\n            triggerOne(object, changeDelegatedEventName, extendedEventOptions);\n        }\n    }\n\n    return object;\n}\n","import defs from '../_core/defs';\nimport triggerOne from '../trigger/_triggerone';\nimport domEventReg from '../on/_domeventregexp';\nimport forEach from '../_helpers/foreach';\nimport forOwn from '../_helpers/forown';\n\n// removes simple event listener from an object\nexport default function removeListener(object, name, callback, context, info) {\n    const def = defs.get(object);\n\n    // if no definition do nothing\n    if (!def) {\n        return false;\n    }\n\n    const { events: allEvents } = def;\n    const events = allEvents[name];\n    const retain = [];\n    const noTrigger = name ? name[0] === '_' : false;\n    const domEventExecResult = domEventReg.exec(name);\n\n    if (domEventExecResult) {\n        const [, eventName, key = 'sandbox', selector] = domEventExecResult;\n        // fixing circular reference issue\n        const removeDomListener = require('./_removedomlistener').default;\n\n        removeDomListener(object, key, eventName, selector, callback, context, info);\n\n        return true;\n    }\n\n    // if all events need to be removed\n    if (typeof name === 'undefined') {\n        if (!noTrigger) {\n            forOwn(allEvents, (allEventsItem, allEventsName) => {\n                forEach(allEventsItem, (event) => {\n                    const removeEventData = {\n                        allEventsName,\n                        callback: event.callback,\n                        context: event.context\n                    };\n\n                    triggerOne(object, `removeevent:${name}`, removeEventData);\n                    triggerOne(object, 'removeevent', removeEventData);\n                });\n            });\n        }\n\n        // restore default value of \"events\"\n        def.events = {};\n    } else if (events) {\n        // if events with given name are found\n        forEach(events, (event) => {\n            const argCallback = (callback && callback._callback) || callback;\n            const eventCallback = event.callback._callback || event.callback;\n\n            if ((argCallback && argCallback !== eventCallback)\n                || (context && context !== event.context)) {\n                // keep event\n                retain.push(event);\n            } else {\n                const removeEventData = {\n                    name,\n                    callback: event.callback,\n                    context: event.context\n                };\n\n                if (!noTrigger) {\n                    triggerOne(object, `removeevent:${name}`, removeEventData);\n                    triggerOne(object, 'removeevent', removeEventData);\n                }\n            }\n        });\n\n        if (retain.length) {\n            allEvents[name] = retain;\n        } else {\n            delete def.events[name];\n        }\n    }\n\n    return false;\n}\n","\"use strict\";\n\nvar html = require('./html');\n\nvar display = require('./display');\n\nvar className = require('./classname');\n\nvar prop = require('./prop');\n\nvar attr = require('./attr');\n\nvar text = require('./text');\n\nvar style = require('./style');\n\nvar dataset = require('./dataset');\n\nvar existence = require('./existence');\n\nexports.html = html;\nexports.display = display;\nexports.className = className;\nexports.prop = prop;\nexports.attr = attr;\nexports.text = text;\nexports.style = style;\nexports.dataset = dataset;\nexports.existence = existence;","import removeListener from '../off/_removelistener';\nimport triggerOne from '../trigger/_triggerone';\nimport forEach from '../_helpers/foreach';\n\nconst spaceReg = /\\s+/;\n\n// the function removes single binding for single object\n// called by unbindNode\nexport default function removeBinding({\n    object,\n    key,\n    eventOptions,\n    binding\n}) {\n    const {\n        bindingOptions,\n        binder,\n        node,\n        nodeHandler,\n        objectHandler\n    } = binding;\n    const { destroy, on } = binder;\n    const { silent } = eventOptions;\n\n    // if \"on\" is a function then disable it\n    // we cannot \"turn off\" custom listener defined by a programmer\n    // programmer needs to remove custom listener maually inside binder.destroy\n    if (typeof on === 'function') {\n        nodeHandler.disabled = true;\n    } else if (typeof on === 'string') {\n        // remove DOM event listener\n        // removeEventListener is faster than \"on\" method from any DOM library\n        forEach(\n            on.split(spaceReg),\n            evtName => node.removeEventListener(evtName, nodeHandler)\n        );\n    }\n\n    // remove object event listener\n    removeListener(object, `_change:bindings:${key}`, objectHandler);\n\n    // if binder.destroy is given call it\n    if (destroy) {\n        destroy.call(node, bindingOptions);\n    }\n\n    // fire events\n    if (!silent) {\n        const extendedEventOptions = {\n            key,\n            node,\n            ...eventOptions\n        };\n\n        triggerOne(object, `unbind:${key}`, extendedEventOptions);\n        triggerOne(object, 'unbind', extendedEventOptions);\n    }\n}\n","import checkObjectType from '../_helpers/checkobjecttype';\nimport defs from '../_core/defs';\nimport getNodes from '../bindnode/_getnodes';\nimport removeTreeListener from '../off/_removetreelistener';\nimport forEach from '../_helpers/foreach';\nimport forOwn from '../_helpers/forown';\nimport assign from '../_helpers/assign';\nimport removeBinding from './_removebinding';\nimport dom from '../_dom';\n\n// unbinds a node\nexport default function unbindNode(object, key, node, eventOptions) {\n    if (typeof this === 'object' && this.isSeemple) {\n        // when context is Seemple instance, use this as an object and shift other args\n        /* eslint-disable no-param-reassign */\n        eventOptions = node;\n        node = key;\n        key = object;\n        object = this;\n        /* eslint-enable no-param-reassign */\n    } else {\n        // throw error when object type is wrong\n        checkObjectType(object, 'unbindNode');\n    }\n\n    if (key instanceof Array) {\n        if (typeof key[0] === 'string') {\n            /*\n             * accept array of keys\n             * this.unbindNode(['a', 'b', 'c'], node)\n             */\n\n            forEach(key, itemKey => unbindNode(object, itemKey, node, eventOptions));\n        } else {\n            /*\n             * acept array of objects\n             * this.unbindNode([{ key, node, binder, event }], { silent: true });\n             */\n            forEach(key, ({\n                key: itemKey,\n                node: itemNode,\n                event: itemEventOptions\n            }) => {\n                const commonEventOptions = node;\n                const mergedEventOptions = {};\n\n                if (commonEventOptions) {\n                    // extend event object by \"global\" event\n                    assign(mergedEventOptions, commonEventOptions);\n                }\n\n                if (itemEventOptions) {\n                    // extend event object by \"local\" event (\"event\" key of an object)\n                    assign(mergedEventOptions, itemEventOptions);\n                }\n\n                unbindNode(object, itemKey, itemNode, mergedEventOptions);\n            });\n        }\n\n        return object;\n    }\n\n    if (key && typeof key === 'object') {\n        forOwn(key, (keyObjValue, keyObjKey) => {\n            if (keyObjValue.constructor === Object && 'node' in keyObjValue) {\n                // this.unbindNode({ key: { node: $(), binder } ) }, { silent: true });\n                unbindNode(object, keyObjKey, keyObjValue.node, node);\n            } else if (\n                keyObjValue.constructor === Array\n                && keyObjValue.length\n                && keyObjValue[0].constructor === Object\n                && 'node' in keyObjValue[0]\n            ) {\n                // this.unbindNode({ key: [{ node: $(), binder }] ) }, { silent: true });\n                forEach(keyObjValue, (keyObjValueItem) => {\n                    unbindNode(object, keyObjKey, keyObjValueItem.node, node);\n                });\n            } else {\n                // this.unbindNode({ key: $() }, { silent: true });\n                unbindNode(object, keyObjKey, keyObjValue, node);\n            }\n        });\n        return object;\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const { deep } = eventOptions;\n    const def = defs.get(object);\n\n    if (!def) {\n        return object;\n    }\n\n    const { props } = def;\n\n    // allow to pass null or undefined as key\n    // if passed then remove bindings of all keys for given object\n    if (key === null || typeof key === 'undefined') {\n        forOwn(props, (propsItem, propsKey) => {\n            unbindNode(object, propsKey, null, eventOptions);\n        });\n\n        return object;\n    }\n\n    // remove delegated binding\n    if (deep !== false) {\n        const deepPath = key.split('.');\n        const deepPathLength = deepPath.length;\n\n        if (deepPathLength > 1) {\n            let target = object;\n\n            for (let i = 0; i < deepPathLength - 1; i++) {\n                // TODO: Do we need to throw an error when a target is falsy?\n                target = target[deepPath[i]];\n            }\n\n            // TODO: Potential bug! This may undelegate listener for all bindings with the same path\n            // ...(cannot reproduce)\n            removeTreeListener(object, deepPath.slice(0, deepPathLength - 2));\n\n            unbindNode(target, deepPath[deepPathLength - 1], node, eventOptions);\n\n            return object;\n        }\n    }\n\n    const propDef = props[key];\n\n    // when no propdef do nothing\n    if (!propDef) {\n        return object;\n    }\n\n    const { bindings } = propDef;\n\n    // if the property doesn't have any bindings do nothing\n    if (!bindings) {\n        return object;\n    }\n\n    // if no node is pased remove all bindings for given key\n    if (!node) {\n        forEach(bindings, (binding) => {\n            removeBinding({\n                object, key, eventOptions, binding\n            });\n        });\n\n        propDef.bindings = null;\n\n        // update nodes and $nodes for Seemple instance\n        if (object.isSeemple) {\n            delete object.nodes[key];\n            delete object.$nodes[key];\n        }\n\n        return object;\n    }\n\n    const $nodes = getNodes(object, node);\n    const retainBindings = [];\n    const retainNodes = [];\n\n    // iterate over all bindngs and compare their node with given nodes\n    forEach($nodes, (nodesItem) => {\n        forEach(bindings, (binding) => {\n            if (binding.node === nodesItem) {\n                removeBinding({\n                    object, key, eventOptions, binding\n                });\n            } else {\n                retainBindings.push(binding);\n                retainNodes.push(nodesItem);\n            }\n        });\n    });\n\n    // update nodes and $nodes for Seemple instance\n    if (object.isSeemple) {\n        if (retainNodes.length) {\n            object.nodes[key] = retainNodes[0];\n            object.$nodes[key] = dom.$(retainNodes);\n        } else {\n            delete object.nodes[key];\n            delete object.$nodes[key];\n        }\n    }\n\n    // update bindings object\n    if (retainBindings.length) {\n        propDef.bindings = retainBindings;\n    } else {\n        propDef.bindings = null;\n    }\n\n    return object;\n}\n","import forEach from './_helpers/foreach';\nimport forOwn from './_helpers/forown';\nimport assign from './_helpers/assign';\n\n// static methods and properties of classes will be hidden under Symbol('staticNames')\nconst staticNamesProperty = typeof Symbol === 'function' ? Symbol('staticNames') : '__staticNames';\nconst { getOwnPropertySymbols } = Object;\nconst { hasOwnProperty } = Object.prototype;\n\nexport default function Class(prototype, staticProps) {\n    const Constructor = hasOwnProperty.call(prototype, 'constructor')\n        ? prototype.constructor\n        : function EmptyConstructor() {};\n    // extends is kept for backward compatibility\n    const Parent = prototype.extends;\n    // inherit proto from class parent or empty object\n    const proto = Object.create(Parent ? Parent.prototype : {});\n    const parentStaticNames = Parent ? Parent[staticNamesProperty] : undefined;\n\n    assign(proto, prototype);\n\n    // allow to pass symbols as prototype properties\n    if (getOwnPropertySymbols) {\n        const symbols = getOwnPropertySymbols(prototype);\n        forEach(symbols, (symbol) => {\n            proto[symbol] = prototype[symbol];\n        });\n    }\n\n    // inherit staric properties of a parent\n    if (typeof parentStaticNames === 'object') {\n        const staticNames = Constructor[staticNamesProperty] || {};\n        Constructor[staticNamesProperty] = staticNames;\n\n        forOwn(parentStaticNames, (_, name) => {\n            Constructor[name] = Parent[name];\n            staticNames[name] = true;\n        });\n\n        // inherit static properties of a parent when their keys are symbols\n        if (getOwnPropertySymbols) {\n            const symbols = getOwnPropertySymbols(parentStaticNames);\n            forEach(symbols, (symbol) => {\n                Constructor[symbol] = Parent[symbol];\n                staticNames[symbol] = true;\n            });\n        }\n    }\n\n    // extend Constructor with passed static properties\n    if (typeof staticProps === 'object') {\n        const staticNames = Constructor[staticNamesProperty] || {};\n        Constructor[staticNamesProperty] = staticNames;\n\n        forOwn(staticProps, (value, key) => {\n            Constructor[key] = value;\n            staticNames[key] = true;\n        });\n\n        // extend Constructor with passed static properties if their keys are symbols\n        if (getOwnPropertySymbols) {\n            const symbols = getOwnPropertySymbols(staticProps);\n            forEach(symbols, (symbol) => {\n                Constructor[symbol] = staticProps[symbol];\n                staticNames[symbol] = true;\n            });\n        }\n    }\n\n    Constructor.prototype = proto;\n\n    // if new Class({}) is called return its instance\n    if (this instanceof Class) {\n        return new Constructor();\n    }\n\n    return Constructor;\n}\n","import defs from '../_core/defs';\nimport removeListener from './_removelistener';\nimport forEach from '../_helpers/foreach';\n\n// the function removes internally used events such as _asterisk:add\nfunction detatchDelegatedLogic({\n    delegatedEventName,\n    pathStr,\n    allEvents\n}) {\n    const retain = [];\n    const events = allEvents[delegatedEventName];\n\n    forEach(events, (event) => {\n        // pathStr is assigned to info in delegateListener\n        if (event.info.pathStr !== pathStr) {\n            retain.push(event);\n        }\n    });\n\n    if (retain.length) {\n        allEvents[delegatedEventName] = retain;\n    } else {\n        delete allEvents[delegatedEventName];\n    }\n}\n\n// removes delegated event listener from an object by given path\nexport default function undelegateListener(object, givenPath, name, callback, context, info = {}) {\n    const def = defs.get(object);\n\n    // if no definition do nothing\n    if (!def) {\n        return;\n    }\n\n    const { events: allEvents } = def;\n\n    let path = typeof givenPath === 'string' && givenPath !== '' ? givenPath.split('.') : givenPath;\n\n    if (!path || !path.length) {\n        // if no path then remove listener\n        removeListener(object, name, callback, context, info);\n    } else {\n        // else do all magic\n        const key = path[0];\n        let pathStr;\n\n        if (path.length > 1) {\n            path = path.slice(1);\n            pathStr = path.join('.');\n        } else {\n            path = [];\n            pathStr = path[0] || '';\n        }\n\n        if (key === '*') {\n            // remove asterisk events\n            if (object.isSeempleArray) {\n                const delegatedAddEvtName = '_asterisk:add';\n                if (allEvents[delegatedAddEvtName]) {\n                    detatchDelegatedLogic({\n                        delegatedEventName: delegatedAddEvtName,\n                        pathStr,\n                        allEvents\n                    });\n                }\n\n                const delegatedRemoveEvtName = '_asterisk:remove';\n                if (allEvents[delegatedRemoveEvtName]) {\n                    detatchDelegatedLogic({\n                        delegatedEventName: delegatedRemoveEvtName,\n                        pathStr,\n                        allEvents\n                    });\n                }\n\n                // undelegate asterisk events for existing items\n                if (object.length) {\n                    forEach(object, (item) => {\n                        if (item && typeof item === 'object') {\n                            undelegateListener(item, path, name, callback, context, info);\n                        }\n                    });\n                }\n            } else if (object.isSeempleObject) {\n                const delegatedSetEvtName = '_asterisk:set';\n                if (allEvents[delegatedSetEvtName]) {\n                    detatchDelegatedLogic({\n                        delegatedEventName: delegatedSetEvtName,\n                        pathStr,\n                        allEvents\n                    });\n                }\n\n                const delegatedRemoveEvtName = '_asterisk:remove';\n                if (allEvents[delegatedRemoveEvtName]) {\n                    detatchDelegatedLogic({\n                        delegatedEventName: delegatedRemoveEvtName,\n                        pathStr,\n                        allEvents\n                    });\n                }\n\n                object.each((item) => {\n                    if (item && typeof item === 'object') {\n                        undelegateListener(item, path, name, callback, context, info);\n                    }\n                });\n            }\n        } else {\n            // remove non-asterisk delegated events\n\n            const delegatedChangeEvtName = `_change:delegated:${key}`;\n            if (allEvents[delegatedChangeEvtName]) {\n                detatchDelegatedLogic({\n                    delegatedEventName: delegatedChangeEvtName,\n                    pathStr,\n                    allEvents\n                });\n            }\n\n            if (typeof object[key] === 'object') {\n                undelegateListener(object[key], path, name, callback, context, info);\n            }\n        }\n    }\n}\n","import selectNodes from './_selectnodes';\nimport dom from '../_dom';\n\nconst htmlReg = /</;\nconst customSelectorReg = /:sandbox|:bound\\(([^(]*)\\)/;\n\n// the function works just like DOM library accepting any kind of arg\n// (HTML string, Node, NodeList etc) bu allows to pass custom selector\n// eg :bound(KEY) and :sandbox\nexport default function getNodes(object, selector) {\n    if (\n        typeof selector === 'string'\n        && !htmlReg.test(selector)\n        && customSelectorReg.test(selector)\n    ) {\n        return selectNodes(object, selector);\n    }\n\n    return dom.$(selector);\n}\n","// returns a binder for input element based on its type\nexport default function input(type) {\n    let on;\n    switch (type) {\n        case 'checkbox':\n            return {\n                on: 'click keyup',\n                getValue() {\n                    return this.checked;\n                },\n                setValue(value) {\n                    this.checked = value;\n                }\n            };\n        case 'radio':\n            return {\n                on: 'click keyup',\n                getValue() {\n                    return this.value;\n                },\n                setValue(value) {\n                    this.checked = typeof value !== 'undefined' && this.value === value;\n                }\n            };\n        case 'submit':\n        case 'button':\n        case 'image':\n        case 'reset':\n            return {};\n        case 'hidden':\n            on = null;\n            break;\n        case 'file':\n            on = 'change';\n            break;\n\n            /*\n            case 'text':\n            case 'password':\n            case 'date':\n            case 'datetime':\n            case 'datetime-local':\n            case 'month':\n            case 'time':\n            case 'week':\n            case 'range':\n            case 'color':\n            case 'search':\n            case 'email':\n            case 'tel':\n            case 'url':\n            case 'file':\n            case 'number': */\n        default: // other future (HTML6+) inputs\n            on = 'input';\n    }\n\n    return {\n        on,\n        getValue() {\n            return this.value;\n        },\n        setValue(value) {\n            this.value = value;\n        }\n    };\n}\n","// allows to split by spaces not inclusing ones inside of brackers\nexport default /\\s+(?![^(]*\\))/g;\n","import splitBySpaceReg from './_splitbyspaceregexp';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport seempleError from '../_helpers/seempleerror';\nimport forOwn from '../_helpers/forown';\nimport forEach from '../_helpers/foreach';\nimport addListener from './_addlistener';\nimport delegateListener from './_delegatelistener';\n\n// adds event listener\nexport default function on(object, givenNames, callback, triggerOnInit, context) {\n    if (typeof this === 'object' && this.isSeemple) {\n        // when context is Seemple instance, use this as an object and shift other args\n        /* eslint-disable no-param-reassign */\n        context = triggerOnInit;\n        triggerOnInit = callback;\n        callback = givenNames;\n        givenNames = object;\n        object = this;\n        /* eslint-enable no-param-reassign */\n    } else {\n        // throw error when object type is wrong\n        checkObjectType(object, 'on');\n    }\n\n    const isNamesVarArray = givenNames instanceof Array;\n\n    // allow to pass name-handler object\n    if (givenNames && typeof givenNames === 'object' && !isNamesVarArray) {\n        forOwn(givenNames, (namesObjCallback, namesObjName) => on(\n            object, namesObjName, namesObjCallback, callback, triggerOnInit\n        ));\n        return object;\n    }\n\n    if (typeof givenNames !== 'string' && !isNamesVarArray) {\n        throw seempleError('on:names_type', { names: givenNames });\n    }\n\n    // split by spaces\n    // TODO: Array of names passed to on method is non-documented feature\n    const names = isNamesVarArray ? givenNames : givenNames.split(splitBySpaceReg);\n\n    // flip triggerOnInit and context when triggerOnInit is not boolean\n    if (typeof triggerOnInit !== 'boolean' && typeof triggerOnInit !== 'undefined') {\n        // eslint-disable-next-line no-param-reassign\n        [context, triggerOnInit] = [triggerOnInit, context];\n    }\n\n    forEach(names, (name) => {\n        const delegatedEventParts = name.split('@');\n\n        if (delegatedEventParts.length > 1) {\n            // if @ exists in event name then this is delegated event\n            const [path, delegatedName] = delegatedEventParts;\n            delegateListener(object, path, delegatedName, callback, context || object);\n        } else {\n            // if not, this is simple event\n            addListener(object, name, callback, context);\n        }\n    });\n\n    // call callback immediatelly if triggerOnInit is true\n    if (triggerOnInit === true) {\n        callback.call(context || object, { triggerOnInit });\n    }\n\n    return object;\n}\n","import splitBySpaceReg from '../on/_splitbyspaceregexp';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport forOwn from '../_helpers/forown';\nimport forEach from '../_helpers/foreach';\nimport defs from '../_core/defs';\nimport removeListener from './_removelistener';\nimport undelegateListener from './_undelegatelistener';\nimport dom from '../_dom';\n\n// removes event listener\nexport default function off(object, givenNames, callback, context) {\n    if (typeof this === 'object' && this.isSeemple) {\n        // when context is Seemple instance, use this as an object and shift other args\n        /* eslint-disable no-param-reassign */\n        context = callback;\n        callback = givenNames;\n        givenNames = object;\n        object = this;\n        /* eslint-enable no-param-reassign */\n    } else {\n        // throw error when object type is wrong\n        checkObjectType(object, 'off');\n    }\n\n    const isNamesVarArray = givenNames instanceof Array;\n    const def = defs.get(object);\n\n    // allow to pass name-handler object\n    // TODO: Name-handler object passed to off method is non-documented feature\n    if (givenNames && typeof givenNames === 'object' && !isNamesVarArray) {\n        forOwn(givenNames, (namesObjCallback, namesObjName) => off(\n            object, namesObjName, namesObjCallback, callback,\n        ));\n        return object;\n    }\n\n\n    if (!givenNames && !callback && !context) {\n        def.events = {};\n\n        forOwn(def.props, ({ bindings }, propName) => {\n            if (bindings) {\n                forEach(bindings, ({ node }) => {\n                    const eventNamespace = def.id + propName;\n                    dom.$(node).off(`.${eventNamespace}`);\n                });\n            }\n        });\n\n        return object;\n    }\n\n    // TODO: Array of names passed to off method is non-documented feature\n    // split by spaces\n    const names = isNamesVarArray ? givenNames : givenNames.split(splitBySpaceReg);\n\n    forEach(names, (name) => {\n        const delegatedEventParts = name.split('@');\n        if (delegatedEventParts.length > 1) {\n            const [path, delegatedName] = delegatedEventParts;\n            undelegateListener(object, path, delegatedName, callback, context);\n        } else {\n            removeListener(object, name, callback, context);\n        }\n    });\n\n    return object;\n}\n","import on from './on';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport forOwn from './_helpers/forown';\nimport off from './off';\nimport apply from './_helpers/apply';\n\n// adds event listener which will be removed immediately after its first call\nexport default function once(object, names, givenCallback, context) {\n    if (typeof this === 'object' && this.isSeemple) {\n        // when context is Seemple instance, use this as an object and shift other args\n        /* eslint-disable no-param-reassign */\n        context = givenCallback;\n        givenCallback = names;\n        names = object;\n        object = this;\n        /* eslint-enable no-param-reassign */\n    } else {\n        // throw error when object type is wrong\n        checkObjectType(object, 'once');\n    }\n\n    const isNamesVarArray = names instanceof Array;\n\n    // allow to pass name-handler object\n    if (names && typeof names === 'object' && !isNamesVarArray) {\n        forOwn(names, (namesObjCallback, namesObjName) => once(\n            object, namesObjName, namesObjCallback, givenCallback\n        ));\n        return object;\n    }\n\n    const callback = function onceCallback() {\n        apply(givenCallback, this, arguments);\n        // remove event listener after its call\n        off(object, names, onceCallback, context);\n    };\n\n    // allow to remove event listener py passing original callback to \"off\"\n    callback._callback = givenCallback;\n\n    return on(object, names, callback, context);\n}\n","import on from './on';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport debounce from './_helpers/debounce';\nimport forOwn from './_helpers/forown';\n\n// adds debounced event listener\nexport default function onDebounce(\n    object,\n    names,\n    givenCallback,\n    givenDelay,\n    triggerOnInit,\n    context\n) {\n    if (typeof this === 'object' && this.isSeemple) {\n        // when context is Seemple instance, use this as an object and shift other args\n        /* eslint-disable no-param-reassign */\n        context = triggerOnInit;\n        triggerOnInit = givenDelay;\n        givenDelay = givenCallback;\n        givenCallback = names;\n        names = object;\n        object = this;\n        /* eslint-enable no-param-reassign */\n    } else {\n        // throw error when object type is wrong\n        checkObjectType(object, 'onDebounce');\n    }\n\n    const isNamesVarArray = names instanceof Array;\n\n    // allow to pass name-handler object\n    if (names && typeof names === 'object' && !isNamesVarArray) {\n        forOwn(names, (namesObjCallback, namesObjName) => onDebounce(\n            object,\n            namesObjName,\n            namesObjCallback,\n            givenCallback,\n            givenDelay,\n            triggerOnInit\n        ));\n\n        return object;\n    }\n\n    const delay = typeof givenDelay === 'number' ? givenDelay : 0;\n\n    const callback = debounce(givenCallback, delay);\n\n    // allow to remove event listener py passing original callback to \"off\"\n    callback._callback = givenCallback;\n\n    return on(object, names, callback, triggerOnInit, context);\n}\n","// triggers given DOM event on given node\nexport default function triggerOneDOMEvent({\n    node,\n    eventName,\n    triggerArgs\n}) {\n    const { document, Event } = window;\n    let event;\n\n    // polyfill for older browsers\n    if (document.createEvent) {\n        /* istanbul ignore next */\n        event = document.createEvent('Event');\n        event.initEvent(eventName, true, true);\n    } else if (typeof Event !== 'undefined') {\n        event = new Event(eventName, {\n            bubbles: true,\n            cancelable: true\n        });\n    }\n\n    // seempleTriggerArgs will be used in a handler created by addDOMListener\n    event.seempleTriggerArgs = triggerArgs;\n\n    node.dispatchEvent(event);\n}\n","import triggerOneDOMEvent from './_triggeronedomevent';\nimport defs from '../_core/defs';\nimport forEach from '../_helpers/foreach';\n\n// triggers DOM event on bound nodes\nexport default function triggerDOMEvent(object, key, eventName, selector, triggerArgs) {\n    const def = defs.get(object);\n\n    if (!def) {\n        return;\n    }\n\n    const { props } = def;\n    const propDef = props[key];\n\n    if (!propDef) {\n        return;\n    }\n\n    const { bindings } = propDef;\n\n    if (!bindings) {\n        return;\n    }\n\n    forEach(bindings, ({ node }) => {\n        if (selector) {\n            // if selector is given trigger an event on all node descendants\n            const descendants = node.querySelectorAll(selector);\n            forEach(descendants, (descendant) => {\n                triggerOneDOMEvent({\n                    node: descendant,\n                    eventName,\n                    triggerArgs\n                });\n            });\n        } else {\n            // trigger an event for single node\n            triggerOneDOMEvent({\n                node,\n                eventName,\n                triggerArgs\n            });\n        }\n    });\n}\n","import domEventReg from '../on/_domeventregexp';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport seempleError from '../_helpers/seempleerror';\nimport forEach from '../_helpers/foreach';\nimport splitBySpaceReg from '../on/_splitbyspaceregexp';\nimport defs from '../_core/defs';\nimport triggerOne from './_triggerone';\nimport triggerDomEvent from './_triggerdomevent';\n\n// triggers an event\nexport default function trigger(...args) {\n    let object;\n    let givenNames;\n    let triggerArgs;\n\n    if (typeof this === 'object' && this.isSeemple) {\n        // when context is Seemple instance, use this as an object and shift other args\n        [givenNames, ...triggerArgs] = args;\n        object = this;\n    } else {\n        [object, givenNames, ...triggerArgs] = args;\n        // throw error when object type is wrong\n        checkObjectType(object, 'trigger');\n    }\n    let names;\n\n    // allow to use strings only as event name\n    if (typeof givenNames === 'string') {\n        names = givenNames.split(splitBySpaceReg);\n    } else {\n        throw seempleError('trigger:names_type', { names: givenNames });\n    }\n\n    const def = defs.get(object);\n\n    // if no definition do nothing\n    if (!def) {\n        return object;\n    }\n\n    const { events: allEvents } = def;\n\n    if (!allEvents) {\n        return object;\n    }\n\n    forEach(names, (name) => {\n        const domEvtExecResult = domEventReg.exec(name);\n\n        if (domEvtExecResult) {\n            // if EVT::KEY(SELECTOR) ia passed as event name then trigger DOM event\n            const [, eventName, key = 'sandbox', selector] = domEvtExecResult;\n            triggerDomEvent(object, key, eventName, selector, triggerArgs);\n        } else {\n            // trigger ordinary event\n            triggerOne(object, name, triggerArgs);\n        }\n    });\n\n    return object;\n}\n","import bindNode from './bindnode';\nimport apply from './_helpers/apply';\n\n// TODO: Adds a binding, not throwing an error when a node is missing\nexport default function bindOptionalNode() {\n    // this hack allows to keep bindOptionalNode as compact as possible\n    // and doesn't require to flip args and support all bindNode variations\n    bindNode.temporaryOptionalFlag = true;\n    return apply(bindNode, this, arguments);\n}\n","import bindNode from './bindnode';\nimport unbindNode from './unbindnode';\nimport checkObjectType from './_helpers/checkobjecttype';\n\n// binds or rebinds sandbox node\nexport default function bindSandbox(object, node, evt) {\n    if (typeof this === 'object' && this.isSeemple) {\n        // when context is Seemple instance, use this as an object and shift other args\n        /* eslint-disable no-param-reassign */\n        evt = node;\n        node = object;\n        object = this;\n        /* eslint-enable no-param-reassign */\n    } else {\n        // throw error when object type is wrong\n        checkObjectType(object, 'bindSandbox');\n    }\n\n    unbindNode(object, 'sandbox', null, evt);\n    return bindNode(object, 'sandbox', node, null, evt);\n}\n","import defs from './_core/defs';\nimport selectNodes from './bindnode/_selectnodes';\nimport checkObjectType from './_helpers/checkobjecttype';\n\nconst customSelectorTestReg = /:sandbox|:bound\\(([^(]*)\\)/;\n\n// selects one node based on given selector\nexport default function select(object, selector) {\n    if (typeof this === 'object' && this.isSeemple) {\n        // when context is Seemple instance, use this as an object and shift other args\n        /* eslint-disable no-param-reassign */\n        selector = object;\n        object = this;\n        /* eslint-enable no-param-reassign */\n    } else {\n        // throw error when object type is wrong\n        checkObjectType(object, 'select');\n    }\n\n    // the selector includes \"custom\" things like :sandbox or :bound(KEY)\n    if (customSelectorTestReg.test(selector)) {\n        return selectNodes(object, selector)[0] || null;\n    }\n    const def = defs.get(object);\n\n    if (!def || typeof selector !== 'string') {\n        return null;\n    }\n\n    const propDef = def.props.sandbox;\n\n    if (!propDef) {\n        return null;\n    }\n\n    const { bindings } = propDef;\n\n    if (bindings) {\n        // iterate over all bound nodes trying to find a descendant matched given selector\n        for (let i = 0; i < bindings.length; i++) {\n            const node = bindings[i].node;\n            const selected = node.querySelector(selector);\n\n            if (selected) {\n                return selected;\n            }\n        }\n    }\n\n    return null;\n}\n","import defs from './_core/defs';\nimport dom from './_dom';\nimport selectNodes from './bindnode/_selectnodes';\nimport toArray from './_helpers/toarray';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport forEach from './_helpers/foreach';\n\nconst customSelectorTestReg = /:sandbox|:bound\\(([^(]*)\\)/;\n\n// selects nodes based on given selector\nexport default function selectAll(object, selector) {\n    if (typeof this === 'object' && this.isSeemple) {\n        // when context is Seemple instance, use this as an object and shift other args\n        /* eslint-disable no-param-reassign */\n        selector = object;\n        object = this;\n        /* eslint-enable no-param-reassign */\n    } else {\n        // throw error when object type is wrong\n        checkObjectType(object, 'selectAll or $');\n    }\n\n    // the selector includes \"custom\" things like :sandbox or :bound(KEY)\n    if (customSelectorTestReg.test(selector)) {\n        return selectNodes(object, selector);\n    }\n\n    const def = defs.get(object);\n    let result = dom.$();\n\n    if (!def || typeof selector !== 'string') {\n        return result;\n    }\n\n    const propDef = def.props.sandbox;\n\n    if (!propDef) {\n        return result;\n    }\n\n    const { bindings } = propDef;\n\n    if (bindings) {\n        // iterate over all bindings and add found nodes\n        forEach(bindings, ({ node }) => {\n            const selected = node.querySelectorAll(selector);\n            result = result.add(toArray(selected));\n        });\n    }\n\n    return result;\n}\n","import unbindNode from './unbindnode';\nimport triggerOne from './trigger/_triggerone';\nimport removeListener from './off/_removelistener';\nimport defs from './_core/defs';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport seempleError from './_helpers/seempleerror';\nimport forEach from './_helpers/foreach';\n\n// removes a property, its bindings and its events\n// TODO: remove function does not correctly removes delegated events, bindings, tree listeners etc\nexport default function remove(object, givenKey, eventOptions) {\n    if (typeof this === 'object' && this.isSeemple) {\n        // when context is Seemple instance, use this as an object and shift other args\n        /* eslint-disable no-param-reassign */\n        eventOptions = givenKey;\n        givenKey = object;\n        object = this;\n        /* eslint-enable no-param-reassign */\n    } else {\n        // throw error when object type is wrong\n        checkObjectType(object, 'remove');\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const def = defs.get(object);\n    const { silent } = eventOptions;\n    // allow to pass single key or an array of keys\n    const keys = givenKey instanceof Array ? givenKey : [givenKey];\n\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n\n        // if non-string is passed as a key\n        if (typeof key !== 'string') {\n            throw seempleError('remove:key_type', { key });\n        }\n\n        const props = def && def.props;\n        const propDef = props && props[key];\n\n        // if no object definition then simply delete the property\n        if (!propDef) {\n            delete object[key];\n            continue;\n        }\n\n        const { value } = propDef;\n\n        // remove all bindings\n        unbindNode(object, key);\n\n        // TODO: Manual listing of event prefixes may cause problems in future\n        const removeEventPrefies = [\n            '_change:deps',\n            '_change:bindings',\n            '_change:delegated',\n            '_change:tree',\n            'change',\n            'beforechange',\n            'bind',\n            'unbind'\n        ];\n\n        // remove all events\n        forEach(removeEventPrefies, prefix => removeListener(object, `${prefix}:${key}`));\n\n        // delete property definition\n        delete props[key];\n\n        // delete the property itself\n        delete object[key];\n\n        const extendedEventOptions = {\n            key,\n            value,\n            ...eventOptions\n        };\n\n        // trigger delegated events logic removal for asterisk events (*.*.*@foo)\n        triggerOne(object, '_delete:delegated', extendedEventOptions);\n\n        // fire events if \"silent\" is not true\n        if (!silent) {\n            triggerOne(object, 'delete', extendedEventOptions);\n            triggerOne(object, `delete:${key}`, extendedEventOptions);\n        }\n    }\n}\n","import initSeemple from './_core/init';\nimport defineProp from './_core/defineprop';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport forEach from './_helpers/foreach';\nimport set from './set';\nimport seempleError from './_helpers/seempleerror';\nimport forOwn from './_helpers/forown';\n\n// creates property mediator\nfunction createMediator({\n    object,\n    propDef,\n    key,\n    mediator\n}) {\n    return function propMediator(value) {\n        // args: value, previousValue, key, object itself\n        return mediator.call(object, value, propDef.value, key, object);\n    };\n}\n\n// transforms property value on its changing\nexport default function mediate(object, givenKeys, mediator) {\n    if (typeof this === 'object' && this.isSeemple) {\n        // when context is Seemple instance, use this as an object and shift other args\n        /* eslint-disable no-param-reassign */\n        mediator = givenKeys;\n        givenKeys = object;\n        object = this;\n        /* eslint-enable no-param-reassign */\n    } else {\n        // throw error when object type is wrong\n        checkObjectType(object, 'mediate');\n    }\n\n    const isKeysArray = givenKeys instanceof Array;\n\n    // allow to use key-mediator object as another method variation\n    if (typeof givenKeys === 'object' && !isKeysArray) {\n        forOwn(givenKeys, (objVal, objKey) => mediate(object, objKey, objVal));\n        return object;\n    }\n\n    initSeemple(object);\n\n    // allow to use both single key and an array of keys\n    const keys = isKeysArray ? givenKeys : [givenKeys];\n\n    forEach(keys, (key) => {\n        // if non-string is passed as a key\n        if (typeof key !== 'string') {\n            throw seempleError('mediate:key_type', { key });\n        }\n\n        const propDef = defineProp(object, key);\n\n        const propMediator = propDef.mediator = createMediator({\n            object,\n            propDef,\n            key,\n            mediator\n        });\n\n        // set new value\n        set(object, key, propMediator(propDef.value), {\n            fromMediator: true\n        });\n    });\n\n    return object;\n}\n","import checkObjectType from './_helpers/checkobjecttype';\nimport forOwn from './_helpers/forown';\nimport forEach from './_helpers/foreach';\nimport assign from './_helpers/assign';\nimport mediate from './mediate';\n\n// the function is used when no update function is given\nfunction defaultUpdateFunction(instance, data) {\n    if (instance.isSeempleArray) {\n        instance.recreate(data);\n    } else if (instance.isSeempleObject) {\n        instance.setData(data, { replaceData: true });\n    } else {\n        // for other objects just extend them with given data\n        assign(instance, data);\n    }\n}\n\n// returns mediator which controls assignments\nfunction createInstantiateMediator({\n    UsedClass,\n    updateFunction\n}) {\n    return function mediator(value, previousValue, key, object) {\n        if (previousValue instanceof UsedClass) {\n            updateFunction.call(object, previousValue, value, key);\n            return previousValue;\n        }\n\n        return new UsedClass(value, object, key);\n    };\n}\n\n\n\n// creates an instance of given class as property value\n// and updates an instance on new value assignment instead of actual assignment\nexport default function instantiate(object, givenKeys, UsedClass, givenUpdateFunction) {\n    if (typeof this === 'object' && this.isSeemple) {\n        // when context is Seemple instance, use this as an object and shift other args\n        /* eslint-disable no-param-reassign */\n        givenUpdateFunction = UsedClass;\n        UsedClass = givenKeys;\n        givenKeys = object;\n        object = this;\n        /* eslint-enable no-param-reassign */\n    } else {\n        // throw error when object type is wrong\n        checkObjectType(object, 'instantiate');\n    }\n\n    const isKeysArray = givenKeys instanceof Array;\n\n    // allow to use key-class object\n    if (typeof givenKeys === 'object' && !isKeysArray) {\n        forOwn(givenKeys, (objVal, objKey) => instantiate(object, objKey, objVal, UsedClass));\n        return object;\n    }\n\n    // allow to use both single key and an array of keys\n    const keys = isKeysArray ? givenKeys : [givenKeys];\n    const updateFunction = givenUpdateFunction || defaultUpdateFunction;\n    const mediator = createInstantiateMediator({\n        UsedClass,\n        updateFunction\n    });\n\n    // iterate over all keys and define created mediator for all of them\n    forEach(keys, key => mediate(object, key, mediator));\n\n    return object;\n}\n","import checkObjectType from './_helpers/checkobjecttype';\nimport forEach from './_helpers/foreach';\nimport * as universalMethods from './seemple/_universalmethods';\nimport Class from './class';\nimport apply from './_helpers/apply';\n\n// create a prototype of ChainClass\n// store target object at \"object\" property\nconst prototype = {\n    constructor(object) {\n        this.object = object;\n    }\n};\n\nconst methodNames = Object.keys(universalMethods);\n\n// iterate over all universal methods\nfor (let i = 0; i < methodNames.length; i++) {\n    const methodName = methodNames[i];\n    const method = universalMethods[methodName];\n\n    // create every chained method\n    prototype[methodName] = function chainedMethod() {\n        const args = [this.object];\n\n        forEach(arguments, (argument) => {\n            args.push(argument);\n        });\n\n        apply(method, undefined, args);\n\n        // returning this is important for chained calls\n        return this;\n    };\n}\n\nconst ChainClass = Class(prototype);\n\n// the function allows to chain static function calls on any object\nexport default function chain(object) {\n    // check for type and throw an error if it is not an object and is not a function\n    checkObjectType(object, 'chain');\n\n    return new ChainClass(object);\n}\n","import defaultBinders from '../defaultbinders';\nimport lookForBinder from '../lookforbinder';\nimport parserBrackers from '../parserbrackets';\nimport Class from '../class';\nimport toSeemple from '../toseemple';\nimport * as binders from '../binders';\nimport * as universalMethods from './_universalmethods';\nimport assign from '../_helpers/assign';\nimport useDOMLibrary from '../usedomlibrary';\nimport chain from '../chain';\n\nexport default assign({\n    Class,\n    defaultBinders,\n    lookForBinder,\n    binders,\n    parserBrackers,\n    toSeemple,\n    useDOMLibrary,\n    chain\n}, universalMethods);\n","import forEach from './_helpers/foreach';\nimport forOwn from './_helpers/forown';\n\n// recursively converts objects and arrays to Seemple.Object and Seemple.Array instances\nexport default function toSeemple(data) {\n    // fix circular ref issue\n    const SeempleObject = require('./object').default;\n    const SeempleArray = require('./array').default;\n\n    // convert only objects\n    if (data && typeof data === 'object') {\n        if ('length' in data) {\n            // if length is given convert it to Seemple.Array instance\n            const arrayItems = Array(data.length);\n\n            forEach(data, (item, index) => {\n                arrayItems[index] = toSeemple(item);\n            });\n\n            return new SeempleArray().recreate(arrayItems);\n        }\n\n        // if length is not given convert it to Seemple.Object instance\n        const object = {};\n\n        forOwn(data, (value, key) => {\n            object[key] = toSeemple(value);\n        });\n\n        return new SeempleObject(object);\n    }\n\n    // for all non-objects just return passed data\n    return data;\n}\n","import dom from './_dom';\nimport mq from './_dom/mq';\n\n// forces Matrsahka to use jQuery-like DOM library for internal stuff\nexport default function useDOMLibrary(library) {\n    if (typeof library === 'function') {\n        dom.$ = library;\n    } else {\n        dom.$ = mq;\n    }\n}\n","import * as universalMethods from './_universalmethods';\nimport assign from '../_helpers/assign';\nimport _afterInit from './_afterinit';\n\nexport default assign({\n    _afterInit,\n    isSeemple: true,\n    $: universalMethods.selectAll\n}, universalMethods);\n","import Class from '../class';\nimport staticMembers from './_staticmembers';\nimport instanceMembers from './_prototype';\nimport initSeemple from '../_core/init';\nimport seempleError from '../_helpers/seempleerror';\n\ninstanceMembers.constructor = function Seemple() {\n    if (!(this instanceof Seemple)) {\n        throw seempleError('common:call_class');\n    }\n\n    initSeemple(this);\n};\n\nconst Seemple = Class(instanceMembers, staticMembers);\n\nexport default Seemple;\n","import afterSeempleInit from '../seemple/_afterinit';\nimport addListener from '../on/_addlistener';\nimport seempleError from '../_helpers/seempleerror';\n\n// the function returns array item converted to Model instance\nfunction modelItemMediator(item, index) {\n    const { Model } = this;\n\n    // if an item is already instance of Model\n    if (item instanceof Model) {\n        return item;\n    }\n\n    let itemData;\n\n    if (item && typeof item.toJSON === 'function') {\n        // if item is not falsy and if it has toJSON method\n        // then retrieve instance data by this method\n        itemData = item.toJSON(false);\n    } else {\n        // if not then use an item as its data\n        itemData = item;\n    }\n\n    return new Model(itemData, this, index);\n}\n\n// event handler to listen changes of Model property\nfunction changeModel() {\n    const { Model } = this;\n\n    // if model has wrong type then throw an error\n    if (typeof Model !== 'function') {\n        throw seempleError('array:model_type', { Model });\n    }\n\n    // attatch item mediator\n    this.mediateItem(modelItemMediator);\n}\n\n// event handler to listen changes of itemRenderer property\nfunction changeItemRendererHandler(eventOptions = {}) {\n    const { forceRerender = true } = eventOptions;\n    this.rerender({ forceRerender });\n}\n\n// Seemple.Array initializer\nexport default function afterSeempleArrayInit() {\n    // we need to calculate hasModel before change:Model is added\n    const hasModel = 'Model' in this;\n\n    // call Seemple initializer\n    afterSeempleInit.call(this);\n\n    addListener(this, '_change:common:Model', changeModel, this, {\n        skipChecks: true\n    });\n\n    addListener(this, '_change:common:itemRenderer', changeItemRendererHandler, this, {\n        skipChecks: true\n    });\n\n    // call changeModel handler immediately if model is present\n    // it will throw an error if Model is not a function\n    if (hasModel) {\n        changeModel.call(this);\n    }\n}\n","// makes cheap array recreation (with no trackBy, with no events, with no item mediator etc)\nexport default function cheapRecreate(self, newItems = []) {\n    const newLength = newItems.length;\n    const oldLength = self.length;\n    const lengthDiff = newLength - oldLength;\n\n    for (let i = 0; i < newLength; i++) {\n        self[i] = newItems[i];\n    }\n\n    for (let i = 0; i < lengthDiff; i++) {\n        delete self[i + newLength];\n    }\n\n    self.length = newLength;\n\n    return self;\n}\n","// the function orders by given order data any array-like object\nexport default function pureOrderBy(arr, givenKeys, orders) {\n    if ('length' in arr && typeof arr === 'object') {\n        const defaultOrder = 'asc';\n        let commonOrder;\n\n        if (!(orders instanceof Array)) {\n            commonOrder = orders || defaultOrder;\n        }\n\n        const { length } = arr;\n        const result = Array(length);\n\n        for (let i = 0; i < length; i++) {\n            result[i] = arr[i];\n        }\n\n        if (!givenKeys) {\n            return result;\n        }\n\n        const keys = givenKeys instanceof Array ? givenKeys : [givenKeys];\n\n        return result.sort((a, b) => {\n            if (a && b) {\n                for (let i = 0; i < keys.length; i++) {\n                    const key = keys[i];\n                    const order = (commonOrder || orders[i]) !== 'desc' ? -1 : 1;\n\n                    if (a[key] > b[key]) {\n                        return -order;\n                    } if (a[key] < b[key]) {\n                        return order;\n                    }\n                }\n            }\n\n            return 0;\n        });\n    }\n\n    return [];\n}\n","import parseBindings from '../../parsebindings';\nimport bindNode from '../../bindnode';\nimport unbindNode from '../../unbindnode';\nimport triggerOne from '../../trigger/_triggerone';\nimport initSeemple from '../../_core/init';\nimport seempleError from '../../_helpers/seempleerror';\nimport getNodes from '../../bindnode/_getnodes';\n\nconst htmlTestReg = /</;\n\n// the function makes the main rendering job\n// it renders given array item\nexport default function renderItemNode({\n    selfDef, // selfDef is passed as little optimization\n    self,\n    item,\n    eventOptions\n}) {\n    const { renderer, bindRenderedAsSandbox = true } = item;\n    const { itemRenderer } = self;\n    let usedRenderer = renderer || itemRenderer;\n    const rendererContext = usedRenderer === renderer ? item : self;\n    const { id: selfId } = selfDef;\n    const {\n        moveSandbox,\n        forceRerender,\n        silent\n    } = eventOptions;\n\n    // if renderer is not found return null as a node\n    if (!usedRenderer) {\n        return { node: null };\n    }\n\n    const itemDef = initSeemple(item);\n    const { renderedInArrays = {} } = itemDef;\n\n    // if moveSandbox option is truthy then return a sandbox of an item\n    if (moveSandbox) {\n        const sandboxPropDef = itemDef.props.sandbox;\n        if (sandboxPropDef) {\n            const { bindings } = sandboxPropDef;\n            const node = bindings ? bindings[0].node : null;\n\n            if (node) {\n                for (let i = 0, keys = Object.keys(renderedInArrays); i < keys.length; i++) {\n                    const key = keys[i];\n\n                    if (node === renderedInArrays[key]) {\n                        // delete an information about previous array\n                        delete renderedInArrays[key];\n                        break;\n                    }\n                }\n\n                renderedInArrays[selfId] = node;\n\n                // moving sandbox does not fire \"render\" event but it fire \"afterrender\"\n                // since \"afterrender\" means \"node is inserted to DOM\"\n                return {\n                    node: node.__replacedByNode || node,\n                    itemEventOptions: {\n                        node,\n                        self: item,\n                        parentArray: self\n                    }\n                };\n            }\n        }\n    }\n\n    itemDef.renderedInArrays = renderedInArrays;\n\n    // if usedRenderer is function then call it\n    if (typeof usedRenderer === 'function') {\n        usedRenderer = usedRenderer.call(rendererContext, item);\n    }\n\n\n    // if usedRenderer is string\n    if (typeof usedRenderer === 'string') {\n        if (!htmlTestReg.test(usedRenderer)) {\n            // if usedRenderer is a selector\n            const selector = usedRenderer;\n\n            usedRenderer = getNodes(self, selector);\n\n            if (usedRenderer.length) {\n                // if a node is found by given selector then use its HTML\n                usedRenderer = usedRenderer[0].innerHTML.trim();\n            } else {\n                // if not throw an error\n                throw seempleError('array:renderer_node_missing', { selector });\n            }\n        } else {\n            // if usedRenderer is HTML string\n            usedRenderer = usedRenderer.trim();\n        }\n    }\n\n    // pass a node or HTML\n    const parsed = parseBindings(item, usedRenderer, eventOptions);\n\n    // if parseBindings returned more/less than one node then throw an error\n    if (parsed.length !== 1) {\n        throw seempleError('array:rendered_number_nodes', { length: parsed.length });\n    }\n\n    const node = renderedInArrays[selfId] = parsed[0];\n\n\n    if (bindRenderedAsSandbox) {\n        if (forceRerender) {\n            unbindNode(item, 'sandbox', null, null, eventOptions);\n        }\n\n        bindNode(item, 'sandbox', node, null, eventOptions);\n    }\n\n    // if silent is not truthy then fire 'render' event and virtual methods\n    if (!silent) {\n        const itemEventOptions = {\n            node,\n            self: item,\n            parentArray: self\n        };\n        const { onRender } = item;\n        const { onItemRender } = self;\n\n        if (onRender) {\n            onRender.call(item, itemEventOptions);\n        }\n\n        if (onItemRender) {\n            onItemRender.call(self, item, itemEventOptions);\n        }\n\n        triggerOne(item, 'render', itemEventOptions);\n\n        return { node: node.__replacedByNode || node, itemEventOptions };\n    }\n\n    return { node: node.__replacedByNode || node };\n}\n","import defs from '../../_core/defs';\nimport seempleError from '../../_helpers/seempleerror';\n\n// checks is item already rendered in an array\n// selfDef is given instead of itself (array) for perf optimisation\nexport default function checkAlreadyRendered({\n    item,\n    selfDef\n}) {\n    const itemDef = defs.get(item);\n    const { id: selfId } = selfDef;\n\n    // if item object is defined in object defs\n    if (itemDef) {\n        const { renderedInArrays } = itemDef;\n\n        // if item's node is already rendered for an array\n        // then throw an error\n        if (renderedInArrays && renderedInArrays[selfId]) {\n            throw seempleError('array:add_render_twice');\n        }\n    }\n}\n","import defs from '../../_core/defs';\n\n// returns already rendered node of an object in given array\n// selfDef is given instead of  itself (array) for perf optimisation\nexport default function getAlreadyRendered({\n    item,\n    selfDef\n}) {\n    const itemDef = defs.get(item);\n    const { id: selfId } = selfDef;\n\n    // if item object is defined in object defs\n    if (itemDef) {\n        const { renderedInArrays } = itemDef;\n\n        // if item's node is already rendered for an array then return it\n        if (renderedInArrays && renderedInArrays[selfId]) {\n            const node = renderedInArrays[selfId];\n            return node.__replacedByNode || node;\n        }\n    }\n\n    return undefined;\n}\n","import defs from '../../_core/defs';\nimport forEach from '../../_helpers/foreach';\n\n// this function removes DOM nodes of removed items\n// called on splice, pull, pop and shift\nexport default function processRemove({\n    // self,\n    selfDef,\n    eventOptions,\n    container\n}) {\n    const { removed } = eventOptions;\n    const { id: selfId } = selfDef;\n    forEach(removed, (item) => {\n        if (item && typeof item === 'object') {\n            const itemDef = defs.get(item);\n            if (itemDef) {\n                const { renderedInArrays } = itemDef;\n                const node = renderedInArrays && renderedInArrays[selfId];\n                if (node) {\n                    delete renderedInArrays[selfId];\n                    container.removeChild(node);\n                }\n            }\n        }\n    });\n}\n","import defs from '../../_core/defs';\nimport seempleError from '../../_helpers/seempleerror';\nimport processPush from './processpush';\nimport processUnshift from './processunshift';\nimport processRecreate from './processrecreate';\nimport processSort from './processsort';\nimport processRemove from './processremove';\nimport processRerender from './processrerender';\nimport processSpliceAdd from './processspliceadd';\n\n// makes possible to render array items based on a name of called method\nexport default function processRendering({\n    self,\n    eventOptions\n}) {\n    const { method, added, removed } = eventOptions;\n    // nodes object always exist at Seemple instances\n    const container = self.nodes.container || self.nodes.sandbox;\n    const selfDef = defs.get(self);\n\n    if (!container) {\n        return;\n    }\n\n    switch (method) {\n        case 'fill':\n        case 'copyWithin':\n            throw seempleError('array:method_compat_renderer', { method });\n        case 'push':\n            processPush({\n                self,\n                selfDef,\n                eventOptions,\n                container\n            });\n            break;\n        case 'unshift':\n            processUnshift({\n                self,\n                selfDef,\n                eventOptions,\n                container\n            });\n            break;\n        case 'pull':\n        case 'pop':\n        case 'shift':\n            processRemove({\n                self,\n                selfDef,\n                eventOptions,\n                container\n            });\n            break;\n        case 'sort':\n        case 'reverse':\n            processSort({\n                self,\n                selfDef,\n                eventOptions,\n                container\n            });\n            break;\n        case 'rerender':\n            processRerender({\n                self,\n                selfDef,\n                eventOptions,\n                container\n            });\n            break;\n        case 'recreate':\n            processRecreate({\n                self,\n                selfDef,\n                eventOptions,\n                container\n            });\n            break;\n        case 'splice':\n            if (added.length) {\n                processSpliceAdd({\n                    self,\n                    selfDef,\n                    eventOptions,\n                    container\n                });\n            }\n\n            if (removed.length) {\n                processRemove({\n                    self,\n                    selfDef,\n                    eventOptions,\n                    container\n                });\n            }\n\n            break;\n        default:\n    }\n}\n","import renderItemNode from './renderitemnode';\nimport triggerOne from '../../trigger/_triggerone';\nimport checkAlreadyRendered from './checkalreadyrendered';\nimport forEach from '../../_helpers/foreach';\n\n// this function renders inserted items if possible when push method is called\nexport default function processPush({\n    self,\n    selfDef,\n    eventOptions,\n    container\n}) {\n    const { added, silent } = eventOptions;\n\n    forEach(added, (item) => {\n        if (item && typeof item === 'object') {\n            // if a node of an item is already rendered then throw an error\n            checkAlreadyRendered({\n                item,\n                selfDef\n            });\n\n            // render\n            const { node, itemEventOptions } = renderItemNode({\n                selfDef,\n                self,\n                item,\n                eventOptions\n            });\n\n            if (node) {\n                container.appendChild(node);\n                if (!silent) {\n                    triggerOne(item, 'afterrender', itemEventOptions);\n                }\n            }\n        }\n    });\n}\n","import renderItemNode from './renderitemnode';\nimport triggerOne from '../../trigger/_triggerone';\nimport checkAlreadyRendered from './checkalreadyrendered';\n\n// this function renders inserted items if possible when unshift or push method is called\nexport default function processUnshift({\n    self,\n    selfDef,\n    eventOptions,\n    container\n}) {\n    const { added, silent } = eventOptions;\n\n    // iterate over all added items in opposite order\n    for (let i = added.length - 1; i + 1; i--) {\n        const item = added[i];\n        if (item && typeof item === 'object') {\n            // if a node of an item is already rendered then throw an error\n            checkAlreadyRendered({\n                item,\n                selfDef\n            });\n\n            const { node, itemEventOptions } = renderItemNode({\n                selfDef,\n                self,\n                item,\n                eventOptions\n            });\n\n            if (node) {\n                if (container.firstChild) {\n                    container.insertBefore(node, container.firstChild);\n                } else {\n                    container.appendChild(node);\n                }\n\n                if (!silent) {\n                    triggerOne(item, 'afterrender', itemEventOptions);\n                }\n            }\n        }\n    }\n}\n","import getAlreadyRendered from './getalreadyrendered';\nimport forEach from '../../_helpers/foreach';\n\n\n// this function gets called when array is sorted (via sort, orderBy or reverse)\nexport default function processSort({\n    self,\n    selfDef,\n    // eventOptions,\n    container\n}) {\n    // just re-insert rendered nodes in new order\n    forEach(self, (item) => {\n        if (item && typeof item === 'object') {\n            const node = getAlreadyRendered({\n                item,\n                selfDef\n            });\n\n            if (node) {\n                container.appendChild(node);\n            }\n        }\n    });\n}\n","import getAlreadyRendered from './getalreadyrendered';\nimport renderItemNode from './renderitemnode';\nimport triggerOne from '../../trigger/_triggerone';\n\n// this function re-inserts rendered DOM nodes of items\n// if they are rendered and forceRerender is falsy\n// and renders array items from scratch if they aren't rendered yet or forceRerender is truthy\nexport default function processRerender({\n    self,\n    selfDef,\n    eventOptions,\n    container\n}) {\n    const { forceRerender, silent } = eventOptions;\n\n    // iterate over all items\n    for (let i = 0; i < self.length; i++) {\n        const item = self[i];\n        if (item && typeof item === 'object') {\n            const alreadyRenderedNode = getAlreadyRendered({\n                item,\n                selfDef\n            });\n\n            // if item is already rendered and forceRerender is falsy then re-insert DOM node\n            // go to the next cycle iteration then\n            if (!forceRerender && alreadyRenderedNode) {\n                container.appendChild(alreadyRenderedNode);\n                continue;\n            }\n\n            // node removal is called when an item is rendered\n            // and forceRerender is truty\n            if (alreadyRenderedNode) {\n                if (container.contains(alreadyRenderedNode)) {\n                    container.removeChild(alreadyRenderedNode);\n                }\n            }\n\n            // render new node\n            const { node, itemEventOptions } = renderItemNode({\n                selfDef,\n                self,\n                item,\n                eventOptions\n            });\n\n            if (node) {\n                container.appendChild(node);\n\n                if (!silent) {\n                    triggerOne(item, 'afterrender', itemEventOptions);\n                }\n            }\n        }\n    }\n}\n","import renderItemNode from './renderitemnode';\nimport triggerOne from '../../trigger/_triggerone';\nimport defs from '../../_core/defs';\nimport seempleError from '../../_helpers/seempleerror';\nimport forEach from '../../_helpers/foreach';\nimport getAlreadyRendered from './getalreadyrendered';\n\n// this function renders inserted items if possible when recreate method is called\nexport default function processRecreate({\n    self,\n    selfDef,\n    eventOptions,\n    container\n}) {\n    const { removed, silent } = eventOptions;\n    const { id: selfId } = selfDef;\n\n    // iterate over removed items and remove their nodes\n    forEach(removed, (item) => {\n        const itemDef = defs.get(item);\n\n        if (itemDef) {\n            const { renderedInArrays } = itemDef;\n            const node = renderedInArrays && renderedInArrays[selfId];\n            if (node) {\n                delete itemDef.renderedInArrays[selfId];\n                container.removeChild(node);\n            }\n        }\n    });\n\n    const alreadyRenderedMap = {};\n\n    // iterate over all items\n    // the following approach allows to throw an error when two added objects are the same\n    // (not only compare existing items with old ones)\n    forEach(self, (item) => {\n        if (item && typeof item === 'object') {\n            let itemDef = defs.get(item);\n            let alreadyRenderedNode;\n\n            if (itemDef) {\n                alreadyRenderedNode = getAlreadyRendered({\n                    item,\n                    selfDef\n                });\n            }\n\n            if (alreadyRenderedNode) {\n                // if an item is already rendered (old item)\n                if (itemDef.id in alreadyRenderedMap) {\n                    // if an item is rendered twice throw an error\n                    throw seempleError('array:add_render_twice');\n                }\n\n                alreadyRenderedMap[itemDef.id] = true;\n\n                container.appendChild(alreadyRenderedNode);\n            } else {\n                // this is newly added item\n                const { node, itemEventOptions } = renderItemNode({\n                    selfDef,\n                    self,\n                    item,\n                    eventOptions\n                });\n\n                if (node) {\n                    // itemDef is defined at renderItemNode if not defined before\n                    // reload this variable\n                    itemDef = itemDef || defs.get(item);\n\n                    if (itemDef.id in alreadyRenderedMap) {\n                        // if newly added item is rendered twice throw an error\n                        throw seempleError('array:add_render_twice');\n                    }\n\n                    alreadyRenderedMap[itemDef.id] = true;\n\n                    container.appendChild(node);\n\n                    if (!silent) {\n                        triggerOne(item, 'afterrender', itemEventOptions);\n                    }\n                }\n            }\n        }\n    });\n}\n","import renderItemNode from './renderitemnode';\nimport triggerOne from '../../trigger/_triggerone';\nimport forEach from '../../_helpers/foreach';\nimport checkAlreadyRendered from './checkalreadyrendered';\nimport getAlreadyRendered from './getalreadyrendered';\n\n// the function handles rendering of added items passed as third and rest arguments to splice method\nexport default function processSpliceAdd({\n    self,\n    selfDef,\n    eventOptions,\n    container\n}) {\n    const { added, silent } = eventOptions;\n    const nextIndex = self.lastIndexOf(added[added.length - 1]) + 1;\n    const next = self[nextIndex];\n    let nextNode;\n\n    // get a node of an item which is placed next to the last added item\n    // it is needed to insert newly rendered items before\n    if (next && typeof next === 'object') {\n        nextNode = getAlreadyRendered({\n            item: next,\n            selfDef\n        });\n    }\n\n    forEach(added, (item) => {\n        if (item && typeof item === 'object') {\n            // throw an error if node of an item is alread rendered\n            checkAlreadyRendered({\n                item,\n                selfDef\n            });\n\n            const { node, itemEventOptions } = renderItemNode({\n                selfDef,\n                self,\n                item,\n                eventOptions\n            });\n\n            if (node) {\n                if (nextNode) {\n                    container.insertBefore(node, nextNode);\n                } else {\n                    container.appendChild(node);\n                }\n\n                if (!silent) {\n                    triggerOne(item, 'afterrender', itemEventOptions);\n                }\n            }\n        }\n    });\n}\n","import defs from '../_core/defs';\nimport triggerOne from '../trigger/_triggerone';\nimport processRendering from './_processrendering';\n\n// fires events and triggers rendering logic\nexport default function reportModified(self, eventOptions) {\n    const {\n        added,\n        removed,\n        silent,\n        method,\n        dontRender\n    } = eventOptions;\n    const addedLength = added.length;\n    const removedLength = removed.length;\n    const modified = addedLength || removedLength || method === 'sort' || method === 'reverse';\n    const { events } = defs.get(self);\n    const { renderIfPossible = true } = self;\n    const asteriskAddEvtName = '_asterisk:add';\n    const asteriskRemoveEvtName = '_asterisk:remove';\n\n    // if something is added and an array has delegated \"asterisk\" events\n    // then attatch delegated event handlers to newly added items\n    if (addedLength && events[asteriskAddEvtName]) {\n        triggerOne(self, asteriskAddEvtName, eventOptions);\n    }\n\n    // if something is removed and an array has delegated \"asterisk\" events\n    // then remove delegated event handlers from removed items\n    if (removedLength && events[asteriskRemoveEvtName]) {\n        triggerOne(self, asteriskRemoveEvtName, eventOptions);\n    }\n\n    if (!silent) {\n        // fire additional event name (like \"push\")\n        if (events[method]) {\n            triggerOne(self, method, eventOptions);\n        }\n\n        // if something is added then fire add and addone events\n        if (addedLength) {\n            if (events.add) {\n                triggerOne(self, 'add', eventOptions);\n            }\n\n            if (events.addone) {\n                for (let i = 0; i < addedLength; i++) {\n                    triggerOne(self, 'addone', {\n                        self,\n                        addedItem: added[i]\n                    });\n                }\n            }\n        }\n\n        // if something is removed then fire add and addone events\n        if (removedLength) {\n            if (events.remove) {\n                triggerOne(self, 'remove', eventOptions);\n            }\n\n            if (events.removeone) {\n                for (let i = 0; i < removedLength; i++) {\n                    triggerOne(self, 'removeone', {\n                        self,\n                        removedItem: removed[i]\n                    });\n                }\n            }\n        }\n\n        // modify event says that something is added or removed\n        if (events.modify) {\n            triggerOne(self, 'modify', eventOptions);\n        }\n    }\n\n    // trigger rendering logic if possible\n    if (modified && !dontRender && renderIfPossible) {\n        processRendering({\n            self,\n            eventOptions\n        });\n    }\n}\n","import reportModified from './_reportmodified';\nimport seempleError from '../_helpers/seempleerror';\n\n// removes array item by given index\nfunction shift(arr, index) {\n    for (let i = index; i < arr.length; i++) {\n        arr[i] = arr[i + 1];\n    }\n    delete arr[arr.length - 1];\n    arr.length -= 1;\n}\n\n// finds array item that equals to given value and removes it\n// returns removed value\nfunction pullByValue(arr, value) {\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === value) {\n            shift(arr, i);\n            return value;\n        }\n    }\n\n    return undefined;\n}\n\n// removes array item by given index if the index is not over array length\n// returns removed value\nfunction pullByIndex(arr, index) {\n    if (index < arr.length) {\n        const value = arr[index];\n        shift(arr, index);\n        return value;\n    }\n\n    return undefined;\n}\n\n// removes an array item by index (if number is given) or by value (if object is given)\nexport default function pull(toRemove, eventOptions = {}) {\n    const typeofToRemove = typeof toRemove;\n    let removed;\n\n    if (toRemove && typeofToRemove === 'object') {\n        removed = pullByValue(this, toRemove);\n    } else if (typeofToRemove === 'number') {\n        removed = pullByIndex(this, toRemove);\n    } else {\n        throw seempleError('pull:to_remove_type', { toRemove });\n    }\n\n    if (typeof removed !== 'undefined') {\n        reportModified(this, {\n            method: 'pull',\n            self: this,\n            added: [],\n            removed: [removed],\n            ...eventOptions\n        });\n    }\n\n    return removed;\n}\n","import forOwn from '../../_helpers/forown';\n\n// updates one single object by new data\n// for Seemple.Array instance call recreate method\n// for Seemple.Object instance call setData method\n// for other objects just extend them by properties of data parameter\nexport default function updateObject(instance, data) {\n    if (instance.isSeempleArray) {\n        instance.recreate(data);\n    } else if (instance.isSeempleObject) {\n        // QUESTION: Is it OK to just extend but not replace instance data?\n        instance.setData(data);\n    } else {\n        forOwn(data, (value, key) => {\n            instance[key] = value;\n        });\n    }\n\n    return instance;\n}\n","import updateObject from './_updateobject';\n\n// the function gets called to update new items passed to recreate method when trackBy is present\n// TODO: Throw an error when two or more items of one array has the same value of trackBy\nexport default function updateTracked({\n    givenNewItems,\n    arr,\n    trackBy\n}) {\n    const newLength = givenNewItems.length;\n    const oldLength = arr.length;\n    const newItems = Array(newLength);\n\n    if (trackBy === '$index') {\n        // simply update items with the same index\n        for (let i = 0; i < newLength; i++) {\n            const item = arr[i];\n            const newItem = givenNewItems[i];\n\n            if (\n                item && typeof item === 'object'\n                && newItem && typeof newItem === 'object'\n            ) {\n                newItems[i] = updateObject(item, newItem);\n            } else {\n                newItems[i] = newItem;\n            }\n        }\n    } else {\n        const trackMap = {};\n\n        // fill trackMap object where keys are values of trackBy and values are corresponding items\n        for (let i = 0; i < oldLength; i++) {\n            const item = arr[i];\n\n            if (item && typeof item === 'object') {\n                if (trackBy in item) {\n                    trackMap[item[trackBy]] = item;\n                }\n            }\n        }\n\n        for (let i = 0; i < newLength; i++) {\n            const newItem = givenNewItems[i];\n\n            if (newItem && typeof newItem === 'object') {\n                const item = arr[i];\n\n                if (item && typeof item === 'object' && newItem[trackBy] in trackMap) {\n                    // if an item exists at trackMap then update it\n                    newItems[i] = updateObject(trackMap[newItem[trackBy]], newItem);\n                } else {\n                    // if not then use new value as is\n                    newItems[i] = newItem;\n                }\n            } else {\n                // newItem is not an object\n                newItems[i] = newItem;\n            }\n        }\n    }\n\n    return newItems;\n}\n","import forEach from '../_helpers/foreach';\n\n// converts array-like to Seemple.Array instance\nexport default function toSeempleArray(arrayLike) {\n    // fix circular dependency issue\n    const SeempleArray = require('./').default;\n\n    const result = new SeempleArray(arrayLike.length);\n\n    forEach(arrayLike, (item, index) => {\n        result[index] = item;\n    });\n\n    return result;\n}\n","import initSeemple from '../../_core/init';\nimport reportModified from '../_reportmodified';\nimport assign from '../../_helpers/assign';\n\n// creates sorting method and returns it (sort, reverse, sort_, reverse_)\nexport default function createSortingMethod(name, hasOptions) {\n    return function pseudoNativeMethod(sortCallback) {\n        if (this.length < 2) return this;\n        initSeemple(this);\n\n        const givenEventOptions = hasOptions ? arguments[arguments.length - 1] : null;\n        const method = Array.prototype[name];\n\n        const eventOptions = {\n            method: name,\n            self: this,\n            added: [],\n            removed: []\n        };\n\n        // call original method\n        if (name === 'sort' && typeof sortCallback === 'function') {\n            method.call(this, sortCallback);\n        } else {\n            method.call(this);\n        }\n\n        // extend event options by custom event options if they are given\n        if (hasOptions) {\n            if (givenEventOptions && typeof givenEventOptions === 'object') {\n                assign(eventOptions, givenEventOptions);\n            }\n        }\n\n        reportModified(this, eventOptions);\n\n        return this;\n    };\n}\n","import initSeemple from '../../_core/init';\nimport reportModified from '../_reportmodified';\nimport assign from '../../_helpers/assign';\n\n// creates removing method and returns it (pop, shift, pop_, shift_)\nexport default function createRemovingMethod(name, hasOptions) {\n    return function pseudoNativeMethod(givenEventOptions) {\n        if (!this.length) {\n            return undefined;\n        }\n        initSeemple(this);\n\n        // call original method\n        const returns = Array.prototype[name].call(this);\n        const eventOptions = {\n            method: name,\n            self: this,\n            added: [],\n            removed: [returns]\n        };\n\n        // extend event options by custom event options if they are given\n        if (hasOptions) {\n            if (givenEventOptions && typeof givenEventOptions === 'object') {\n                assign(eventOptions, givenEventOptions);\n            }\n        }\n\n        reportModified(this, eventOptions);\n\n        return returns;\n    };\n}\n","import initSeemple from '../../_core/init';\nimport reportModified from '../_reportmodified';\nimport assign from '../../_helpers/assign';\n\n// creates methods: push, unshift, push_, unshift_\nexport default function createAddingMethod(name, hasOptions) {\n    return function pseudoNativeMethod() {\n        const { itemMediator } = initSeemple(this);\n        // +hasOptions is converted to 0 or 1 depending on its value (false/true)\n        const argsLength = arguments.length - +hasOptions;\n        const args = Array(argsLength);\n        const givenEventOptions = hasOptions ? arguments[arguments.length - 1] : null;\n        const useMediator = typeof itemMediator === 'function'\n            && (!givenEventOptions || !givenEventOptions.skipItemMediator);\n        const isPush = name === 'push';\n        let { length } = this;\n\n        // if no arguments are passed\n        if (!argsLength) {\n            return length;\n        }\n\n        // convert arguments to array and call item mediator on every item if it's possible\n        for (let i = 0; i < argsLength; i++) {\n            const arg = arguments[i];\n            if (useMediator) {\n                const index = isPush ? i + length : i;\n                args[i] = itemMediator(arg, index);\n            } else {\n                args[i] = arg;\n            }\n        }\n\n        if (isPush) {\n            // insert new items to the end of array\n            for (let i = 0; i < argsLength; i++) {\n                this[length + i] = args[i];\n            }\n        } else {\n            // move current items to new indexes\n            for (let i = length - 1; i >= 0; i--) {\n                this[argsLength + i] = this[i];\n            }\n            // insert new items to the begin of array\n            for (let i = 0; i < argsLength; i++) {\n                this[i] = args[i];\n            }\n        }\n\n        // update length\n        length += argsLength;\n        this.length = length;\n\n        const eventOptions = {\n            method: name,\n            self: this,\n            added: args,\n            removed: []\n        };\n\n        // extend event options by custom event options if they are given\n        if (hasOptions) {\n            if (givenEventOptions && typeof givenEventOptions === 'object') {\n                assign(eventOptions, givenEventOptions);\n            }\n        }\n\n        reportModified(this, eventOptions);\n\n        return length;\n    };\n}\n","import initSeemple from '../../_core/init';\nimport reportModified from '../_reportmodified';\nimport toSeempleArray from '../_toseemplearray';\nimport apply from '../../_helpers/apply';\nimport assign from '../../_helpers/assign';\n\n// creates splice or splice_ method and returns it\n// TODO: Improve readability of createSplice function\nexport default function createSplice(hasOptions) {\n    return function pseudoNativeMethod() {\n        const { itemMediator } = initSeemple(this);\n        const functionArguments = arguments;\n        const argsLength = functionArguments.length - +hasOptions;\n        const args = Array(argsLength);\n        const givenEventOptions = hasOptions\n            ? functionArguments[functionArguments.length - 1]\n            : null;\n        const useMediator = typeof itemMediator === 'function'\n            && (!givenEventOptions || !givenEventOptions.skipItemMediator);\n        const added = [];\n        let start = args[0];\n        const { length } = this;\n\n        start = start < 0 ? length + start : start;\n\n        // convert arguments to array and call item mediator on every new item if it's possible\n        args[0] = functionArguments[0];\n        args[1] = functionArguments[1];\n        for (let i = 2; i < argsLength; i++) {\n            const arg = functionArguments[i];\n            if (useMediator) {\n                args[i] = itemMediator(arg, start + (i - 2));\n            } else {\n                args[i] = arg;\n            }\n\n            added[i - 2] = args[i];\n        }\n\n        // call original method\n        // TODO: Change array manually in splice method for better performance\n        const returns = apply(Array.prototype.splice, this, args);\n        // removed items mean returned items\n        const removed = returns;\n\n        // if something is added or removed\n        if (added.length || removed.length) {\n            const eventOptions = {\n                added,\n                removed,\n                method: 'splice',\n                self: this\n            };\n\n            // extend event options by custom event options if they are given\n            if (hasOptions) {\n                if (givenEventOptions && typeof givenEventOptions === 'object') {\n                    assign(eventOptions, givenEventOptions);\n                }\n            }\n\n            reportModified(this, eventOptions);\n        }\n\n        return toSeempleArray(returns);\n    };\n}\n","import apply from '../../_helpers/apply';\nimport reportModified from '../_reportmodified';\nimport seempleError from '../../_helpers/seempleerror';\nimport assign from '../../_helpers/assign';\n\nexport default function createCopyWithin(hasOptions) {\n    return function copyWithin() {\n        const originalCopyWithin = Array.prototype.copyWithin;\n\n        /* istanbul ignore if  */\n        if (typeof originalCopyWithin !== 'function') {\n            throw seempleError('array:nonexistent_method', { method: 'copyWithin' });\n        }\n        // +hasOptions is converted to 0 or 1 depending on its value (false/true)\n        const argsLength = arguments.length - +hasOptions;\n        const args = Array(argsLength);\n        const givenEventOptions = hasOptions ? arguments[arguments.length - 1] : null;\n\n        for (let i = 0; i < argsLength; i++) {\n            args[i] = arguments[i];\n        }\n\n        apply(originalCopyWithin, this, args);\n\n        const eventOptions = {\n            method: 'copyWithin',\n            self: this,\n            added: [],\n            removed: []\n        };\n\n        // extend event options by custom event options if they are given\n        if (hasOptions) {\n            if (givenEventOptions && typeof givenEventOptions === 'object') {\n                assign(eventOptions, givenEventOptions);\n            }\n        }\n\n        reportModified(this, eventOptions);\n\n        return this;\n    };\n}\n","import apply from '../../_helpers/apply';\nimport reportModified from '../_reportmodified';\nimport seempleError from '../../_helpers/seempleerror';\nimport assign from '../../_helpers/assign';\n\nexport default function createFill(hasOptions) {\n    return function fill(value) {\n        const originalFill = Array.prototype.fill;\n\n        /* istanbul ignore if  */\n        if (typeof originalFill !== 'function') {\n            throw seempleError('array:nonexistent_method', { method: 'fill' });\n        }\n        // +hasOptions is converted to 0 or 1 depending on its value (false/true)\n        const argsLength = arguments.length - +hasOptions;\n        const args = Array(argsLength);\n        const givenEventOptions = hasOptions ? arguments[arguments.length - 1] : null;\n\n        for (let i = 0; i < argsLength; i++) {\n            args[i] = arguments[i];\n        }\n\n        apply(originalFill, this, args);\n\n        const eventOptions = {\n            method: 'fill',\n            self: this,\n            added: [value],\n            removed: []\n        };\n\n        // extend event options by custom event options if they are given\n        if (hasOptions) {\n            if (givenEventOptions && typeof givenEventOptions === 'object') {\n                assign(eventOptions, givenEventOptions);\n            }\n        }\n\n        reportModified(this, eventOptions);\n\n        return this;\n    };\n}\n","import toSeempleArray from '../_toseemplearray';\nimport createSortingMethod from './createsortingmethod';\nimport createRemovingMethod from './createremovingmethod';\nimport createAddingMethod from './createaddingmethod';\nimport createSplice from './createsplice';\nimport createCopyWithin from './createcopywithin';\nimport createFill from './createfill';\nimport apply from '../../_helpers/apply';\nimport seempleError from '../../_helpers/seempleerror';\n\nconst arrayPrototype = Array.prototype;\n\n// creates pseudo native method and returns it (push, push_, sort, sort_...)\nexport default function createPseudoNativeMethod(name, hasOptions = false) {\n    switch (name) {\n        case 'forEach':\n            return function pseudoNativeMethod(callback, thisArg) {\n                arrayPrototype[name].call(this, callback, thisArg);\n                // return this for nicer chain calls\n                return this;\n            };\n        case 'map':\n        case 'filter':\n        case 'slice':\n            // TODO: Improve readability of pseudoNativeMethod, arguments \"a, b\" look not good\n            return function pseudoNativeMethod(a, b) {\n                return toSeempleArray(arrayPrototype[name].call(this, a, b));\n            };\n        case 'every':\n        case 'some':\n        case 'findIndex':\n        case 'find':\n            return function pseudoNativeMethod(callback, thisArg) {\n                const originalMethod = arrayPrototype[name];\n\n                /* istanbul ignore if  */\n                if (typeof originalMethod !== 'function') {\n                    throw seempleError('array:nonexistent_method', { method: name });\n                }\n                return originalMethod.call(this, callback, thisArg);\n            };\n        case 'join':\n            return function pseudoNativeMethod(separator = ',') {\n                return arrayPrototype[name].call(this, separator);\n            };\n        case 'indexOf':\n        case 'lastIndexOf':\n        case 'includes':\n            return function pseudoNativeMethod(searchElement, fromIndex) {\n                const originalMethod = arrayPrototype[name];\n\n                /* istanbul ignore if  */\n                if (typeof originalMethod !== 'function') {\n                    throw seempleError('array:nonexistent_method', { method: name });\n                }\n\n                if (typeof fromIndex === 'undefined') {\n                    return originalMethod.call(this, searchElement);\n                }\n\n                return originalMethod.call(this, searchElement, fromIndex);\n            };\n        case 'reduce':\n        case 'reduceRight':\n            return function pseudoNativeMethod() {\n                return apply(arrayPrototype[name], this, arguments);\n            };\n        case 'sort':\n        case 'reverse':\n            return createSortingMethod(name, hasOptions);\n        case 'pop':\n        case 'shift':\n            return createRemovingMethod(name, hasOptions);\n        case 'push':\n        case 'unshift':\n            return createAddingMethod(name, hasOptions);\n        case 'splice':\n            return createSplice(hasOptions);\n        case 'copyWithin':\n            return createCopyWithin(hasOptions);\n        case 'fill':\n            return createFill(hasOptions);\n        default:\n            return undefined;\n    }\n}\n","import createPseudoNativeMethod from './createpseudonativemethod';\nimport concat from './concat';\nimport keys from './keys';\nimport values from './values';\nimport entries from './entries';\n\nconst splitBySpaceReg = /\\s+/;\nconst methods = {\n    concat, keys, values, entries\n};\n\n`push pop unshift shift sort reverse splice map filter slice every some reduce reduceRight\nforEach join indexOf lastIndexOf copyWithin fill includes find findIndex`\n    .split(splitBySpaceReg).forEach((name) => {\n        methods[name] = createPseudoNativeMethod(name);\n    });\n\n'push pop unshift shift sort reverse splice copyWithin fill'\n    .split(splitBySpaceReg).forEach((name) => {\n        methods[`${name}_`] = createPseudoNativeMethod(name, true);\n    });\n\nexport default methods;\n","import apply from '../../_helpers/apply';\nimport forEach from '../../_helpers/foreach';\n\n\n// the method works just like Array.prototype.concat but\n// - flattens both Array and Seemple.Array\n// - returns Seemple.Array\nexport default function concat() {\n    // fix circular dependency issue\n    const SeempleArray = require('../').default;\n\n    const args = Array(arguments.length);\n\n    // convert all instances of Seemple.Array to Array\n    forEach(arguments, (arg, index) => {\n        if (arg && typeof arg === 'object' && arg.isSeempleArray) {\n            args[index] = arg.toJSON(false);\n        } else {\n            args[index] = arg;\n        }\n    });\n\n    // call original concat method\n    const nativeCallResult = apply(Array.prototype.concat, this.toJSON(false), args);\n\n    // convert returned value to Seemple.Array\n    const result = new SeempleArray();\n    forEach(nativeCallResult, (item, index) => {\n        result[index] = item;\n    });\n\n    result.length = nativeCallResult.length;\n\n    return result;\n}\n","// returns indexes\nexport default function keys() {\n    const { length } = this;\n    const result = new Array(length);\n\n    for (let i = 0; i < length; i++) {\n        result[i] = i;\n    }\n\n    return result;\n}\n","// returns values\nexport default function values() {\n    const { length } = this;\n    const result = new Array(length);\n\n    for (let i = 0; i < length; i++) {\n        result[i] = this[i];\n    }\n\n    return result;\n}\n","// returns pairs like [index, value]\nexport default function values() {\n    const { length } = this;\n    const result = new Array(length);\n\n    for (let i = 0; i < length; i++) {\n        result[i] = [i, this[i]];\n    }\n\n    return result;\n}\n","import assign from '../_helpers/assign';\nimport _afterInit from './_afterinit';\nimport mediateItem from './mediateitem';\nimport orderBy from './orderby';\nimport pull from './pull';\nimport recreate from './recreate';\nimport rerender from './rerender';\nimport restore from './restore';\nimport toJSON from './tojson';\nimport pseudoNativeMethods from './_pseudonativemethods';\nimport iterator from './iterator';\n\nconst symbolIterator = typeof Symbol === 'function' ? Symbol.iterator : '@@iterator';\n\nexport default assign({\n    _afterInit,\n    mediateItem,\n    orderBy,\n    pull,\n    recreate,\n    rerender,\n    restore,\n    toJSON,\n    length: 0,\n    isSeempleArray: true,\n    [symbolIterator]: iterator\n}, pseudoNativeMethods);\n","import initSeemple from '../_core/init';\n\n// creates item mediator\nfunction createItemMediator({\n    arr,\n    mediator\n}) {\n    return function itemMediator(value, index) {\n        // args: value, old value, index, array itself\n        return mediator.call(arr, value, index, arr);\n    };\n}\n\n// defines a \"type\" of every array item\nexport default function mediateItem(mediator) {\n    const def = initSeemple(this);\n    const { length } = this;\n\n    // store itemMediator in object definition\n    const itemMediator = def.itemMediator = createItemMediator({\n        arr: this,\n        mediator\n    });\n\n    // convert existing items\n    for (let i = 0; i < length; i++) {\n        this[i] = itemMediator(this[i], i);\n    }\n\n    return this;\n}\n","import cheapRecreate from '../_cheaprecreate';\nimport pureOrderBy from './_pureorderby';\nimport reportModified from '../_reportmodified';\n\n// sorts by properties of items\nexport default function orderBy(keys, orders, eventOptions = {}) {\n    if (this.length > 1) {\n        cheapRecreate(this, pureOrderBy(this, keys, orders));\n\n        reportModified(this, {\n            method: 'sort', // makes possible to listen \"sort\" event\n            self: this,\n            added: [],\n            removed: [],\n            ...eventOptions\n        });\n    }\n\n    return this;\n}\n","import initSeemple from '../../_core/init';\nimport reportModified from '../_reportmodified';\nimport updateTracked from './_updatetracked';\n\n// recreates an array\nexport default function recreate(givenNewItems = [], eventOptions = {}) {\n    const def = initSeemple(this);\n    const { itemMediator } = def;\n    const newLength = givenNewItems.length;\n    const oldLength = this.length;\n    const lengthDiff = oldLength - newLength;\n    const was = this.toJSON(false);\n    const { trackBy } = this;\n    const { skipItemMediator, silent, dontRender } = eventOptions;\n    let added;\n    let removed;\n    let newItems;\n\n    if (trackBy) {\n        // if trackBy property is given then update givenNewItems array\n        newItems = updateTracked({\n            arr: this,\n            givenNewItems,\n            trackBy\n        });\n    } else {\n        // if trackBy is not given then use given new items as is\n        newItems = givenNewItems;\n    }\n\n    // call item mediator for every new item (but don't modify passed newItems)\n    if (itemMediator && !skipItemMediator) {\n        const toMediate = newItems;\n        newItems = Array(newLength);\n        for (let i = 0; i < newLength; i++) {\n            newItems[i] = itemMediator(toMediate[i], i);\n        }\n    }\n\n    // update array indexes with new values\n    for (let i = 0; i < newLength; i++) {\n        this[i] = newItems[i];\n    }\n\n    // remove old items that is out of new length\n    for (let i = 0; i < lengthDiff; i++) {\n        delete this[i + newLength];\n    }\n\n    // update length\n    this.length = newLength;\n\n    if (silent && dontRender) {\n        return this;\n    }\n\n    // create an array of removed items\n    // TODO: Optimize creation of \"added\" and \"removed\" options in recreate method\n    // ... (do not use indexOf)\n    if (newLength) {\n        if (oldLength) {\n            removed = [];\n            for (let i = 0; i < oldLength; i++) {\n                if (!~newItems.indexOf(was[i])) {\n                    removed.push(was[i]);\n                }\n            }\n        } else {\n            removed = [];\n        }\n    } else {\n        removed = was;\n    }\n\n    // create an array of added items\n    if (oldLength) {\n        if (newLength) {\n            added = [];\n            for (let i = 0; i < newLength; i++) {\n                if (!~was.indexOf(newItems[i])) {\n                    added.push(newItems[i]);\n                }\n            }\n        } else {\n            added = [];\n        }\n    } else {\n        added = newItems;\n    }\n\n    reportModified(this, {\n        added,\n        removed,\n        method: 'recreate',\n        self: this,\n        ...eventOptions\n    });\n\n    return this;\n}\n","import processRendering from './_processrendering';\n\n// rerenders not rendered items in an array\n// force rerender when forceRerender event option is truthy\nexport default function rerender(eventOptions = {}) {\n    const { renderIfPossible = true } = this;\n    if (renderIfPossible) {\n        processRendering({\n            self: this,\n            eventOptions: {\n                method: 'rerender',\n                added: [],\n                removed: [],\n                ...eventOptions\n            }\n        });\n    }\n\n    return this;\n}\n","import initSeemple from '../_core/init';\nimport seempleError from '../_helpers/seempleerror';\nimport forEach from '../_helpers/foreach';\nimport bindNode from '../bindnode';\nimport triggerOne from '../trigger/_triggerone';\nimport getNodes from '../bindnode/_getnodes';\n\n// restores Seemple.Array from external nodes\nexport default function restore(selector, eventOptions = {}) {\n    const selfDef = initSeemple(this);\n    const { Model } = this;\n    const { silent } = eventOptions;\n    const newItems = [];\n    let nodes;\n\n    if (typeof selector === 'string') {\n        // get nodes by selector\n        nodes = getNodes(this, selector);\n    } else {\n        // get nodes from rendering container\n        const container = this.nodes.container || this.nodes.sandbox;\n\n        if (container) {\n            nodes = container.children;\n        } else {\n            // no container is bound, throw an error\n            throw seempleError('restore:no_nodes');\n        }\n    }\n\n    forEach(nodes, (node, index) => {\n        const item = Model ? new Model({}, this, index) : {}; // create new item\n        const { bindRenderedAsSandbox } = item;\n        const itemDef = initSeemple(item);\n\n        itemDef.renderedInArrays = {\n            [selfDef.id]: node\n        };\n\n        if (bindRenderedAsSandbox !== false) {\n            bindNode(item, 'sandbox', node, null, eventOptions);\n        }\n\n        if (!silent) {\n            // trigger needed events\n            const itemEventOptions = {\n                node,\n                self: item,\n                parentArray: this\n            };\n\n            const { onRender } = item;\n            const { onItemRender } = this;\n\n            if (onRender) {\n                onRender.call(item, itemEventOptions);\n            }\n\n            if (onItemRender) {\n                onItemRender.call(this, item, itemEventOptions);\n            }\n\n            triggerOne(item, 'render', itemEventOptions);\n\n            // call afterrender immediately because a node already exists in DOM tree\n            triggerOne(item, 'afterrender', itemEventOptions);\n        }\n\n        newItems.push(item);\n    });\n\n    // recreate an array but don't render newly added items\n    return this.recreate(newItems, {\n        dontRender: true,\n        ...eventOptions\n    });\n}\n","import forEach from '../_helpers/foreach';\n\n// converts Seemple.Array instance to ordinary array\nexport default function toJSON(recursive = true) {\n    const result = new Array(this.length);\n\n    forEach(this, (item, index) => {\n        // when recursive is true and when an item has toJSON method then call it recusively\n        if (recursive && item && typeof item.toJSON === 'function') {\n            result[index] = item.toJSON(true);\n        } else {\n            result[index] = item;\n        }\n    });\n\n    return result;\n}\n","// Symbol.iterator of Seemple.Array instances\nexport default function seempleArrayIterator() {\n    let i = 0;\n\n    return {\n        next: () => {\n            if (i > this.length - 1) {\n                return {\n                    done: true\n                };\n            }\n\n            return {\n                done: false,\n                value: this[i++] // eslint-disable-line no-plusplus\n            };\n        }\n    };\n}\n","import from from './from'; // lol\nimport of from './of';\n\nexport default {\n    of,\n    from\n};\n","import cheapRecreate from './_cheaprecreate';\nimport forEach from '../_helpers/foreach';\n\n// creates a new Seemple.Array instance with a variable number of arguments,\n// regardless of number or type of the arguments\nexport default function of() {\n    // allow to inherit this method by child classes\n    // require('./') fixes circular ref issue\n    const ParentClass = typeof this === 'function' ? this : require('./').default;\n\n    const result = new ParentClass();\n    const newItems = Array(arguments.length);\n\n    forEach(arguments, (item, index) => {\n        newItems[index] = arguments[index];\n    });\n\n    return cheapRecreate(result, newItems);\n}\n","import cheapRecreate from './_cheaprecreate';\n\n// creates a new Seemple.Array instance from an array-like or iterable object\nexport default function from(arrayLike, mapFn, thisArg) {\n    // allow to inherit this method by child classes\n    // require('./') fixes circular ref issue\n    const ParentClass = typeof this === 'function' ? this : require('./').default;\n\n    const result = new ParentClass();\n    const length = arrayLike.length;\n    const arrayFrom = Array.from;\n    let newItems;\n\n    /* istanbul ignore else */\n    if (typeof arrayFrom === 'function') {\n        // if Array.from exist, let it do all the job (work with iterable objects etc)\n        newItems = arrayFrom(arrayLike, mapFn, thisArg);\n    } else {\n        // convert array-like object for older browsers\n        // @IE\n        newItems = Array(length);\n\n        for (let i = 0; i < length; i++) {\n            if (typeof mapFn === 'function') {\n                newItems[i] = mapFn.call(thisArg, arrayLike[i], i, arrayLike);\n            } else {\n                newItems[i] = arrayLike[i];\n            }\n        }\n    }\n\n    return cheapRecreate(result, newItems);\n}\n","import Class from '../class';\nimport Seemple from '../seemple';\nimport instanceMembers from './_prototype';\nimport seempleError from '../_helpers/seempleerror';\nimport initSeemple from '../_core/init';\nimport staticMembers from './_staticmembers';\n\ninstanceMembers.extends = Seemple;\n\ninstanceMembers.constructor = function SeempleArray(length) {\n    if (!(this instanceof SeempleArray)) {\n        throw seempleError('common:call_class');\n    }\n\n    initSeemple(this);\n\n    // repeat the same logic as for native Array\n    if (arguments.length === 1 && typeof length === 'number') {\n        this.length = length;\n    } else if (arguments.length) {\n        this.recreate(arguments, {\n            silent: true,\n            dontRender: true\n        });\n    }\n\n    // return is used to make possible to chain super() calls\n    return this;\n};\n\nconst SeempleArray = Class(instanceMembers, staticMembers);\n\nexport default SeempleArray;\n","import triggerOne from '../../trigger/_triggerone';\nimport forEach from '../../_helpers/foreach';\n\n\n// the function is called when something is added to an array\n// it delegates asterisk listener for newly added items\nexport default function arrayAddHandler({ added }, {\n    path,\n    name,\n    callback,\n    context,\n    info\n} = triggerOne.latestEvent.info.delegatedData) {\n    forEach(added, (item) => {\n        if (item && typeof item === 'object') {\n            const delegateListener = require('./').default; // fixing circular ref\n\n            delegateListener(item, path, name, callback, context, info);\n        }\n    });\n}\n","import triggerOne from '../../trigger/_triggerone';\nimport defs from '../../_core/defs';\n\n// the function is called when data property is changed in Seemple.Object\n// it delegates asterisk listener for new value\nexport default function objectSetHandler({ key }, {\n    path,\n    name,\n    callback,\n    context,\n    info,\n    object\n} = triggerOne.latestEvent.info.delegatedData) {\n    if (key) {\n        const item = object[key];\n\n        if (item && typeof item === 'object') {\n            const def = defs.get(object);\n            if (key in def.keys) {\n                const delegateListener = require('./').default; // fixing circular ref\n\n                delegateListener(item, path, name, callback, context, info);\n            }\n        }\n    }\n}\n","import undelegateListener from '../../off/_undelegatelistener';\nimport triggerOne from '../../trigger/_triggerone';\nimport forEach from '../../_helpers/foreach';\n\n\n// the function is called when something is removed from an array\n// it undelegates asterisk listener from removed items\nexport default function arrayRemoveHandler({ removed }, {\n    path,\n    name,\n    callback,\n    context,\n    info\n} = triggerOne.latestEvent.info.delegatedData) {\n    if (removed && removed.length) {\n        forEach(removed, (item) => {\n            if (item && typeof item === 'object') {\n                undelegateListener(item, path, name, callback, context, info);\n            }\n        });\n    }\n}\n","import undelegateListener from '../../off/_undelegatelistener';\nimport triggerOne from '../../trigger/_triggerone';\n\n// the function is called when data property is removed from Seemple.Object\n// it undelegates asterisk listener from removed object\nexport default function objectRemoveHandler({ value: item }, {\n    path,\n    name,\n    callback,\n    context,\n    info\n    // , object\n} = triggerOne.latestEvent.info.delegatedData) {\n    if (item && typeof item === 'object') {\n        undelegateListener(item, path, name, callback, context, info);\n    }\n}\n","import undelegateListener from '../../off/_undelegatelistener';\nimport triggerOne from '../../trigger/_triggerone';\n\n// the function is called when some part of a path is changed\n// it delegates event listener for new branch of an object and undelegates it for old one\n// used for non-asterisk events\nexport default function changeHandler({\n    previousValue,\n    value\n}, {\n    path,\n    name,\n    callback,\n    context,\n    info\n} = triggerOne.latestEvent.info.delegatedData) {\n    if (value && typeof value === 'object') {\n        const delegateListener = require('./').default; // fixing circular ref\n\n        delegateListener(value, path, name, callback, context, info);\n    }\n\n    if (previousValue && typeof previousValue === 'object') {\n        undelegateListener(previousValue, path, name, callback, context, info);\n    }\n}\n","import addListener from '../_addlistener';\nimport defs from '../../_core/defs';\nimport arrayAddHandler from './arrayaddhandler';\nimport objectSetHandler from './objectsethandler';\nimport arrayRemoveHandler from './arrayremovehandler';\nimport objectRemoveHandler from './objectremovehandler';\nimport changeHandler from './changehandler';\nimport forOwn from '../../_helpers/forown';\n\n// adds delegated event listener to an object by given path\nexport default function delegateListener(object, givenPath, name, callback, context, info = {}) {\n    // if typeof path is string and path is not empty string then split it\n    let path = typeof givenPath === 'string' && givenPath !== '' ? givenPath.split('.') : givenPath;\n\n    if (!path || !path.length) {\n        // if no path then add simple listener\n        addListener(object, name, callback, context, info);\n    } else {\n        // else do all magic\n        const key = path[0];\n        let pathStr; // needed for undelegation\n\n        if (path.length > 1) {\n            path = path.slice(1);\n            pathStr = path.join('.');\n        } else {\n            path = [];\n            pathStr = path[0] || '';\n        }\n\n        const delegatedData = {\n            path,\n            name,\n            callback,\n            context,\n            info,\n            object\n        };\n\n        if (key === '*') {\n            // handling asterisk events\n            // { skipChecks: true } allows to use same event name and event handler few times\n            if (object.isSeempleArray) {\n                // the event is triggered when something is added to an array\n                addListener(object, '_asterisk:add', arrayAddHandler, null, {\n                    delegatedData,\n                    pathStr,\n                    skipChecks: true\n                });\n\n                // the event is triggered when something is removed from an array\n                addListener(object, '_asterisk:remove', arrayRemoveHandler, null, {\n                    delegatedData,\n                    pathStr,\n                    skipChecks: true\n                });\n\n                // call handler manually to delegate listener for currently existing data props\n                arrayAddHandler({\n                    added: object\n                }, delegatedData);\n            } else if (object.isSeempleObject) {\n                const def = defs.get(object);\n\n                // the event is triggered when data prop is changed\n                addListener(object, '_asterisk:set', objectSetHandler, null, {\n                    delegatedData,\n                    pathStr,\n                    skipChecks: true\n                });\n\n                // the event is triggered when data prop is removed\n                addListener(object, '_asterisk:remove', objectRemoveHandler, null, {\n                    delegatedData,\n                    pathStr,\n                    skipChecks: true\n                });\n\n                // delegate listener for currently existing data props\n                forOwn(def.keys, (_, defKey) => {\n                    const item = object[defKey];\n                    if (item && typeof item === 'object') {\n                        delegateListener(item, path, name, callback, context, info);\n                    }\n                });\n            }\n        } else {\n            // handling non-asterisk delegated event\n\n            // the event is triggered by \"set\"\n            addListener(object, `_change:delegated:${key}`, changeHandler, null, {\n                delegatedData,\n                pathStr\n            });\n\n            // call handler manually\n            changeHandler({\n                value: object[key]\n            }, delegatedData);\n        }\n    }\n}\n","import apply from './apply';\n\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds.\n// (c) https://davidwalsh.name/javascript-debounce-function\n\nexport default function debounce(func, givenDelay, thisArg) {\n    let timeout;\n    let delay;\n    if (typeof givenDelay !== 'number') {\n        thisArg = givenDelay; // eslint-disable-line no-param-reassign\n        delay = 0;\n    } else {\n        delay = givenDelay || 0;\n    }\n\n    return function debounced() {\n        const args = arguments;\n        const callContext = thisArg || this;\n\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => apply(func, callContext, args), delay);\n    };\n}\n","import addListener from '../on/_addlistener';\nimport addTreeListener from '../on/_addtreelistener';\nimport seempleError from '../_helpers/seempleerror';\n\n// adds a source to a source list and adds needed event listener to a it\nexport default function addSource({\n    calcHandler,\n    allSources,\n    sourceKey,\n    sourceObject,\n    eventOptions\n}) {\n    let { exactKey = false } = eventOptions;\n    let isDelegated = false;\n\n    // source key must be a string\n    if (typeof sourceKey !== 'string') {\n        throw seempleError('calc:source_key_type', { sourceKey });\n    }\n\n    // source object must be an object\n    if (!sourceObject || typeof sourceObject !== 'object') {\n        throw seempleError('calc:source_object_type', { sourceObject });\n    }\n\n    if (!exactKey) {\n        const deepPath = sourceKey.split('.');\n\n        // if something like a.b.c is used as a key\n        if (deepPath.length > 1) {\n            isDelegated = true;\n            // TODO: Avoid collisions with bindings by using another event name\n            // ... instead of _change:tree:xxx\n            addTreeListener(sourceObject, deepPath, calcHandler);\n        } else {\n            exactKey = true;\n        }\n    }\n\n\n    if (exactKey) {\n        // normal handler\n        addListener(sourceObject, `_change:deps:${sourceKey}`, calcHandler);\n    }\n\n    allSources.push({\n        sourceKey,\n        sourceObject,\n        isDelegated\n    });\n}\n","// gets value of a property in nested object\n// eg \"d\" from a.b.c.d\nexport default function deepFind(obj, givenPath) {\n    const paths = typeof givenPath === 'string' ? givenPath.split('.') : givenPath;\n    let current = obj;\n\n    for (let i = 0; i < paths.length; ++i) {\n        if (typeof current[paths[i]] === 'undefined') {\n            return undefined;\n        }\n\n        current = current[paths[i]];\n    }\n\n    return current;\n}\n","import initSeemple from '../_core/init';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport seempleError from '../_helpers/seempleerror';\nimport assign from '../_helpers/assign';\nimport debounce from '../_helpers/debounce';\nimport forEach from '../_helpers/foreach';\nimport forOwn from '../_helpers/forown';\nimport addSource from './_addsource';\nimport createCalcHandler from './_createcalchandler';\nimport defineProp from '../_core/defineprop';\n\n// defines a property which is dependend on other properties\nexport default function calc(object, target, sources, givenHandler, eventOptions) {\n    if (typeof this === 'object' && this.isSeemple) {\n        // when context is Seemple instance, use this as an object and shift other args\n        /* eslint-disable no-param-reassign */\n        eventOptions = givenHandler;\n        givenHandler = sources;\n        sources = target;\n        target = object;\n        object = this;\n        /* eslint-enable no-param-reassign */\n    } else {\n        // throw error when object type is wrong\n        checkObjectType(object, 'calc');\n    }\n\n    if (target instanceof Object) {\n        /*\n         * accept an object\n         * this.calc({target: { source, handler, event } }, commonEventOptions);\n         */\n        forOwn(target, ({\n            source: itemSource,\n            handler: itemHandler,\n            event: itemEventOptions\n        }, itemTarget) => {\n            const commonEventOptions = sources;\n            const mergedEventOptions = {};\n\n            if (commonEventOptions) {\n                // extend event object by \"global\" event\n                assign(mergedEventOptions, commonEventOptions);\n            }\n\n            if (itemEventOptions) {\n                // extend event object by \"local\" event (\"event\" key of an object)\n                assign(mergedEventOptions, itemEventOptions);\n            }\n\n            calc(object, itemTarget, itemSource, itemHandler, mergedEventOptions);\n        });\n\n        return object;\n    }\n\n    if (typeof target !== 'string') {\n        throw seempleError('calc:target_type', { target });\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const def = initSeemple(object);\n    const {\n        setOnInit = true,\n        debounceCalcOnInit = false,\n        debounceCalc = true,\n        debounceCalcDelay = 0,\n        // the next option is used to hide a property for internal use (eg in bindings parser)\n        // hidden property means no accessors\n        isTargetPropertyHidden = false\n    } = eventOptions;\n    const defaultHandler = value => value;\n    const handler = givenHandler || defaultHandler;\n    const allSources = [];\n    const syncCalcHandler = createCalcHandler({\n        object,\n        eventOptions,\n        allSources,\n        target,\n        def,\n        handler\n    });\n\n    let debouncedCalcHandler;\n    let calcHandler;\n\n    if (debounceCalcOnInit || debounceCalc) {\n        debouncedCalcHandler = debounce(syncCalcHandler, debounceCalcDelay);\n    }\n\n    defineProp(object, target, isTargetPropertyHidden);\n\n    if (!(sources instanceof Array)) {\n        sources = [sources]; // eslint-disable-line no-param-reassign\n    }\n\n    if (debounceCalc) {\n        calcHandler = debouncedCalcHandler;\n    } else {\n        calcHandler = syncCalcHandler;\n    }\n\n    forEach(sources, (source) => {\n        if (typeof source === 'string') {\n            // source object is current object\n            addSource({\n                calcHandler,\n                allSources,\n                sourceKey: source,\n                sourceObject: object,\n                eventOptions\n            });\n        } else {\n            // source object is external object\n            if (!source || typeof source !== 'object') {\n                throw seempleError('calc:source_type', { source });\n            }\n\n            const sourceKey = source.key;\n            const sourceObject = source.object;\n            if (sourceKey instanceof Array) {\n                // many keys are passed\n                forEach(sourceKey, (sourceKeyItem) => {\n                    addSource({\n                        calcHandler,\n                        allSources,\n                        sourceKey: sourceKeyItem,\n                        sourceObject,\n                        eventOptions\n                    });\n                });\n            } else {\n                // one key is passed\n                addSource({\n                    calcHandler,\n                    allSources,\n                    sourceKey,\n                    sourceObject,\n                    eventOptions\n                });\n            }\n        }\n    });\n\n    if (setOnInit) {\n        if (debounceCalcOnInit) {\n            debouncedCalcHandler();\n        } else {\n            syncCalcHandler();\n        }\n    }\n\n    return object;\n}\n","import set from '../set';\nimport deepFind from '../_helpers/deepfind';\nimport forEach from '../_helpers/foreach';\nimport apply from '../_helpers/apply';\n\n// creates event handler for target object which will be fired when a source is changed\nexport default function createCalcHandler({\n    object,\n    eventOptions,\n    allSources,\n    target,\n    def,\n    handler\n}) {\n    return function calcHandler(changeEvent = {}) {\n        const values = [];\n        const { protector = {} } = changeEvent;\n        const protectKey = target + def.id;\n        const { promiseCalc } = eventOptions;\n        const setEventOptions = {\n            protector,\n            ...eventOptions,\n            ...changeEvent\n        };\n\n        if (protectKey in protector) {\n            return;\n        }\n\n        protector[protectKey] = true;\n\n        forEach(allSources, ({\n            sourceObject,\n            sourceKey,\n            isDelegated\n        }) => {\n            const value = isDelegated ? deepFind(sourceObject, sourceKey) : sourceObject[sourceKey];\n            values.push(value);\n        });\n\n        let targetValue = apply(handler, object, values);\n\n        if (promiseCalc) {\n            if (!(targetValue instanceof Promise)) {\n                targetValue = Promise.resolve(targetValue);\n            }\n\n            targetValue\n                .then(promiseResult => set(object, target, promiseResult, setEventOptions))\n                .catch((e) => {\n                    throw Error(e);\n                });\n        } else {\n            set(object, target, targetValue, setEventOptions);\n        }\n    };\n}\n","import defaultBinders from './defaultbinders';\n\n// tries to find a binder for given node\nexport default function lookForBinder(node) {\n    for (let i = 0; i < defaultBinders.length; i++) {\n        const binder = defaultBinders[i].call(node, node);\n        if (binder) {\n            return binder;\n        }\n    }\n\n    return undefined;\n}\n","// Seemple initializer\nexport default function afterSeempleInit() {\n    this.nodes = {};\n    this.$nodes = {};\n}\n","// the regexp allows to parse things like \"click::x(.y)\"\n// it's shared between few modules\nexport default /([^::]+)::([^()]+)?(?:\\((.*)\\))?/;\n","import defs from '../_core/defs';\nimport toArray from '../_helpers/toarray';\nimport forEach from '../_helpers/foreach';\nimport dom from '../_dom';\n\nconst customSelectorReg = /\\s*:bound\\(([^(]*)\\)\\s*([\\S\\s]*)\\s*|\\s*:sandbox\\s*([\\S\\s]*)\\s*/;\nconst randomAttr = `${Math.random().toString().replace('0.', 'x')}y`; // x12345y\n\n// the function selects nodes based on a selector (including custom values, eg :sandbox)\n// TODO: selectNodes looks not good, it needs to be refactored and accelerated if possible\nexport default function selectNodes(object, givenSelector) {\n    const { props } = defs.get(object);\n    const selectors = givenSelector.split(',');\n    let result = dom.$();\n\n    forEach(selectors, (selector) => {\n        const execResult = customSelectorReg.exec(selector);\n        if (execResult) {\n            const boundKey = execResult[3] !== undefined ? 'sandbox' : execResult[1];\n            const subSelector = execResult[3] !== undefined ? execResult[3] : execResult[2];\n            const propDef = props[boundKey];\n\n            if (propDef) {\n                const { bindings } = propDef;\n                if (bindings) {\n                    const boundNodes = Array(bindings.length);\n                    forEach(bindings, (binding, i) => {\n                        boundNodes[i] = binding.node;\n                    });\n\n                    // if native selector passed after :bound(KEY) is not empty string\n                    // for example \":bound(KEY) .my-selector\"\n                    if (subSelector) {\n                        // if native selector contains children selector\n                        // for example \":bound(KEY) > .my-selector\"\n                        if (subSelector.indexOf('>') === 0) {\n                            // selecting children\n                            forEach(boundNodes, (node) => {\n                                node.setAttribute(randomAttr, randomAttr);\n                                const selected = node.querySelectorAll(`[${randomAttr}=\"${randomAttr}\"] ${subSelector}`);\n                                result = result.add(toArray(selected));\n                                node.removeAttribute(randomAttr);\n                            });\n                        } else {\n                            // if native selector doesn't contain children selector\n                            forEach(boundNodes, (node) => {\n                                const selected = node.querySelectorAll(subSelector);\n                                result = result.add(toArray(selected));\n                            });\n                        }\n                    } else {\n                        // if native selector is empty string just add bound nodes to result\n                        result = result.add(boundNodes);\n                    }\n                }\n            }\n        } else {\n            // if it's native selector (no custom things)\n            result = result.add(selector);\n        }\n    });\n\n    return result;\n}\n","import input from './binders/input';\nimport textarea from './binders/textarea';\nimport select from './binders/select';\nimport progress from './binders/progress';\nimport output from './binders/output';\n\n// defaultBinders collection by default contains only one function-checker\nexport default [(node) => {\n    switch (node.tagName) {\n        case 'INPUT':\n            return input(node.type);\n        case 'TEXTAREA':\n            return textarea();\n        case 'SELECT':\n            return select(node.multiple);\n        case 'PROGRESS':\n            return progress();\n        case 'OUTPUT':\n            return output();\n        default:\n            return null;\n    }\n}];\n","// brackets for bindings parser\nexport default {\n    left: '{{',\n    right: '}}'\n};\n","// determines whether two values are the same value\n/* istanbul ignore next */\n// eslint-disable-next-line\nconst isPolyfill = (v1, v2) => v1 === 0 && v2 === 0 ? 1 / v1 === 1 / v2 : v1 !== v1 && v2 !== v2 || v1 === v2;\n\nexport default Object.is || isPolyfill;\n","// cheap conversion of an array-like object to Array instance\nexport default function toArray(object, start = 0) {\n    const { length } = object;\n    const array = Array(length);\n\n    for (let i = start; i < length; i++) {\n        array[i - start] = object[i];\n    }\n\n    return array;\n}\n","// converts HTML string to NodeList instance\nexport default function html2nodeList(givenHTML) {\n    // wrapMap is taken from jQuery\n    const wrapMap = {\n        option: [1, '<select multiple=\"multiple\">', '</select>'],\n        legend: [1, '<fieldset>', '</fieldset>'],\n        thead: [1, '<table>', '</table>'],\n        tr: [2, '<table><tbody>', '</tbody></table>'],\n        td: [3, '<table><tbody><tr>', '</tr></tbody></table>'],\n        col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n        area: [1, '<map>', '</map>'],\n        _: [0, '', '']\n    };\n\n    const html = givenHTML.replace(/^\\s+|\\s+$/g, '');\n    let node = window.document.createElement('div');\n    let i;\n\n    wrapMap.optgroup = wrapMap.option;\n    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n    wrapMap.th = wrapMap.td;\n\n    const ex = /<([\\w:]+)/.exec(html);\n    const wrapper = (ex && wrapMap[ex[1]]) || wrapMap._;\n\n    node.innerHTML = wrapper[1] + html + wrapper[2];\n\n    i = wrapper[0];\n\n    while (i) {\n        i -= 1;\n        node = node.children[0];\n    }\n\n    return node.childNodes;\n}\n","import html2nodeList from './_html2nodelist';\n\nconst win = window;\n\n// function-constructor of mq library\n// accepts many kinds of arguments (selector, html, function)\nfunction MQInit(selector, context) {\n    let result;\n\n    if (selector) {\n        if (selector.nodeType || (typeof win === 'object' && selector === win)) {\n            result = [selector];\n        } else if (typeof selector === 'string') {\n            if (/</.test(selector)) {\n                result = html2nodeList(selector);\n            } else if (context) {\n                const newContext = (new MQInit(context))[0];\n\n                if (newContext) {\n                    result = newContext.querySelectorAll(selector);\n                }\n            } else {\n                result = win.document.querySelectorAll(selector);\n            }\n        } else if ('length' in selector) {\n            // if it's something array-like (eg NodeList)\n            result = selector;\n        } else {\n            // this is somethong another (eg Attr)\n            result = [selector];\n        }\n    }\n\n    const length = result && result.length;\n\n    if (length) {\n        for (let i = 0; i < length; i++) {\n            this.push(result[i]);\n        }\n    }\n\n    return this;\n}\n\nMQInit.prototype = [];\n\nexport default MQInit;\n","// an object allows to share data between modules; it's needed because we use\n// simplified ES modules there and cannot import and share a number\nexport default {\n    nodeIndex: 0,\n    allEvents: {}\n};\n","import data from './_data';\n\nconst splitBySpaceReg = /\\s+/;\nconst splitByDotReg = /\\.(.+)/;\nconst randomID = `${Math.random().toString().replace('0.', 'x')}y`; // x12345y\n\n// checks an element against a selector\nfunction is(node, selector) {\n    return (node.matches\n            || node.webkitMatchesSelector\n            || node.mozMatchesSelector\n            || node.msMatchesSelector\n            || node.oMatchesSelector).call(node, selector);\n}\n\n// the function is used when a selector is given\nfunction delegateHandler(evt, selector, handler) {\n    const scopeSelector = `[${randomID}=\"${randomID}\"] `;\n    const splittedSelector = selector.split(',');\n\n    let matching = '';\n\n    for (let i = 0; i < splittedSelector.length; i++) {\n        const sel = splittedSelector[i];\n        matching += `${i === 0 ? '' : ','}${scopeSelector}${sel},${scopeSelector}${sel} *`;\n    }\n\n\n    this.setAttribute(randomID, randomID);\n\n    if (is(evt.target, matching)) {\n        handler.call(this, evt);\n    }\n\n    this.removeAttribute(randomID);\n}\n\n// adds event listener to a set of elemnts\nexport default function on(namesStr, selector, handler) {\n    const names = namesStr.split(splitBySpaceReg);\n    let delegate;\n\n    if (typeof selector === 'function') {\n        handler = selector; // eslint-disable-line no-param-reassign\n        selector = null; // eslint-disable-line no-param-reassign\n    }\n\n    if (selector) {\n        delegate = function uniqueDelegateHandler(evt) {\n            delegateHandler.call(this, evt, selector, handler);\n        };\n    }\n\n    for (let i = 0; i < names.length; i++) {\n        const [name, namespace] = names[i].split(splitByDotReg);\n\n        for (let j = 0; j < this.length; j++) {\n            const node = this[j];\n            const nodeID = node.b$ = node.b$ || ++data.nodeIndex; // eslint-disable-line no-plusplus\n            const events = data.allEvents[name + nodeID] = data.allEvents[name + nodeID] || [];\n\n            let exist = false;\n\n            for (let k = 0; k < events.length; k++) {\n                const event = events[k];\n\n                if (handler === event.handler && (!selector || selector === event.selector)) {\n                    exist = true;\n                    break;\n                }\n            }\n\n            if (!exist) {\n                events.push({\n                    delegate,\n                    handler,\n                    namespace,\n                    selector,\n                    nodeID,\n                    name\n                });\n\n                node.addEventListener(name, delegate || handler, false);\n            }\n        }\n    }\n\n    return this;\n}\n","import data from './_data';\n\nconst splitBySpaceReg = /\\s+/;\nconst splitByDotReg = /\\.(.+)/;\n\n// removes event handler from a set of elements\nexport default function off(namesStr, selector, handler) {\n    if (typeof selector === 'function') {\n        handler = selector; // eslint-disable-line no-param-reassign\n        selector = null; // eslint-disable-line no-param-reassign\n    }\n\n    const names = namesStr.split(splitBySpaceReg);\n\n    for (let i = 0; i < names.length; i++) {\n        const [name, namespace] = names[i].split(splitByDotReg);\n\n        for (let j = 0; j < this.length; j++) {\n            const node = this[j];\n\n            if (!name && namespace) {\n                for (let k = 0, keys = Object.keys(data.allEvents); k < keys.length; k++) {\n                    const events = data.allEvents[keys[k]];\n\n                    for (let l = 0; l < events.length; l++) {\n                        const event = events[i];\n                        if (event.namespace === namespace && event.nodeID === node.b$) {\n                            node.removeEventListener(event.name, event.delegate || event.handler);\n                            events.splice(l, 1);\n                            l -= 1;\n                        }\n                    }\n                }\n\n                continue;\n            }\n\n            const events = data.allEvents[name + node.b$];\n            if (events) {\n                for (let k = 0; k < events.length; k++) {\n                    const event = events[k];\n                    if (\n                        (!handler || handler === event.handler || handler === event.delegate)\n                        && (!namespace || namespace === event.namespace)\n                        && (!selector || selector === event.selector)\n                    ) {\n                        node.removeEventListener(name, event.delegate || event.handler);\n                        events.splice(k, 1);\n                        k -= 1;\n                    }\n                }\n            } else if (!namespace && !selector) {\n                node.removeEventListener(name, handler);\n            }\n        }\n    }\n\n    return this;\n}\n","import Init from './_init';\nimport parseHTML from './parsehtml';\nimport on from './on';\nimport off from './off';\nimport add from './add';\nimport assign from '../../_helpers/assign';\n\n// tiny jQuery replacement for Seemple\nexport default function mq(selector, context) {\n    return new Init(selector, context);\n}\n\nmq.parseHTML = parseHTML;\n\nassign(Init.prototype, {\n    on,\n    off,\n    add\n});\n","import html2nodeList from './_html2nodelist';\nimport Init from './_init';\n\n// parses given HTML and returns mq instance\nexport default function parseHTML(html) {\n    return new Init(html2nodeList(html));\n}\n","import Init from './_init';\nimport data from './_data';\n\n// adds unique nodes to mq collection\nexport default function add(selector) {\n    const idMap = {};\n\n    let result;\n\n    const nodes = new Init(selector);\n\n    if (this.length) {\n        result = new Init();\n        for (let i = 0; i < this.length; i++) {\n            const node = this[i];\n            const nodeID = node.b$ = node.b$ || ++data.nodeIndex; // eslint-disable-line no-plusplus\n            idMap[nodeID] = 1;\n            result.push(node);\n        }\n\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n            const nodeID = node.b$ = node.b$ || ++data.nodeIndex; // eslint-disable-line no-plusplus\n            if (!idMap[nodeID]) {\n                idMap[nodeID] = 1;\n                result.push(node);\n            }\n        }\n    } else {\n        result = nodes;\n    }\n\n    return result;\n}\n","import input from './input';\n\n// returns a binder for textarea element\nexport default function textarea() {\n    // textarea behaves just like text input\n    return input('text');\n}\n","// returns a binder for select element\nexport default function select(multiple) {\n    if (multiple) {\n        return {\n            on: 'change',\n            getValue() {\n                const { options } = this;\n                const result = [];\n\n                for (let i = 0; options.length > i; i++) {\n                    if (options[i].selected) {\n                        result.push(options[i].value);\n                    }\n                }\n\n                return result;\n            },\n            setValue(givenValue) {\n                const { options } = this;\n                const value = typeof givenValue === 'string' ? [givenValue] : givenValue;\n                for (let i = options.length - 1; i >= 0; i--) {\n                    options[i].selected = ~value.indexOf(options[i].value);\n                }\n            }\n        };\n    }\n\n    return {\n        on: 'change',\n        getValue() {\n            return this.value;\n        },\n        setValue(value) {\n            this.value = value;\n\n            if (!value) {\n                const { options } = this;\n                for (let i = options.length - 1; i >= 0; i--) {\n                    if (!options[i].value) {\n                        options[i].selected = true;\n                        break;\n                    }\n                }\n            }\n        }\n    };\n}\n","import input from './input';\n\n// returns a binder for textarea element\nexport default function progress() {\n    return input();\n}\n","// returns a binder for output element\nexport default function output() {\n    return {\n        on: null,\n        getValue() {\n            return this.value || this.textContent;\n        },\n        setValue(value) {\n            const property = 'form' in this ? 'value' : 'textContent';\n            this[property] = value === null ? '' : `${value}`;\n        }\n    };\n}\n","import calc from '../calc';\nimport parserBrackets from '../parserbrackets';\n\nconst parserData = {};\n\n// since Seemple allows to change parser brackets via parserBrackets objects\n// the parser needs to generate required regular expressions and escaped brackets every time\n// when parseBindings is called\n// to optimize this behavior parserData object is created\n// it calculates needed data every time when parserBrackets are changed\n// and when parseBindings function is called it uses previously generated regeps\n// from parserData object\ncalc(parserData, {\n    leftBracket: {\n        source: {\n            object: parserBrackets,\n            key: 'left'\n        }\n    },\n    rightBracket: {\n        source: {\n            object: parserBrackets,\n            key: 'right'\n        }\n    },\n    escLeftBracket: {\n        source: 'leftBracket',\n        handler: left => left.replace(/(\\[|\\(|\\?)/g, '\\\\$1')\n    },\n    escRightBracket: {\n        source: 'rightBracket',\n        handler: right => right.replace(/(]|\\)|\\?)/g, '\\\\$1')\n    },\n    bindingReg: {\n        source: ['escLeftBracket', 'escRightBracket'],\n        handler: (left, right) => new RegExp(`${left}\\\\s*(.+?)\\\\s*${right}`, 'g')\n    },\n    strictBindingReg: {\n        source: ['escLeftBracket', 'escRightBracket'],\n        handler: (left, right) => new RegExp(`^${left}\\\\s*(.+?)\\\\s*${right}$`, 'g')\n    }\n}, {\n    debounceCalc: false // we need to get new regexps immediately when brackets are changed\n});\n\nexport default parserData;\n","import parserData from './_parserdata';\nimport bindNode from '../bindnode';\nimport forEach from '../_helpers/foreach';\n\n\nconst textNodeBinder = {\n    setValue(value) {\n        this.textContent = typeof value === 'undefined' ? '' : value;\n    }\n};\n\n// adds binding for text node\n// it splits up one text node into \"simple text nodes\"\n// and \"bound text nodes\" and removes original text node\nexport default function processTextNode({\n    object,\n    node,\n    textNode,\n    eventOptions\n}) {\n    const { bindingReg } = parserData;\n    const { textContent } = textNode;\n    const { document } = window;\n\n    bindingReg.lastIndex = 0;\n\n    // tokens variable contains normal text as odd items\n    // and bound keys as even items\n    // 'foo{{x}}bar{{y}}baz{{z}}' -> ['foo', 'x', 'bar', 'y', 'baz', 'z', '']\n    const tokens = textContent.split(bindingReg);\n\n    // fragment contains all new text nodes\n    const fragment = document.createDocumentFragment();\n\n    forEach(tokens, (token, index) => {\n        if (token) {\n            const newTextNode = document.createTextNode(token);\n            fragment.appendChild(newTextNode);\n\n            // if tokens item is even then it is a key\n            // which needs to be bound to newly created text node\n            if (index % 2 !== 0) {\n                bindNode(object, token, newTextNode, textNodeBinder, eventOptions);\n            }\n        }\n    });\n\n    node.insertBefore(fragment, textNode);\n    node.removeChild(textNode);\n}\n","import calc from '../../calc';\nimport parserData from '../_parserdata';\n\nconst hiddenPropertyPrefix = `${Math.random()}`.replace('0.', 'hidden');\nlet hiddenPropertyIndex = 0;\n\n// defines hiden (without accessors) computed property\n// that dependent on given properties ('keys') as text template describes\n// for example if text='{{x}} blah {{y}}', x='foo', y='bar'\n// then the new property should have value 'foo blah bar'\nexport default function defineHiddenContentProperty({\n    object,\n    keys,\n    text\n}) {\n    const key = `${hiddenPropertyPrefix}${hiddenPropertyIndex}`;\n    const regs = {};\n    const { escLeftBracket, escRightBracket } = parserData;\n\n    hiddenPropertyIndex += 1;\n\n    // create and cache regular expressions which will help us to\n    // change target property value quickly when sources are changed\n    // TODO: We need better parser!\n    for (let i = 0; i < keys.length; i++) {\n        regs[keys[i]] = new RegExp(`${escLeftBracket}\\\\s*${keys[i]}\\\\s*${escRightBracket}`, 'g');\n    }\n\n    calc(object, key, keys, function calcHandler() {\n        let value = text;\n\n        // replace things like {{x}} by actual values\n        for (let i = 0; i < keys.length; i++) {\n            value = value.replace(regs[keys[i]], arguments[i]);\n        }\n\n        return value;\n    }, {\n        isTargetPropertyHidden: true,\n        debounceCalc: false\n    });\n\n    return key;\n}\n","import parserData from '../_parserdata';\nimport defineHiddenContentProperty from './_definehiddencontentproperty';\n\n// analyzes string and returns only one key which will be actually bound to an attribute\nexport default function getBindingKey({\n    object,\n    text // for example 'Hello, {{x}}'\n}) {\n    const { strictBindingReg, bindingReg } = parserData;\n    const keys = [];\n\n    let execResult;\n    let key;\n\n    strictBindingReg.lastIndex = 0;\n    bindingReg.lastIndex = 0;\n\n    // extract keys given in parser brackers\n    // '{{x}} {{y}}' -> ['x', 'y']\n    while ((execResult = bindingReg.exec(text))) {\n        keys.push(execResult[1]);\n    }\n\n    if (keys.length === 1 && strictBindingReg.test(text)) {\n        // if there is only one key and if only binding substring is present in a text\n        // in other words '{{x}}' is given instead of '{{x}} {{y}}' or '{{x}}foo'\n        // then don't create computable property and use that key (eg 'x') for binding\n        key = keys[0];\n    } else {\n        // create hidden computable property\n        key = defineHiddenContentProperty({\n            object,\n            keys,\n            text\n        });\n    }\n\n    return key;\n}\n","import getBindingKey from './_getbindingkey';\nimport bindNode from '../../bindnode';\nimport lookForBinder from '../../lookforbinder';\n\n// a binder for instance of Attr\nconst attributeBinder = {\n    setValue(value) {\n        this.value = value;\n    }\n};\n\n// adds binding for an attribute\n// its logic is much harder than for text node\n// check out imported modules for more info\nexport default function processAttribute({\n    node,\n    attribute,\n    object,\n    eventOptions\n}) {\n    const { name, value } = attribute;\n    const { type } = node;\n    // get a key which will be actually bound to an attribute\n    // getBindingKey analyzes given value, creates computable property and returns its key\n    const key = getBindingKey({\n        object,\n        text: value\n    });\n    const probablyValueInput = name === 'value' && type !== 'checkbox' && type !== 'radio';\n    const probablyCheckableInput = name === 'checked' && (type === 'checkbox' || type === 'radio');\n\n    let defaultBinder;\n\n    if (probablyValueInput || probablyCheckableInput) {\n        defaultBinder = lookForBinder(node);\n    }\n\n    if (defaultBinder) {\n        // if deault binder is found then this is default HTML5 form element\n        // remove the attribute and use found binder\n        node.removeAttribute(name);\n        bindNode(object, key, node, defaultBinder, eventOptions);\n    } else {\n        // simply bind an attribute\n        bindNode(object, key, attribute, attributeBinder, eventOptions);\n    }\n}\n","import checkObjectType from '../_helpers/checkobjecttype';\nimport dom from '../_dom';\nimport parserData from './_parserdata';\nimport processTextNode from './_processtextnode';\nimport processAttribute from './_processattribute';\nimport getNodes from '../bindnode/_getnodes';\nimport forEach from '../_helpers/foreach';\nimport assign from '../_helpers/assign';\n\n// makes parsing of given node (node, $(nodes), selector, HTML)\n// and initializes bindings for attributes and text nodes which contain things like {{foo}}\nexport default function parseBindings(object, givenNodes, eventOptions) {\n    if (typeof this === 'object' && this.isSeemple) {\n        // when context is Seemple instance, use this as an object and shift other args\n        /* eslint-disable no-param-reassign */\n        eventOptions = givenNodes;\n        givenNodes = object;\n        object = this;\n        /* eslint-enable no-param-reassign */\n    } else {\n        // throw error when object type is wrong\n        checkObjectType(object, 'parseBindings');\n    }\n\n    const extendedEventOptions = {\n        // useExactBinder is little optimization\n        // without this option used binder is extended by default binder\n        useExactBinder: true,\n        fromParser: true,\n        setValueOnBind: true\n    };\n\n    if (typeof eventOptions === 'object') {\n        assign(extendedEventOptions, eventOptions);\n    }\n\n    let nodes;\n    const allNodes = [];\n    // extract all needed data from parserData\n    // check out what is parserData in its module\n    const {\n        leftBracket,\n        bindingReg\n    } = parserData;\n\n    if (typeof givenNodes === 'string') {\n        if (~givenNodes.indexOf('<')) {\n            // this is HTML\n            nodes = dom.$.parseHTML(givenNodes);\n            if (!~givenNodes.indexOf(leftBracket)) {\n                // if it doesn't include parser bracket then we don't need to check\n                // their existence for all included nodes in cycle below\n                return nodes;\n            }\n        } else {\n            // this is a selector\n            nodes = getNodes(object, givenNodes);\n        }\n    } else if (typeof givenNodes === 'object') {\n        // this is a node, nodeList or something else (eg array, jQuery instance etc)\n        nodes = dom.$(givenNodes);\n    }\n\n    // to make possible to not use recursion we're collecting all nodes to allNodes array\n    forEach(nodes, node => allNodes.push(node));\n\n    // on every cycle of array we're adding new descendants to allNodes\n    // increasing # of needed iterations\n    for (let i = 0; i < allNodes.length; i++) {\n        const node = allNodes[i];\n        const ELEMENT_NODE = 1;\n        const TEXT_NODE = 3;\n\n        // allow to parse elements only\n        if (node.nodeType !== ELEMENT_NODE) {\n            continue;\n        }\n\n        const {\n            outerHTML, innerHTML, childNodes, attributes\n        } = node;\n\n\n        // if outerHTML does't contain left bracket, then this node doesn't need to be parsed\n        // we may need to check outerHTML existence for older browsers\n        // we may need to add !~outerHTML.indexOf(encodeURI(leftBracket) to support old FF\n        if (!~outerHTML.indexOf(leftBracket)) {\n            continue;\n        }\n\n        // initialize bindings for attributes if they appear\n        if (attributes.length) {\n            // fixes Firefox issue: attributes.length can be changed by processAttribute\n            const attrs = attributes.length > 1\n                ? Array.prototype.slice.call(attributes)\n                : attributes;\n\n            forEach(attrs, (attribute) => {\n                if (bindingReg.test(attribute.value)) {\n                    processAttribute({\n                        node,\n                        attribute,\n                        object,\n                        eventOptions: extendedEventOptions\n                    });\n                }\n            });\n        }\n\n        // if innerHTML does't contain left bracket,\n        // then children of this node don't need to be parsed\n        // we may need to add !~innerHTML.indexOf(encodeURI(leftBracket) to support old FF\n        if (!~innerHTML.indexOf(leftBracket)) {\n            continue;\n        }\n\n        for (let j = 0; j < childNodes.length; j++) {\n            const childNode = childNodes[j];\n            const { nodeType, textContent } = childNode;\n\n            if (nodeType === ELEMENT_NODE) {\n                // if childNode is HTML element then add it to the end of allNodes array\n                // to check everything on next outer cycle iterations\n                allNodes.push(childNode);\n            } else if (nodeType === TEXT_NODE) {\n                // if childNode is text node which contains things like {{x}}\n                // then initialize bindings for this node\n                if (bindingReg.test(textContent)) {\n                    processTextNode({\n                        object,\n                        node,\n                        textNode: childNode,\n                        eventOptions: extendedEventOptions\n                    });\n                }\n            }\n        }\n    }\n\n    return nodes;\n}\n","import delegateListener from './_delegatelistener';\nimport removeTreeListener from '../off/_removetreelistener';\n\n// creates tree listener\nfunction createTreeListener({ handler, restPath }) {\n    const newHandler = function treeListener(changeEvent) {\n        const extendedChangeEvent = {\n            restPath,\n            ...changeEvent\n        };\n        const { previousValue, value } = changeEvent;\n\n        // removes listener for all branches of the path on old object\n        if (previousValue && typeof previousValue === 'object') {\n            removeTreeListener(previousValue, restPath, handler);\n        }\n\n        // adds listener for all branches of \"restPath\" path on newly assigned object\n        if (value && typeof value === 'object') {\n            addTreeListener(value, restPath, handler);\n        }\n\n        // call original handler\n        handler.call(this, extendedChangeEvent);\n    };\n\n    newHandler._callback = handler;\n\n    return newHandler;\n}\n\n// listens changes for all branches of given path\n// TODO: Pass context to addTreeListener\n// one of the most hard functions to understand\nexport default function addTreeListener(object, deepPath, handler) {\n    if (typeof deepPath === 'string') {\n        deepPath = deepPath.split('.'); // eslint-disable-line no-param-reassign\n    }\n\n    // iterate over all keys and delegate listener for all objects of given branch\n    for (let i = 0; i < deepPath.length; i++) {\n        // TODO: Array.prototype.slice method is slow\n        const listenPath = deepPath.slice(0, i);\n        const restPath = deepPath.slice(i + 1);\n\n        delegateListener(\n            object,\n            listenPath,\n            `_change:tree:${deepPath[i]}`,\n            createTreeListener({\n                handler,\n                restPath\n            })\n        );\n    }\n}\n","import undelegateListener from './_undelegatelistener';\n\n// removes tree listener from all object tree of fiven path\n// TODO: Pass context to removeTreeListener\nexport default function removeTreeListener(object, deepPath, handler) {\n    if (typeof deepPath === 'string') {\n        deepPath = deepPath.split('.'); // eslint-disable-line no-param-reassign\n    }\n\n    // iterate over keys of the path and undelegate given handler (can be undefined)\n    for (let i = 0; i < deepPath.length; i++) {\n        // TODO: Array.prototype.slice is slow\n        const listenedPath = deepPath.slice(0, i);\n\n        undelegateListener(\n            object,\n            listenedPath,\n            `_change:tree:${deepPath[i]}`,\n            handler\n        );\n    }\n}\n","import afterSeempleInit from '../seemple/_afterinit';\nimport addListener from '../on/_addlistener';\nimport triggerOne from '../trigger/_triggerone';\nimport defs from '../_core/defs';\n\n// called on _change:delegated\n// tiggers asterisk events logic by triggering _asterisk:set\nfunction changeDelegatedHandler(eventOptions = {}) {\n    const { key } = eventOptions;\n    const def = defs.get(this);\n\n    if (key && key in def.keys) {\n        triggerOne(this, '_asterisk:set', eventOptions);\n    }\n}\n\n// called on _delete:delegated\n// removes asterisk events logic by triggering _asterisk:remove\nfunction deleteDelegatedHandler(eventOptions = {}) {\n    const { key } = eventOptions;\n    const def = defs.get(this);\n\n    if (key && key in def.keys) {\n        triggerOne(this, '_asterisk:remove', eventOptions);\n    }\n}\n\n// called on change\n// triggers set and modify if data keys are changed\nfunction changeHandler(eventOptions = {}) {\n    const { key, silent } = eventOptions;\n    const def = defs.get(this);\n\n    if (key && key in def.keys && !silent) {\n        triggerOne(this, 'set', eventOptions);\n        triggerOne(this, 'modify', eventOptions);\n    }\n}\n\n// called on delete\n// triggers remove and modify if data keys are removed\nfunction deleteHandler(eventOptions = {}) {\n    const { key, silent } = eventOptions;\n    const def = defs.get(this);\n\n    if (key && key in def.keys) {\n        delete def.keys[key];\n\n        if (!silent) {\n            triggerOne(this, 'remove', eventOptions);\n            triggerOne(this, 'modify', eventOptions);\n        }\n    }\n}\n\n// Seemple.Object initializer\nexport default function afterSeempleObjectInit(def) {\n    // Seemple initializer\n    afterSeempleInit.call(this);\n    // create a set of data keys\n    def.keys = {};\n\n    // trigger asterisk events\n    addListener(this, '_change:delegated', changeDelegatedHandler);\n\n    // trigger asterisk events removal\n    addListener(this, '_delete:delegated', deleteDelegatedHandler);\n\n    // fire \"modify\" and \"set\" events when data key is changed\n    addListener(this, 'change', changeHandler);\n\n    // fire \"modify\" and \"remove\" events when data key is removed\n    addListener(this, 'delete', deleteHandler);\n}\n","import initSeemple from '../_core/init';\nimport defineProp from '../_core/defineprop';\nimport forOwn from '../_helpers/forown';\nimport set from '../set';\n\n// returns an array of keys listed at inObject but not listed at fromObject\nfunction getNotListedKeys(inObject, fromObject) {\n    const result = [];\n    forOwn(inObject, (_, key) => {\n        if (!(key in fromObject)) {\n            result.push(key);\n        }\n    });\n\n    return result;\n}\n\n// changes property value and adds given key to a list of data keys\nexport default function setData(key, value, eventOptions) {\n    // if no key or falsy key is given\n    if (!key) {\n        return this;\n    }\n\n    const { keys } = initSeemple(this);\n\n    // allow to pass key-value object\n    if (typeof key === 'object') {\n        eventOptions = value || {}; // eslint-disable-line no-param-reassign\n\n        const { replaceData } = eventOptions;\n\n        // do not call setData recursivally for better performance\n        forOwn(key, (objVal, objKey) => {\n            // remove data keys not listed at key-value object\n            if (replaceData) {\n                const notListedKeys = getNotListedKeys(keys, key);\n\n                if (notListedKeys.length) {\n                    this.removeDataKeys(notListedKeys);\n                }\n            }\n\n            // define descriptors for given property\n            defineProp(this, objKey);\n\n            // add a key to a list of keys\n            keys[objKey] = 1;\n\n            // do other things with set method\n            set(this, objKey, objVal, eventOptions);\n        });\n\n        return this;\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n\n    const { replaceData } = eventOptions;\n\n    // remove all data keys except given key\n    if (replaceData) {\n        const notListedKeys = getNotListedKeys(keys, { [key]: true });\n\n        if (notListedKeys.length) {\n            this.removeDataKeys(notListedKeys);\n        }\n    }\n\n    // define descriptors for given property\n    defineProp(this, key);\n\n    // add a key to a list of keys\n    keys[key] = 1;\n\n    // do other things with set method\n    return set(this, key, value, eventOptions);\n}\n","import _afterInit from './_afterinit';\nimport addDataKeys from './adddatakeys';\nimport removeDataKeys from './removedatakeys';\nimport isDataKey from './isdatakey';\nimport setData from './setdata';\nimport keyOf from './keyof';\nimport keys from './keys';\nimport values from './values';\nimport entries from './entries';\nimport toJSON from './tojson';\nimport each from './each';\nimport iterator from './iterator';\n\nconst symbolIterator = typeof Symbol === 'function' ? Symbol.iterator : '@@iterator';\n\nexport default {\n    _afterInit,\n    setData,\n    addDataKeys,\n    removeDataKeys,\n    isDataKey,\n    keys,\n    values,\n    entries,\n    keyOf,\n    toJSON,\n    each,\n    isSeempleObject: true,\n    jset: setData, // alias\n    [symbolIterator]: iterator\n};\n","import initSeemple from '../_core/init';\nimport defineProp from '../_core/defineprop';\nimport seempleError from '../_helpers/seempleerror';\nimport forEach from '../_helpers/foreach';\nimport triggerOne from '../trigger/_triggerone';\n\n// adds keys to a list of data keys\nexport default function addDataKeys(givenKeys) {\n    const { keys } = initSeemple(this);\n\n    let newKeys;\n\n    // accept an array keys or a list of args\n    if (givenKeys instanceof Array) {\n        newKeys = givenKeys;\n    } else {\n        newKeys = arguments;\n    }\n\n    forEach(newKeys, (key) => {\n        if (typeof key !== 'string') {\n            throw seempleError('adddatakeys:key_type', { key });\n        }\n\n        // if key is not in a list of keys\n        if (!(key in keys)) {\n            // define descriptors for this property\n            const { value } = defineProp(this, key);\n            const eventOptions = { key, value };\n\n            // add a key to the list of keys\n            keys[key] = true;\n\n            // trigger events which say that data is changed\n            triggerOne(this, 'set', eventOptions);\n            triggerOne(this, 'modify', eventOptions);\n        }\n    });\n\n    return this;\n}\n","import defs from '../_core/defs';\nimport triggerOne from '../trigger/_triggerone';\nimport seempleError from '../_helpers/seempleerror';\nimport forEach from '../_helpers/foreach';\n\n// removes given keys from a list of data keys\nexport default function removeDataKeys(givenKeys) {\n    const def = defs.get(this);\n\n    /* istanbul ignore if */\n    if (!def) {\n        return this;\n    }\n\n    const { keys } = def;\n    let removedKeys;\n\n    // accept an array keys or a list of args\n    if (givenKeys instanceof Array) {\n        removedKeys = givenKeys;\n    } else {\n        removedKeys = arguments;\n    }\n\n    forEach(removedKeys, (key) => {\n        if (typeof key !== 'string') {\n            throw seempleError('removedatakeys:key_type', { key });\n        }\n\n        if (key in keys) {\n            const eventOptions = {\n                key,\n                value: this[key]\n            };\n\n            delete keys[key];\n\n            // fire \"modify\" and \"remove\" events\n            triggerOne(this, 'modify', eventOptions);\n            triggerOne(this, 'remove', eventOptions);\n        }\n    });\n\n    return this;\n}\n","import defs from '../_core/defs';\n\n// checks is a key present in data keys list\nexport default function isDataKey(key) {\n    const def = defs.get(this);\n\n    /* istanbul ignore if */\n    if (!def) {\n        return false;\n    }\n\n    return key in def.keys;\n}\n","import defs from '../_core/defs';\n\n// returns an array which contains all data keys\nexport default function keys() {\n    const def = defs.get(this);\n\n    /* istanbul ignore if */\n    if (!def) {\n        return [];\n    }\n\n    return Object.keys(def.keys);\n}\n","import defs from '../_core/defs';\n\n// returns an array which contains all data values\nexport default function keys() {\n    const def = defs.get(this);\n\n    /* istanbul ignore if */\n    if (!def) {\n        return [];\n    }\n\n    const keysArr = Object.keys(def.keys);\n    const { length } = keysArr;\n    const result = new Array(length);\n\n    for (let i = 0; i < keysArr.length; i++) {\n        result[i] = this[keysArr[i]];\n    }\n\n    return result;\n}\n","import defs from '../_core/defs';\n\n// returns an array which contains things like [key, value]\nexport default function keys() {\n    const def = defs.get(this);\n\n    /* istanbul ignore if */\n    if (!def) {\n        return [];\n    }\n\n    const keysArr = Object.keys(def.keys);\n    const { length } = keysArr;\n    const result = new Array(length);\n\n    for (let i = 0; i < keysArr.length; i++) {\n        const key = keysArr[i];\n        result[i] = [key, this[key]];\n    }\n\n    return result;\n}\n","import defs from '../_core/defs';\n\n// iterates over data keys looking for a property with given value\n// and returns a key of found property\nexport default function keyOf(value) {\n    const def = defs.get(this);\n\n    /* istanbul ignore if */\n    if (!def) {\n        return null;\n    }\n\n    const keysArray = Object.keys(def.keys);\n\n    for (let i = 0; i < keysArray.length; i++) {\n        const key = keysArray[i];\n        if (this[key] === value) {\n            return key;\n        }\n    }\n\n    return null;\n}\n","import initSeemple from '../_core/init';\nimport forOwn from '../_helpers/forown';\n\n// converts Seemple.Object instance to ordinary object\nexport default function toJSON(recursive = true) {\n    const { keys } = initSeemple(this);\n    const result = {};\n\n    forOwn(keys, (_, key) => {\n        const value = this[key];\n        // when recursive is true and when value has toJSON method then call it recusively\n        if (recursive && value && typeof value.toJSON === 'function') {\n            result[key] = value.toJSON(true);\n        } else {\n            result[key] = value;\n        }\n    });\n\n    return result;\n}\n","import defs from '../_core/defs';\nimport forOwn from '../_helpers/forown';\n\n// iterates over data keys and calls callback on every iteration\n// @IE for..of is preferable and the method will be removed in one of major versions\nexport default function each(callback, thisArg) {\n    const def = defs.get(this);\n    const ctx = typeof thisArg !== 'undefined' ? thisArg : this;\n\n    /* istanbul ignore if */\n    if (!def) {\n        return this;\n    }\n\n    forOwn(def.keys, (_, key) => {\n        callback.call(ctx, this[key], key, this);\n    });\n\n    return this;\n}\n","// Symbol.iterator of Seemple.Object instances\nexport default function seempleObjectIterator() {\n    const keys = this.keys();\n    let i = 0;\n\n    return {\n        next: () => {\n            if (i > keys.length - 1) {\n                return { done: true };\n            }\n\n            return {\n                done: false,\n                value: this[keys[i++]] // eslint-disable-line no-plusplus\n            };\n        }\n    };\n}\n","import Class from '../class';\nimport Seemple from '../seemple';\nimport instanceMembers from './_prototype';\nimport seempleError from '../_helpers/seempleerror';\nimport initSeemple from '../_core/init';\n\ninstanceMembers.extends = Seemple;\n\ninstanceMembers.constructor = function SeempleObject(data) {\n    if (!(this instanceof SeempleObject)) {\n        throw seempleError('common:call_class');\n    }\n\n    initSeemple(this);\n\n    // return is used to make possible to chain super() calls\n    return typeof data !== 'undefined' ? this.setData(data) : this;\n};\n\nconst SeempleObject = Class(instanceMembers);\n\nexport default SeempleObject;\n","import Seemple from './seemple';\nimport SeempleArray from './array';\nimport SeempleObject from './object';\n\nSeemple.Object = SeempleObject;\nSeemple.Array = SeempleArray;\n\nexport default Seemple;\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","import defs from '../_core/defs';\nimport removeListener from './_removelistener';\nimport dom from '../_dom';\nimport forEach from '../_helpers/foreach';\n\n// removes dom listener from nodes bound to given key\nexport default function removeDomListener(\n    object,\n    key,\n    eventName,\n    selector,\n    callback,\n    context,\n    info\n) {\n    const def = defs.get(object);\n\n    if (!def) {\n        return object;\n    }\n\n    const { props } = def;\n    const propDef = props[key];\n\n    if (!propDef) {\n        return object;\n    }\n\n    const { bindings } = propDef;\n\n    if (bindings) {\n        // collect bound nodes and remove DOM event listener\n        const nodes = Array(bindings.length);\n        const eventNamespace = def.id + key;\n\n        forEach(bindings, (binding, index) => {\n            nodes[index] = binding.node;\n        });\n\n        dom.$(nodes).off(`${eventName}.${eventNamespace}`, selector, callback);\n    }\n\n    // remove bind and unbind listeners from given key\n    removeListener(object, `bind:${key}`, callback, context, info);\n    removeListener(object, `unbind:${key}`, callback, context, info);\n\n    return object;\n}\n","\"use strict\";\n\n// returns a binder for innerHTML of an element\nmodule.exports = html;\n\nfunction html(mappingFn) {\n  return {\n    on: 'input',\n    // the event name fires only in contenteditable mode\n    getValue: function () {\n      return this.innerHTML;\n    },\n    setValue: function (value) {\n      var val = typeof mappingFn === 'function' ? mappingFn(value) : value;\n\n      if (val instanceof window.HTMLElement) {\n        this.innerHTML = '';\n        this.appendChild(val);\n      } else {\n        this.innerHTML = \"\" + val;\n      }\n    }\n  };\n}","\"use strict\";\n\n//  returns a binder to switch visibility of an element\nmodule.exports = display;\n\nfunction display() {\n  var switcher = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  return {\n    on: null,\n    getValue: function () {\n      var value = this.style.display || window.getComputedStyle(this).getPropertyValue('display');\n      var none = value === 'none';\n      return switcher ? !none : none;\n    },\n    setValue: function (value) {\n      var style = this.style;\n\n      if (typeof switcher === 'function') {\n        style.display = switcher(value) ? '' : 'none';\n      } else if (switcher) {\n        style.display = value ? '' : 'none';\n      } else {\n        style.display = value ? 'none' : '';\n      }\n    }\n  };\n}","\"use strict\";\n\nvar _classlist = require('./_classlist');\n\nvar toggle = _classlist.toggle;\nvar contains = _classlist.contains;\n// returns a binder for className of an element\n// switcher makes possible to turn property value\nmodule.exports = className;\n\nfunction className(elementClassName) {\n  var switcher = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return {\n    on: null,\n    getValue: function () {\n      var value = contains(this, elementClassName);\n      return switcher ? value : !value;\n    },\n    setValue: function (value) {\n      toggle(this, elementClassName, switcher ? !!value : !value);\n    }\n  };\n}","\"use strict\";\n\n// @IE9\nvar add;\nvar remove;\nvar contains; // eslint-disable-line import/no-mutable-exports\n\n/* istanbul ignore else */\n\nif (window.document.createElement('div').classList) {\n  add = function (node, name) {\n    return node.classList.add(name);\n  };\n\n  remove = function (node, name) {\n    return node.classList.remove(name);\n  };\n\n  contains = function (node, name) {\n    return node.classList.contains(name);\n  };\n} else {\n  add = function (node, name) {\n    var re = new RegExp(\"(^|\\\\s)\" + name + \"(\\\\s|$)\", 'g');\n\n    if (!re.test(node.className)) {\n      node.className = (node.className + \" \" + name).replace(/\\s+/g, ' ').replace(/(^ | $)/g, '');\n    }\n  };\n\n  remove = function (node, name) {\n    var re = new RegExp(\"(^|\\\\s)\" + name + \"(\\\\s|$)\", 'g');\n    node.className = node.className.replace(re, '$1').replace(/\\s+/g, ' ').replace(/(^ | $)/g, '');\n  };\n\n  contains = function (node, name) {\n    return new RegExp(\"(\\\\s|^)\" + name + \"(\\\\s|$)\").test(node.className);\n  };\n}\n\nvar toggle = function (node, name, switcher) {\n  if (switcher) {\n    add(node, name);\n  } else {\n    remove(node, name);\n  }\n};\n\nexports.toggle = toggle;\nexports.contains = contains;","\"use strict\";\n\n// returns a binder to change properties of an element\nmodule.exports = prop;\n\nfunction prop(propertyName, mappingFn) {\n  return {\n    on: null,\n    getValue: function () {\n      return this[propertyName];\n    },\n    setValue: function (value) {\n      var val = typeof mappingFn === 'function' ? mappingFn(value) : value; // in case when you're trying to set read-only property\n\n      try {\n        this[propertyName] = val;\n      } catch (e) {// cannot set given property (eg tagName)\n      }\n    }\n  };\n}","\"use strict\";\n\n// returns a binder for element attribute\nmodule.exports = attr;\n\nfunction attr(attributeName, mappingFn) {\n  return {\n    on: null,\n    getValue: function () {\n      return this.getAttribute(attributeName);\n    },\n    setValue: function (value) {\n      var val = typeof mappingFn === 'function' ? mappingFn(value) : value;\n      this.setAttribute(attributeName, val);\n    }\n  };\n}","\"use strict\";\n\n// returns a binder for textContent of an element\nmodule.exports = text;\n\nfunction text(mappingFn) {\n  return {\n    on: 'input',\n    // the event name fires only in contenteditable mode\n    getValue: function () {\n      return this.textContent;\n    },\n    setValue: function (value) {\n      var val = typeof mappingFn === 'function' ? mappingFn(value) : value;\n      this.textContent = \"\" + val;\n    }\n  };\n}","\"use strict\";\n\n// returns a binder for style properties\nmodule.exports = style;\n\nfunction style(property, mappingFn) {\n  return {\n    on: null,\n    getValue: function () {\n      return this.style[property] || window.getComputedStyle(this).getPropertyValue(property);\n    },\n    setValue: function (value) {\n      var val = typeof mappingFn === 'function' ? mappingFn(value) : value;\n      this.style[property] = val;\n    }\n  };\n}","\"use strict\";\n\n// replace namesLikeThis with names-like-this\nvar replacer = function (u) {\n  return \"-\" + u.toLowerCase();\n};\n\nvar toDashed = function (name) {\n  return \"data-\" + name.replace(/([A-Z])/g, replacer);\n}; //  returns a binder for dataset of an element\n// old browsers are also supported @IE9 @IE10\n\n\nmodule.exports = dataset;\n\nfunction dataset(prop, mappingFn) {\n  return {\n    on: null,\n    getValue: function () {\n      if (this.dataset) {\n        return this.dataset[prop];\n      }\n      /* istanbul ignore next */\n\n\n      return this.getAttribute(toDashed(prop));\n    },\n    setValue: function (value) {\n      var val = typeof mappingFn === 'function' ? mappingFn(value) : value;\n\n      if (this.dataset) {\n        this.dataset[prop] = val;\n      } else {\n        /* istanbul ignore next */\n        this.setAttribute(toDashed(prop), val);\n      }\n    }\n  };\n}","\"use strict\";\n\nmodule.exports = existence;\n\nfunction existence() {\n  var switcher = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var comment;\n  return {\n    setValue: function (value) {\n      var node = this;\n      var tagName = node.tagName,\n          id = node.id,\n          classList = node.classList,\n          className = node.className;\n\n      if (!comment) {\n        var commentText = tagName;\n\n        if (id) {\n          commentText += \"#\" + id;\n        }\n\n        if (className) {\n          commentText += \".\" + [].slice.apply(classList).join('.');\n        }\n\n        comment = window.document.createComment(commentText);\n      }\n\n      if (typeof switcher === 'function') {\n        value = switcher(value); // eslint-disable-line no-param-reassign\n      } else if (!switcher) {\n        value = !value; // eslint-disable-line no-param-reassign\n      }\n\n      if (value) {\n        delete node.__replacedByNode;\n\n        if (comment.parentNode) {\n          comment.parentNode.insertBefore(node, comment);\n          comment.parentNode.removeChild(comment);\n        }\n      }\n\n      if (!value) {\n        node.__replacedByNode = comment;\n\n        if (node.parentNode) {\n          node.parentNode.insertBefore(comment, node);\n          node.parentNode.removeChild(node);\n        }\n      }\n    }\n  };\n}","import initSeemple from '../_core/init';\nimport defineProp from '../_core/defineprop';\nimport addListener from './_addlistener';\nimport dom from '../_dom';\nimport createDomEventHandler from './_createdomeventhandler';\nimport forEach from '../_helpers/foreach';\n\n// returns an object with event handlers used at addDomListener\nfunction createBindingHandlers({\n    fullEventName,\n    domEventHandler,\n    selector\n}) {\n    return {\n        bindHandler(evt = {}) {\n            const { node } = evt;\n            if (node) {\n                dom.$(node).on(fullEventName, selector, domEventHandler);\n            }\n        },\n        unbindHandler(evt = {}) {\n            const { node } = evt;\n            if (node) {\n                dom.$(node).off(fullEventName, selector, domEventHandler);\n            }\n        }\n    };\n}\n\n// adds DOM event listener for nodes bound to given property\nexport default function addDomListener(object, key, eventName, selector, callback, context, info) {\n    const def = initSeemple(object);\n    const propDef = defineProp(object, key);\n\n    const domEventHandler = createDomEventHandler({\n        key,\n        object,\n        callback,\n        context: context || object\n    });\n\n    // making possible to remove this event listener\n    domEventHandler._callback = callback;\n\n    const eventNamespace = def.id + key;\n    const fullEventName = `${eventName}.${eventNamespace}`;\n    const { bindHandler, unbindHandler } = createBindingHandlers({\n        fullEventName,\n        domEventHandler,\n        selector\n    });\n    const addBindListenerResult = addListener(object, `bind:${key}`, bindHandler, context, info);\n    const addUnbindListenerResult = addListener(object, `unbind:${key}`, unbindHandler, context, info);\n\n    // if events are added successfully then run bindHandler for every node immediately\n    // TODO: Describe why do we need addBindListenerResult and addUnbindListenerResult\n    if (addBindListenerResult && addUnbindListenerResult) {\n        const { bindings } = propDef;\n        if (bindings) {\n            forEach(bindings, ({ node }) => bindHandler({ node }));\n        }\n    }\n\n    return object;\n}\n","import apply from '../_helpers/apply';\n// returns DOM event handler\nexport default function createDomEventHandler({\n    key,\n    object,\n    callback,\n    context\n}) {\n    return function domEventHandler(domEvent) {\n        const originalEvent = domEvent.originalEvent || domEvent;\n        // seempleTriggerArgs are created when DOM event is triggered by trigger method\n        const triggerArgs = originalEvent.seempleTriggerArgs;\n        const {\n            which, target, ctrlKey, altKey\n        } = domEvent;\n\n        if (triggerArgs) {\n            // if args are passed to trigger method then pass them to an event handler\n            apply(callback, context, triggerArgs);\n        } else {\n            // use the following object as an arg for event handler\n            callback.call(context, {\n                self: object,\n                node: this,\n                preventDefault: () => domEvent.preventDefault(),\n                stopPropagation: () => domEvent.stopPropagation(),\n                key,\n                domEvent,\n                originalEvent,\n                which,\n                target,\n                ctrlKey,\n                altKey\n            });\n        }\n    };\n}\n"],"sourceRoot":""}